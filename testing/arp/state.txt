WantPropertyElement <RDF:li> RDF:parseType='Literal' RDF:parseType='Resource' $ ?
WantPropertyElement <eg:Goo> RDF:parseType='Literal' RDF:parseType='Resource' $ ?
LookingForRDF <RDF:RDF> RDF:parseType='Resource' $ ?
RDFCollection <RDF:Description> RDF:parseType='Resource' $ ?
WantTopLevelDescription <RDF:Description> RDF:parseType='Resource' $ ?
WantLiteralValueOrDescription <RDF:Description> RDF:parseType='Resource' $ ?
RDFCollection <eg:Goo> RDF:parseType='Resource' $ ?
WantTopLevelDescription <eg:Goo> RDF:parseType='Resource' $ ?
WantLiteralValueOrDescription <eg:Goo> RDF:parseType='Resource' $ ?
LookingForRDF <RDF:RDF> RDF:parseType='Literal' $ ?
RDFCollection <RDF:Description> RDF:parseType='Literal' $ ?
WantTopLevelDescription <RDF:Description> RDF:parseType='Literal' $ ?
WantLiteralValueOrDescription <RDF:Description> RDF:parseType='Literal' $ ?
RDFCollection <eg:Goo> RDF:parseType='Literal' $ ?
WantTopLevelDescription <eg:Goo> RDF:parseType='Literal' $ ?
WantLiteralValueOrDescription <eg:Goo> RDF:parseType='Literal' $ ?
WantPropertyElement <RDF:li> RDF:parseType='Resource' RDF:parseType='Collection' $ ?
WantPropertyElement <eg:Goo> RDF:parseType='Resource' RDF:parseType='Collection' $ ?
WantPropertyElement <RDF:li> RDF:parseType='Literal' RDF:parseType='Collection' $ ?
WantPropertyElement <eg:Goo> RDF:parseType='Literal' RDF:parseType='Collection' $ ?
LookingForRDF <RDF:RDF> RDF:parseType='Collection' $ ?
RDFCollection <RDF:Description> RDF:parseType='Collection' $ ?
WantTopLevelDescription <RDF:Description> RDF:parseType='Collection' $ ?
WantLiteralValueOrDescription <RDF:Description> RDF:parseType='Collection' $ ?
RDFCollection <eg:Goo> RDF:parseType='Collection' $ ?
WantTopLevelDescription <eg:Goo> RDF:parseType='Collection' $ ?
WantLiteralValueOrDescription <eg:Goo> RDF:parseType='Collection' $ ?
WantTypedLiteral <RDF:RDF> $ ?
RDFCollection <RDF:RDF> $ ?
WantTopLevelDescription <RDF:RDF> $ ?
WantLiteralValueOrDescription <RDF:RDF> $ ?
WantPropertyElement <RDF:RDF> $ ?
WantEmpty <RDF:RDF> $ ?
WantTypedLiteral <RDF:li> $ ?
RDFCollection <RDF:li> $ ?
WantTopLevelDescription <RDF:li> $ ?
WantLiteralValueOrDescription <RDF:li> $ ?
WantEmpty <RDF:li> $ ?
WantTypedLiteral <RDF:Description> $ ?
WantPropertyElement <RDF:Description> $ ?
WantEmpty <RDF:Description> $ ?
WantTypedLiteral <eg:Goo> $ ?
WantEmpty <eg:Goo> $ ?
LookingForRDF <RDF:RDF> RDF:ID $ ?
RDFCollection <RDF:Description> RDF:about RDF:ID $ ?
WantTopLevelDescription <RDF:Description> RDF:about RDF:ID $ ?
WantLiteralValueOrDescription <RDF:Description> RDF:about RDF:ID $ ?
RDFCollection <eg:Goo> RDF:about RDF:ID $ ?
WantTopLevelDescription <eg:Goo> RDF:about RDF:ID $ ?
WantLiteralValueOrDescription <eg:Goo> RDF:about RDF:ID $ ?
WantPropertyElement <RDF:li> RDF:parseType='Resource' RDF:nodeID $ ?
WantPropertyElement <eg:Goo> RDF:parseType='Resource' RDF:nodeID $ ?
WantPropertyElement <RDF:li> RDF:parseType='Literal' RDF:nodeID $ ?
WantPropertyElement <eg:Goo> RDF:parseType='Literal' RDF:nodeID $ ?
WantPropertyElement <RDF:li> RDF:parseType='Collection' RDF:nodeID $ ?
WantPropertyElement <eg:Goo> RDF:parseType='Collection' RDF:nodeID $ ?
LookingForRDF <RDF:RDF> RDF:nodeID $ ?
RDFCollection <RDF:Description> RDF:ID RDF:nodeID $ ?
WantTopLevelDescription <RDF:Description> RDF:ID RDF:nodeID $ ?
WantLiteralValueOrDescription <RDF:Description> RDF:ID RDF:nodeID $ ?
RDFCollection <eg:Goo> RDF:ID RDF:nodeID $ ?
WantTopLevelDescription <eg:Goo> RDF:ID RDF:nodeID $ ?
WantLiteralValueOrDescription <eg:Goo> RDF:ID RDF:nodeID $ ?
RDFCollection <RDF:Description> RDF:about RDF:nodeID $ ?
WantTopLevelDescription <RDF:Description> RDF:about RDF:nodeID $ ?
WantLiteralValueOrDescription <RDF:Description> RDF:about RDF:nodeID $ ?
RDFCollection <eg:Goo> RDF:about RDF:nodeID $ ?
WantTopLevelDescription <eg:Goo> RDF:about RDF:nodeID $ ?
WantLiteralValueOrDescription <eg:Goo> RDF:about RDF:nodeID $ ?
LookingForRDF <RDF:RDF> RDF:bagID $ ?
WantPropertyElement <RDF:li> RDF:bagID $ ?
RDFCollection <RDF:Description> RDF:bagID $ ?
WantTopLevelDescription <RDF:Description> RDF:bagID $ ?
WantLiteralValueOrDescription <RDF:Description> RDF:bagID $ ?
RDFCollection <eg:Goo> RDF:bagID $ ?
WantTopLevelDescription <eg:Goo> RDF:bagID $ ?
WantLiteralValueOrDescription <eg:Goo> RDF:bagID $ ?
WantPropertyElement <eg:Goo> RDF:bagID $ ?
WantPropertyElement <RDF:li> RDF:parseType='Resource' RDF:resource $ ?
WantPropertyElement <eg:Goo> RDF:parseType='Resource' RDF:resource $ ?
WantPropertyElement <RDF:li> RDF:parseType='Literal' RDF:resource $ ?
WantPropertyElement <eg:Goo> RDF:parseType='Literal' RDF:resource $ ?
WantPropertyElement <RDF:li> RDF:parseType='Collection' RDF:resource $ ?
WantPropertyElement <eg:Goo> RDF:parseType='Collection' RDF:resource $ ?
LookingForRDF <RDF:RDF> RDF:resource $ ?
RDFCollection <RDF:Description> RDF:resource $ ?
WantTopLevelDescription <RDF:Description> RDF:resource $ ?
WantLiteralValueOrDescription <RDF:Description> RDF:resource $ ?
RDFCollection <eg:Goo> RDF:resource $ ?
WantTopLevelDescription <eg:Goo> RDF:resource $ ?
WantLiteralValueOrDescription <eg:Goo> RDF:resource $ ?
WantPropertyElement <RDF:li> RDF:nodeID RDF:resource $ ?
WantPropertyElement <eg:Goo> RDF:nodeID RDF:resource $ ?
WantPropertyElement <RDF:li> RDF:datatype RDF:resource $ ?
WantPropertyElement <eg:Goo> RDF:datatype RDF:resource $ ?
WantPropertyElement <RDF:li> RDF:parseType='Resource' RDF:type $ ?
WantPropertyElement <eg:Goo> RDF:parseType='Resource' RDF:type $ ?
WantPropertyElement <RDF:li> RDF:parseType='Literal' RDF:type $ ?
WantPropertyElement <eg:Goo> RDF:parseType='Literal' RDF:type $ ?
WantPropertyElement <RDF:li> RDF:parseType='Collection' RDF:type $ ?
WantPropertyElement <eg:Goo> RDF:parseType='Collection' RDF:type $ ?
LookingForRDF <RDF:RDF> RDF:type $ ?
WantPropertyElement <RDF:li> RDF:parseType='Resource' RDF:datatype $ ?
WantPropertyElement <eg:Goo> RDF:parseType='Resource' RDF:datatype $ ?
WantPropertyElement <RDF:li> RDF:parseType='Literal' RDF:datatype $ ?
WantPropertyElement <eg:Goo> RDF:parseType='Literal' RDF:datatype $ ?
WantPropertyElement <RDF:li> RDF:parseType='Collection' RDF:datatype $ ?
WantPropertyElement <eg:Goo> RDF:parseType='Collection' RDF:datatype $ ?
LookingForRDF <RDF:RDF> RDF:datatype $ ?
RDFCollection <RDF:Description> RDF:datatype $ ?
WantTopLevelDescription <RDF:Description> RDF:datatype $ ?
WantLiteralValueOrDescription <RDF:Description> RDF:datatype $ ?
RDFCollection <eg:Goo> RDF:datatype $ ?
WantTopLevelDescription <eg:Goo> RDF:datatype $ ?
WantLiteralValueOrDescription <eg:Goo> RDF:datatype $ ?
WantPropertyElement <RDF:li> RDF:nodeID RDF:datatype $ ?
WantPropertyElement <eg:Goo> RDF:nodeID RDF:datatype $ ?
WantPropertyElement <RDF:li> RDF:type RDF:datatype $ ?
WantPropertyElement <eg:Goo> RDF:type RDF:datatype $ ?
WantPropertyElement <RDF:li> eg:foo RDF:datatype $ ?
WantPropertyElement <eg:Goo> eg:foo RDF:datatype $ ?
LookingForRDF <RDF:RDF> RDF:aboutEach $ ?
WantPropertyElement <RDF:li> RDF:aboutEach $ ?
RDFCollection <RDF:Description> RDF:aboutEach $ ?
WantTopLevelDescription <RDF:Description> RDF:aboutEach $ ?
WantLiteralValueOrDescription <RDF:Description> RDF:aboutEach $ ?
RDFCollection <eg:Goo> RDF:aboutEach $ ?
WantTopLevelDescription <eg:Goo> RDF:aboutEach $ ?
WantLiteralValueOrDescription <eg:Goo> RDF:aboutEach $ ?
WantPropertyElement <eg:Goo> RDF:aboutEach $ ?
WantPropertyElement <RDF:li> RDF:parseType='Resource' eg:foo $ ?
WantPropertyElement <eg:Goo> RDF:parseType='Resource' eg:foo $ ?
WantPropertyElement <RDF:li> RDF:parseType='Literal' eg:foo $ ?
WantPropertyElement <eg:Goo> RDF:parseType='Literal' eg:foo $ ?
WantPropertyElement <RDF:li> RDF:parseType='Collection' eg:foo $ ?
WantPropertyElement <eg:Goo> RDF:parseType='Collection' eg:foo $ ?
LookingForRDF <RDF:RDF> eg:foo $ ?
LookingForRDF <RDF:RDF> RDF:about $ ?
WantPropertyElement <RDF:li> RDF:about $ ?
WantPropertyElement <eg:Goo> RDF:about $ ?
LookingForRDF <RDF:RDF> RDF:aboutEachPrefix $ ?
WantPropertyElement <RDF:li> RDF:aboutEachPrefix $ ?
RDFCollection <RDF:Description> RDF:aboutEachPrefix $ ?
WantTopLevelDescription <RDF:Description> RDF:aboutEachPrefix $ ?
WantLiteralValueOrDescription <RDF:Description> RDF:aboutEachPrefix $ ?
RDFCollection <eg:Goo> RDF:aboutEachPrefix $ ?
WantTopLevelDescription <eg:Goo> RDF:aboutEachPrefix $ ?
WantLiteralValueOrDescription <eg:Goo> RDF:aboutEachPrefix $ ?
WantPropertyElement <eg:Goo> RDF:aboutEachPrefix $ ?
WantLiteralValueOrDescription <RDF:Description> $ WantPropertyElement  O1  { <eg:Goo> $ *  O1  ; <eg:Goo> </end> $ WantPropertyElement T1 O1  ; <eg:Goo> </end> <eg:Goo> $ * T1 O1  ; 'abcde' $ ? ; </end> $ *  O1  ; pred-object $ WantPropertyElement T1 O1  ; object $ WantPropertyElement T1 O1  ; }
WantLiteralValueOrDescription <RDF:Description> RDF:ID $ WantPropertyElement  O1  { <eg:Goo> $ *  O1  ; <eg:Goo> </end> $ WantPropertyElement T1 O1  ; <eg:Goo> </end> <eg:Goo> $ * T1 O1  ; 'abcde' $ ? ; </end> $ *  O1  ; pred-object $ WantPropertyElement T1 O1  ; object $ WantPropertyElement T1 O1  ; }
WantLiteralValueOrDescription <RDF:Description> RDF:nodeID $ WantPropertyElement  O1  { <eg:Goo> $ *  O1  ; <eg:Goo> </end> $ WantPropertyElement T1 O1  ; <eg:Goo> </end> <eg:Goo> $ * T1 O1  ; 'abcde' $ ? ; </end> $ *  O1  ; pred-object $ WantPropertyElement T1 O1  ; object $ WantPropertyElement T1 O1  ; }
WantLiteralValueOrDescription <RDF:Description> RDF:nodeID xml:base $ WantPropertyElement  O1  { <eg:Goo> $ *  O1  ; <eg:Goo> </end> $ WantPropertyElement T1 O1  ; <eg:Goo> </end> <eg:Goo> $ * T1 O1  ; 'abcde' $ ? ; </end> $ *  O1  ; pred-object $ WantPropertyElement T1 O1  ; object $ WantPropertyElement T1 O1  ; }
WantLiteralValueOrDescription <RDF:Description> xml:lang $ WantPropertyElement  O1  { <eg:Goo> $ *  O1  ; <eg:Goo> </end> $ WantPropertyElement T1 O1  ; <eg:Goo> </end> <eg:Goo> $ * T1 O1  ; 'abcde' $ ? ; </end> $ *  O1  ; pred-object $ WantPropertyElement T1 O1  ; object $ WantPropertyElement T1 O1  ; }
WantLiteralValueOrDescription <RDF:Description> RDF:ID xml:lang $ WantPropertyElement  O1  { <eg:Goo> $ *  O1  ; <eg:Goo> </end> $ WantPropertyElement T1 O1  ; <eg:Goo> </end> <eg:Goo> $ * T1 O1  ; 'abcde' $ ? ; </end> $ *  O1  ; pred-object $ WantPropertyElement T1 O1  ; object $ WantPropertyElement T1 O1  ; }
WantLiteralValueOrDescription <RDF:Description> RDF:nodeID xml:base xml:lang $ WantPropertyElement  O1  { <eg:Goo> $ *  O1  ; <eg:Goo> </end> $ WantPropertyElement T1 O1  ; <eg:Goo> </end> <eg:Goo> $ * T1 O1  ; 'abcde' $ ? ; </end> $ *  O1  ; pred-object $ WantPropertyElement T1 O1  ; object $ WantPropertyElement T1 O1  ; }
WantLiteralValueOrDescription <RDF:Description> RDF:about $ WantPropertyElement  O1  { <eg:Goo> $ *  O1  ; <eg:Goo> </end> $ WantPropertyElement T1 O1  ; <eg:Goo> </end> <eg:Goo> $ * T1 O1  ; 'abcde' $ ? ; </end> $ *  O1  ; pred-object $ WantPropertyElement T1 O1  ; object $ WantPropertyElement T1 O1  ; }
WantLiteralValueOrDescription <eg:Goo> $ WantPropertyElement T1 O1  { <eg:Goo> $ * T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ * T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
WantLiteralValueOrDescription <eg:Goo> RDF:ID $ WantPropertyElement T1 O1  { <eg:Goo> $ * T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ * T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
WantLiteralValueOrDescription <eg:Goo> RDF:nodeID $ WantPropertyElement T1 O1  { <eg:Goo> $ * T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ * T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
WantLiteralValueOrDescription <eg:Goo> xml:space $ WantPropertyElement T1 O1  { <eg:Goo> $ * T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ * T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
WantLiteralValueOrDescription <RDF:Description> RDF:type $ WantPropertyElement T1 O1  { <eg:Goo> $ * T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ * T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
WantLiteralValueOrDescription <RDF:Description> RDF:ID RDF:type $ WantPropertyElement T1 O1  { <eg:Goo> $ * T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ * T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
WantLiteralValueOrDescription <RDF:Description> RDF:nodeID RDF:type $ WantPropertyElement T1 O1  { <eg:Goo> $ * T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ * T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
WantLiteralValueOrDescription <RDF:Description> RDF:about RDF:type $ WantPropertyElement T1 O1  { <eg:Goo> $ * T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ * T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
WantLiteralValueOrDescription <eg:Goo> RDF:nodeID xml:base $ WantPropertyElement T1 O1  { <eg:Goo> $ * T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ * T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
WantLiteralValueOrDescription <RDF:Description> RDF:type xml:base $ WantPropertyElement T1 O1  { <eg:Goo> $ * T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ * T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
WantLiteralValueOrDescription <RDF:Description> RDF:ID RDF:type xml:base $ WantPropertyElement T1 O1  { <eg:Goo> $ * T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ * T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
WantLiteralValueOrDescription <RDF:Description> eg:foo xml:base $ WantPropertyElement T1 O1  { <eg:Goo> $ * T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ * T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
WantLiteralValueOrDescription <eg:Goo> RDF:about xml:base $ WantPropertyElement T1 O1  { <eg:Goo> $ * T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ * T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
WantLiteralValueOrDescription <eg:Goo> xml:lang $ WantPropertyElement T1 O1  { <eg:Goo> $ * T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ * T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
WantLiteralValueOrDescription <eg:Goo> RDF:ID xml:lang $ WantPropertyElement T1 O1  { <eg:Goo> $ * T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ * T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
WantLiteralValueOrDescription <eg:Goo> RDF:nodeID xml:lang $ WantPropertyElement T1 O1  { <eg:Goo> $ * T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ * T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
WantLiteralValueOrDescription <RDF:Description> RDF:nodeID RDF:type xml:lang $ WantPropertyElement T1 O1  { <eg:Goo> $ * T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ * T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
WantLiteralValueOrDescription <RDF:Description> RDF:ID RDF:type xml:base xml:lang $ WantPropertyElement T1 O1  { <eg:Goo> $ * T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ * T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
WantLiteralValueOrDescription <RDF:Description> eg:foo xml:base xml:lang $ WantPropertyElement T1 O1  { <eg:Goo> $ * T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ * T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
WantLiteralValueOrDescription <RDF:Description> eg:foo xml:lang $ WantPropertyElement T1 O1  { <eg:Goo> $ * T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ * T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
WantLiteralValueOrDescription <RDF:Description> RDF:ID eg:foo xml:lang $ WantPropertyElement T1 O1  { <eg:Goo> $ * T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ * T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
WantLiteralValueOrDescription <RDF:Description> RDF:nodeID eg:foo xml:lang $ WantPropertyElement T1 O1  { <eg:Goo> $ * T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ * T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
WantLiteralValueOrDescription <eg:Goo> RDF:about xml:lang $ WantPropertyElement T1 O1  { <eg:Goo> $ * T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ * T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
WantLiteralValueOrDescription <RDF:Description> eg:foo $ WantPropertyElement T1 O1  { <eg:Goo> $ * T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ * T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
WantLiteralValueOrDescription <RDF:Description> RDF:ID eg:foo $ WantPropertyElement T1 O1  { <eg:Goo> $ * T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ * T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
WantLiteralValueOrDescription <RDF:Description> RDF:nodeID eg:foo $ WantPropertyElement T1 O1  { <eg:Goo> $ * T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ * T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
WantLiteralValueOrDescription <RDF:Description> RDF:about eg:foo $ WantPropertyElement T1 O1  { <eg:Goo> $ * T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ * T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
WantLiteralValueOrDescription <eg:Goo> RDF:about $ WantPropertyElement T1 O1  { <eg:Goo> $ * T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ * T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
RDFCollection <RDF:Description> $ WantPropertyElement T1 O1  { <eg:Goo> $ WantLiteralValueOrDescription T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
RDFCollection <RDF:Description> RDF:ID $ WantPropertyElement T1 O1  { <eg:Goo> $ WantLiteralValueOrDescription T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
RDFCollection <RDF:Description> RDF:nodeID $ WantPropertyElement T1 O1  { <eg:Goo> $ WantLiteralValueOrDescription T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
RDFCollection <RDF:Description> RDF:ID xml:base $ WantPropertyElement T1 O1  { <eg:Goo> $ WantLiteralValueOrDescription T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
RDFCollection <RDF:Description> RDF:nodeID xml:base $ WantPropertyElement T1 O1  { <eg:Goo> $ WantLiteralValueOrDescription T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
RDFCollection <RDF:Description> RDF:about xml:base $ WantPropertyElement T1 O1  { <eg:Goo> $ WantLiteralValueOrDescription T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
RDFCollection <RDF:Description> xml:lang $ WantPropertyElement T1 O1  { <eg:Goo> $ WantLiteralValueOrDescription T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
RDFCollection <RDF:Description> RDF:ID xml:lang $ WantPropertyElement T1 O1  { <eg:Goo> $ WantLiteralValueOrDescription T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
RDFCollection <RDF:Description> RDF:nodeID xml:base xml:lang $ WantPropertyElement T1 O1  { <eg:Goo> $ WantLiteralValueOrDescription T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
RDFCollection <RDF:Description> RDF:about xml:lang $ WantPropertyElement T1 O1  { <eg:Goo> $ WantLiteralValueOrDescription T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
RDFCollection <RDF:Description> RDF:about $ WantPropertyElement T1 O1  { <eg:Goo> $ WantLiteralValueOrDescription T1 O1  ; <eg:Goo> </end> $ WantPropertyElement T2 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T2 O1  ; 'abcde' $ ? ; </end> $ * T1 O1  ; pred-object $ WantPropertyElement T2 O1  ; object $ WantPropertyElement T2 O1  ; }
WantLiteralValueOrDescription <eg:Goo> RDF:type $ WantPropertyElement T2 O1  { <eg:Goo> $ * T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ * T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
WantLiteralValueOrDescription <eg:Goo> RDF:ID RDF:type $ WantPropertyElement T2 O1  { <eg:Goo> $ * T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ * T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
WantLiteralValueOrDescription <eg:Goo> RDF:nodeID RDF:type $ WantPropertyElement T2 O1  { <eg:Goo> $ * T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ * T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
WantLiteralValueOrDescription <eg:Goo> RDF:about RDF:type $ WantPropertyElement T2 O1  { <eg:Goo> $ * T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ * T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
WantLiteralValueOrDescription <eg:Goo> RDF:ID RDF:type xml:base $ WantPropertyElement T2 O1  { <eg:Goo> $ * T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ * T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
WantLiteralValueOrDescription <eg:Goo> RDF:about RDF:type xml:base $ WantPropertyElement T2 O1  { <eg:Goo> $ * T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ * T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
WantLiteralValueOrDescription <eg:Goo> eg:foo xml:base $ WantPropertyElement T2 O1  { <eg:Goo> $ * T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ * T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
WantLiteralValueOrDescription <RDF:Description> RDF:nodeID RDF:type eg:foo xml:base $ WantPropertyElement T2 O1  { <eg:Goo> $ * T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ * T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
WantLiteralValueOrDescription <eg:Goo> RDF:about eg:foo xml:base $ WantPropertyElement T2 O1  { <eg:Goo> $ * T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ * T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
WantLiteralValueOrDescription <eg:Goo> RDF:type xml:lang $ WantPropertyElement T2 O1  { <eg:Goo> $ * T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ * T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
WantLiteralValueOrDescription <eg:Goo> RDF:ID RDF:type xml:lang $ WantPropertyElement T2 O1  { <eg:Goo> $ * T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ * T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
WantLiteralValueOrDescription <eg:Goo> RDF:nodeID RDF:type xml:lang $ WantPropertyElement T2 O1  { <eg:Goo> $ * T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ * T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
WantLiteralValueOrDescription <eg:Goo> RDF:about RDF:type xml:base xml:lang $ WantPropertyElement T2 O1  { <eg:Goo> $ * T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ * T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
WantLiteralValueOrDescription <eg:Goo> eg:foo xml:lang $ WantPropertyElement T2 O1  { <eg:Goo> $ * T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ * T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
WantLiteralValueOrDescription <eg:Goo> RDF:ID eg:foo xml:lang $ WantPropertyElement T2 O1  { <eg:Goo> $ * T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ * T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
WantLiteralValueOrDescription <eg:Goo> RDF:nodeID eg:foo xml:lang $ WantPropertyElement T2 O1  { <eg:Goo> $ * T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ * T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
WantLiteralValueOrDescription <RDF:Description> RDF:type eg:foo xml:lang $ WantPropertyElement T2 O1  { <eg:Goo> $ * T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ * T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
WantLiteralValueOrDescription <RDF:Description> RDF:ID RDF:type eg:foo xml:lang $ WantPropertyElement T2 O1  { <eg:Goo> $ * T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ * T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
WantLiteralValueOrDescription <RDF:Description> RDF:nodeID RDF:type eg:foo xml:lang $ WantPropertyElement T2 O1  { <eg:Goo> $ * T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ * T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
WantLiteralValueOrDescription <RDF:Description> RDF:about RDF:type eg:foo xml:lang $ WantPropertyElement T2 O1  { <eg:Goo> $ * T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ * T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
WantLiteralValueOrDescription <eg:Goo> eg:foo $ WantPropertyElement T2 O1  { <eg:Goo> $ * T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ * T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
WantLiteralValueOrDescription <eg:Goo> RDF:ID eg:foo $ WantPropertyElement T2 O1  { <eg:Goo> $ * T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ * T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
WantLiteralValueOrDescription <eg:Goo> RDF:nodeID eg:foo $ WantPropertyElement T2 O1  { <eg:Goo> $ * T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ * T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
WantLiteralValueOrDescription <RDF:Description> RDF:type eg:foo $ WantPropertyElement T2 O1  { <eg:Goo> $ * T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ * T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
WantLiteralValueOrDescription <RDF:Description> RDF:ID RDF:type eg:foo $ WantPropertyElement T2 O1  { <eg:Goo> $ * T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ * T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
WantLiteralValueOrDescription <RDF:Description> RDF:nodeID RDF:type eg:foo $ WantPropertyElement T2 O1  { <eg:Goo> $ * T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ * T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
WantLiteralValueOrDescription <RDF:Description> RDF:about RDF:type eg:foo $ WantPropertyElement T2 O1  { <eg:Goo> $ * T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ * T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
WantLiteralValueOrDescription <eg:Goo> RDF:about eg:foo $ WantPropertyElement T2 O1  { <eg:Goo> $ * T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ * T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
RDFCollection <eg:Goo> $ WantPropertyElement T2 O1  { <eg:Goo> $ WantLiteralValueOrDescription T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
RDFCollection <eg:Goo> RDF:ID $ WantPropertyElement T2 O1  { <eg:Goo> $ WantLiteralValueOrDescription T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
RDFCollection <eg:Goo> RDF:nodeID $ WantPropertyElement T2 O1  { <eg:Goo> $ WantLiteralValueOrDescription T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
RDFCollection <eg:Goo> RDF:about xml:space $ WantPropertyElement T2 O1  { <eg:Goo> $ WantLiteralValueOrDescription T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
RDFCollection <RDF:Description> RDF:type $ WantPropertyElement T2 O1  { <eg:Goo> $ WantLiteralValueOrDescription T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
RDFCollection <RDF:Description> RDF:ID RDF:type $ WantPropertyElement T2 O1  { <eg:Goo> $ WantLiteralValueOrDescription T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
RDFCollection <RDF:Description> RDF:nodeID RDF:type $ WantPropertyElement T2 O1  { <eg:Goo> $ WantLiteralValueOrDescription T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
RDFCollection <RDF:Description> RDF:about RDF:type $ WantPropertyElement T2 O1  { <eg:Goo> $ WantLiteralValueOrDescription T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
RDFCollection <RDF:Description> RDF:type xml:base $ WantPropertyElement T2 O1  { <eg:Goo> $ WantLiteralValueOrDescription T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
RDFCollection <eg:Goo> RDF:about xml:base $ WantPropertyElement T2 O1  { <eg:Goo> $ WantLiteralValueOrDescription T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
RDFCollection <eg:Goo> xml:lang $ WantPropertyElement T2 O1  { <eg:Goo> $ WantLiteralValueOrDescription T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
RDFCollection <eg:Goo> RDF:nodeID xml:lang $ WantPropertyElement T2 O1  { <eg:Goo> $ WantLiteralValueOrDescription T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
RDFCollection <RDF:Description> RDF:ID RDF:type xml:lang $ WantPropertyElement T2 O1  { <eg:Goo> $ WantLiteralValueOrDescription T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
RDFCollection <RDF:Description> RDF:nodeID RDF:type xml:lang $ WantPropertyElement T2 O1  { <eg:Goo> $ WantLiteralValueOrDescription T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
RDFCollection <RDF:Description> RDF:about RDF:type xml:lang $ WantPropertyElement T2 O1  { <eg:Goo> $ WantLiteralValueOrDescription T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
RDFCollection <RDF:Description> RDF:type xml:base xml:lang $ WantPropertyElement T2 O1  { <eg:Goo> $ WantLiteralValueOrDescription T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
RDFCollection <RDF:Description> eg:foo xml:lang $ WantPropertyElement T2 O1  { <eg:Goo> $ WantLiteralValueOrDescription T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
RDFCollection <RDF:Description> RDF:ID eg:foo xml:lang $ WantPropertyElement T2 O1  { <eg:Goo> $ WantLiteralValueOrDescription T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
RDFCollection <RDF:Description> eg:foo $ WantPropertyElement T2 O1  { <eg:Goo> $ WantLiteralValueOrDescription T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
RDFCollection <RDF:Description> RDF:ID eg:foo $ WantPropertyElement T2 O1  { <eg:Goo> $ WantLiteralValueOrDescription T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
RDFCollection <RDF:Description> RDF:nodeID eg:foo $ WantPropertyElement T2 O1  { <eg:Goo> $ WantLiteralValueOrDescription T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
RDFCollection <RDF:Description> RDF:about eg:foo $ WantPropertyElement T2 O1  { <eg:Goo> $ WantLiteralValueOrDescription T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
RDFCollection <eg:Goo> RDF:about $ WantPropertyElement T2 O1  { <eg:Goo> $ WantLiteralValueOrDescription T2 O1  ; <eg:Goo> </end> $ WantPropertyElement T3 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; 'abcde' $ ? ; </end> $ * T2 O1  ; pred-object $ WantPropertyElement T3 O1  ; object $ WantPropertyElement T3 O1  ; }
WantLiteralValueOrDescription <eg:Goo> RDF:nodeID RDF:type eg:foo xml:base $ WantPropertyElement T3 O1  { <eg:Goo> $ * T3 O1  ; <eg:Goo> </end> $ WantPropertyElement T4 O1  ; <eg:Goo> </end> <eg:Goo> $ * T4 O1  ; 'abcde' $ ? ; </end> $ * T3 O1  ; pred-object $ WantPropertyElement T4 O1  ; object $ WantPropertyElement T4 O1  ; }
WantLiteralValueOrDescription <eg:Goo> RDF:nodeID RDF:type eg:foo xml:lang $ WantPropertyElement T3 O1  { <eg:Goo> $ * T3 O1  ; <eg:Goo> </end> $ WantPropertyElement T4 O1  ; <eg:Goo> </end> <eg:Goo> $ * T4 O1  ; 'abcde' $ ? ; </end> $ * T3 O1  ; pred-object $ WantPropertyElement T4 O1  ; object $ WantPropertyElement T4 O1  ; }
WantLiteralValueOrDescription <eg:Goo> RDF:about RDF:type eg:foo xml:lang $ WantPropertyElement T3 O1  { <eg:Goo> $ * T3 O1  ; <eg:Goo> </end> $ WantPropertyElement T4 O1  ; <eg:Goo> </end> <eg:Goo> $ * T4 O1  ; 'abcde' $ ? ; </end> $ * T3 O1  ; pred-object $ WantPropertyElement T4 O1  ; object $ WantPropertyElement T4 O1  ; }
WantLiteralValueOrDescription <eg:Goo> RDF:type eg:foo $ WantPropertyElement T3 O1  { <eg:Goo> $ * T3 O1  ; <eg:Goo> </end> $ WantPropertyElement T4 O1  ; <eg:Goo> </end> <eg:Goo> $ * T4 O1  ; 'abcde' $ ? ; </end> $ * T3 O1  ; pred-object $ WantPropertyElement T4 O1  ; object $ WantPropertyElement T4 O1  ; }
WantLiteralValueOrDescription <eg:Goo> RDF:ID RDF:type eg:foo $ WantPropertyElement T3 O1  { <eg:Goo> $ * T3 O1  ; <eg:Goo> </end> $ WantPropertyElement T4 O1  ; <eg:Goo> </end> <eg:Goo> $ * T4 O1  ; 'abcde' $ ? ; </end> $ * T3 O1  ; pred-object $ WantPropertyElement T4 O1  ; object $ WantPropertyElement T4 O1  ; }
WantLiteralValueOrDescription <eg:Goo> RDF:nodeID RDF:type eg:foo $ WantPropertyElement T3 O1  { <eg:Goo> $ * T3 O1  ; <eg:Goo> </end> $ WantPropertyElement T4 O1  ; <eg:Goo> </end> <eg:Goo> $ * T4 O1  ; 'abcde' $ ? ; </end> $ * T3 O1  ; pred-object $ WantPropertyElement T4 O1  ; object $ WantPropertyElement T4 O1  ; }
WantLiteralValueOrDescription <eg:Goo> RDF:about RDF:type eg:foo $ WantPropertyElement T3 O1  { <eg:Goo> $ * T3 O1  ; <eg:Goo> </end> $ WantPropertyElement T4 O1  ; <eg:Goo> </end> <eg:Goo> $ * T4 O1  ; 'abcde' $ ? ; </end> $ * T3 O1  ; pred-object $ WantPropertyElement T4 O1  ; object $ WantPropertyElement T4 O1  ; }
RDFCollection <eg:Goo> RDF:type $ WantPropertyElement T3 O1  { <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; <eg:Goo> </end> $ WantPropertyElement T4 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; 'abcde' $ ? ; </end> $ * T3 O1  ; pred-object $ WantPropertyElement T4 O1  ; object $ WantPropertyElement T4 O1  ; }
RDFCollection <eg:Goo> RDF:ID RDF:type $ WantPropertyElement T3 O1  { <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; <eg:Goo> </end> $ WantPropertyElement T4 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; 'abcde' $ ? ; </end> $ * T3 O1  ; pred-object $ WantPropertyElement T4 O1  ; object $ WantPropertyElement T4 O1  ; }
RDFCollection <eg:Goo> RDF:nodeID RDF:type $ WantPropertyElement T3 O1  { <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; <eg:Goo> </end> $ WantPropertyElement T4 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; 'abcde' $ ? ; </end> $ * T3 O1  ; pred-object $ WantPropertyElement T4 O1  ; object $ WantPropertyElement T4 O1  ; }
RDFCollection <eg:Goo> RDF:about xml:space RDF:type $ WantPropertyElement T3 O1  { <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; <eg:Goo> </end> $ WantPropertyElement T4 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; 'abcde' $ ? ; </end> $ * T3 O1  ; pred-object $ WantPropertyElement T4 O1  ; object $ WantPropertyElement T4 O1  ; }
RDFCollection <eg:Goo> RDF:about RDF:type $ WantPropertyElement T3 O1  { <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; <eg:Goo> </end> $ WantPropertyElement T4 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; 'abcde' $ ? ; </end> $ * T3 O1  ; pred-object $ WantPropertyElement T4 O1  ; object $ WantPropertyElement T4 O1  ; }
RDFCollection <eg:Goo> RDF:ID RDF:type xml:base $ WantPropertyElement T3 O1  { <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; <eg:Goo> </end> $ WantPropertyElement T4 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; 'abcde' $ ? ; </end> $ * T3 O1  ; pred-object $ WantPropertyElement T4 O1  ; object $ WantPropertyElement T4 O1  ; }
RDFCollection <eg:Goo> RDF:nodeID RDF:type xml:base $ WantPropertyElement T3 O1  { <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; <eg:Goo> </end> $ WantPropertyElement T4 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; 'abcde' $ ? ; </end> $ * T3 O1  ; pred-object $ WantPropertyElement T4 O1  ; object $ WantPropertyElement T4 O1  ; }
RDFCollection <eg:Goo> RDF:about RDF:type xml:base $ WantPropertyElement T3 O1  { <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; <eg:Goo> </end> $ WantPropertyElement T4 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; 'abcde' $ ? ; </end> $ * T3 O1  ; pred-object $ WantPropertyElement T4 O1  ; object $ WantPropertyElement T4 O1  ; }
RDFCollection <RDF:Description> RDF:type eg:foo xml:base $ WantPropertyElement T3 O1  { <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; <eg:Goo> </end> $ WantPropertyElement T4 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; 'abcde' $ ? ; </end> $ * T3 O1  ; pred-object $ WantPropertyElement T4 O1  ; object $ WantPropertyElement T4 O1  ; }
RDFCollection <RDF:Description> RDF:ID RDF:type eg:foo xml:base $ WantPropertyElement T3 O1  { <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; <eg:Goo> </end> $ WantPropertyElement T4 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; 'abcde' $ ? ; </end> $ * T3 O1  ; pred-object $ WantPropertyElement T4 O1  ; object $ WantPropertyElement T4 O1  ; }
RDFCollection <RDF:Description> RDF:about RDF:type eg:foo xml:base $ WantPropertyElement T3 O1  { <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; <eg:Goo> </end> $ WantPropertyElement T4 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; 'abcde' $ ? ; </end> $ * T3 O1  ; pred-object $ WantPropertyElement T4 O1  ; object $ WantPropertyElement T4 O1  ; }
RDFCollection <eg:Goo> RDF:about eg:foo xml:base $ WantPropertyElement T3 O1  { <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; <eg:Goo> </end> $ WantPropertyElement T4 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; 'abcde' $ ? ; </end> $ * T3 O1  ; pred-object $ WantPropertyElement T4 O1  ; object $ WantPropertyElement T4 O1  ; }
RDFCollection <eg:Goo> RDF:type xml:lang $ WantPropertyElement T3 O1  { <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; <eg:Goo> </end> $ WantPropertyElement T4 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; 'abcde' $ ? ; </end> $ * T3 O1  ; pred-object $ WantPropertyElement T4 O1  ; object $ WantPropertyElement T4 O1  ; }
RDFCollection <eg:Goo> RDF:nodeID RDF:type xml:lang $ WantPropertyElement T3 O1  { <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; <eg:Goo> </end> $ WantPropertyElement T4 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; 'abcde' $ ? ; </end> $ * T3 O1  ; pred-object $ WantPropertyElement T4 O1  ; object $ WantPropertyElement T4 O1  ; }
RDFCollection <eg:Goo> RDF:about RDF:type xml:base xml:lang $ WantPropertyElement T3 O1  { <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; <eg:Goo> </end> $ WantPropertyElement T4 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; 'abcde' $ ? ; </end> $ * T3 O1  ; pred-object $ WantPropertyElement T4 O1  ; object $ WantPropertyElement T4 O1  ; }
RDFCollection <RDF:Description> RDF:about RDF:type eg:foo xml:base xml:lang $ WantPropertyElement T3 O1  { <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; <eg:Goo> </end> $ WantPropertyElement T4 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; 'abcde' $ ? ; </end> $ * T3 O1  ; pred-object $ WantPropertyElement T4 O1  ; object $ WantPropertyElement T4 O1  ; }
RDFCollection <eg:Goo> eg:foo xml:lang $ WantPropertyElement T3 O1  { <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; <eg:Goo> </end> $ WantPropertyElement T4 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; 'abcde' $ ? ; </end> $ * T3 O1  ; pred-object $ WantPropertyElement T4 O1  ; object $ WantPropertyElement T4 O1  ; }
RDFCollection <RDF:Description> RDF:nodeID RDF:type eg:foo xml:lang $ WantPropertyElement T3 O1  { <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; <eg:Goo> </end> $ WantPropertyElement T4 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; 'abcde' $ ? ; </end> $ * T3 O1  ; pred-object $ WantPropertyElement T4 O1  ; object $ WantPropertyElement T4 O1  ; }
RDFCollection <RDF:Description> RDF:about RDF:type eg:foo xml:lang $ WantPropertyElement T3 O1  { <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; <eg:Goo> </end> $ WantPropertyElement T4 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; 'abcde' $ ? ; </end> $ * T3 O1  ; pred-object $ WantPropertyElement T4 O1  ; object $ WantPropertyElement T4 O1  ; }
RDFCollection <eg:Goo> RDF:about eg:foo xml:lang $ WantPropertyElement T3 O1  { <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; <eg:Goo> </end> $ WantPropertyElement T4 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; 'abcde' $ ? ; </end> $ * T3 O1  ; pred-object $ WantPropertyElement T4 O1  ; object $ WantPropertyElement T4 O1  ; }
RDFCollection <eg:Goo> eg:foo $ WantPropertyElement T3 O1  { <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; <eg:Goo> </end> $ WantPropertyElement T4 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; 'abcde' $ ? ; </end> $ * T3 O1  ; pred-object $ WantPropertyElement T4 O1  ; object $ WantPropertyElement T4 O1  ; }
RDFCollection <eg:Goo> RDF:ID eg:foo $ WantPropertyElement T3 O1  { <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; <eg:Goo> </end> $ WantPropertyElement T4 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; 'abcde' $ ? ; </end> $ * T3 O1  ; pred-object $ WantPropertyElement T4 O1  ; object $ WantPropertyElement T4 O1  ; }
RDFCollection <eg:Goo> RDF:nodeID eg:foo $ WantPropertyElement T3 O1  { <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; <eg:Goo> </end> $ WantPropertyElement T4 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; 'abcde' $ ? ; </end> $ * T3 O1  ; pred-object $ WantPropertyElement T4 O1  ; object $ WantPropertyElement T4 O1  ; }
RDFCollection <eg:Goo> RDF:about xml:space eg:foo $ WantPropertyElement T3 O1  { <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; <eg:Goo> </end> $ WantPropertyElement T4 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; 'abcde' $ ? ; </end> $ * T3 O1  ; pred-object $ WantPropertyElement T4 O1  ; object $ WantPropertyElement T4 O1  ; }
RDFCollection <RDF:Description> RDF:type eg:foo $ WantPropertyElement T3 O1  { <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; <eg:Goo> </end> $ WantPropertyElement T4 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; 'abcde' $ ? ; </end> $ * T3 O1  ; pred-object $ WantPropertyElement T4 O1  ; object $ WantPropertyElement T4 O1  ; }
RDFCollection <RDF:Description> RDF:ID RDF:type eg:foo $ WantPropertyElement T3 O1  { <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; <eg:Goo> </end> $ WantPropertyElement T4 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; 'abcde' $ ? ; </end> $ * T3 O1  ; pred-object $ WantPropertyElement T4 O1  ; object $ WantPropertyElement T4 O1  ; }
RDFCollection <RDF:Description> RDF:nodeID RDF:type eg:foo $ WantPropertyElement T3 O1  { <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; <eg:Goo> </end> $ WantPropertyElement T4 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; 'abcde' $ ? ; </end> $ * T3 O1  ; pred-object $ WantPropertyElement T4 O1  ; object $ WantPropertyElement T4 O1  ; }
RDFCollection <RDF:Description> RDF:about RDF:type eg:foo $ WantPropertyElement T3 O1  { <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; <eg:Goo> </end> $ WantPropertyElement T4 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; 'abcde' $ ? ; </end> $ * T3 O1  ; pred-object $ WantPropertyElement T4 O1  ; object $ WantPropertyElement T4 O1  ; }
RDFCollection <eg:Goo> RDF:about eg:foo $ WantPropertyElement T3 O1  { <eg:Goo> $ WantLiteralValueOrDescription T3 O1  ; <eg:Goo> </end> $ WantPropertyElement T4 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; 'abcde' $ ? ; </end> $ * T3 O1  ; pred-object $ WantPropertyElement T4 O1  ; object $ WantPropertyElement T4 O1  ; }
RDFCollection <eg:Goo> RDF:type eg:foo xml:base $ WantPropertyElement T4 O1  { <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; <eg:Goo> </end> $ WantPropertyElement T5 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T5 O1  ; 'abcde' $ ? ; </end> $ * T4 O1  ; pred-object $ WantPropertyElement T5 O1  ; object $ WantPropertyElement T5 O1  ; }
RDFCollection <eg:Goo> RDF:ID RDF:type eg:foo xml:base $ WantPropertyElement T4 O1  { <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; <eg:Goo> </end> $ WantPropertyElement T5 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T5 O1  ; 'abcde' $ ? ; </end> $ * T4 O1  ; pred-object $ WantPropertyElement T5 O1  ; object $ WantPropertyElement T5 O1  ; }
RDFCollection <eg:Goo> RDF:nodeID RDF:type eg:foo xml:base $ WantPropertyElement T4 O1  { <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; <eg:Goo> </end> $ WantPropertyElement T5 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T5 O1  ; 'abcde' $ ? ; </end> $ * T4 O1  ; pred-object $ WantPropertyElement T5 O1  ; object $ WantPropertyElement T5 O1  ; }
RDFCollection <eg:Goo> RDF:about RDF:type eg:foo xml:base $ WantPropertyElement T4 O1  { <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; <eg:Goo> </end> $ WantPropertyElement T5 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T5 O1  ; 'abcde' $ ? ; </end> $ * T4 O1  ; pred-object $ WantPropertyElement T5 O1  ; object $ WantPropertyElement T5 O1  ; }
RDFCollection <eg:Goo> RDF:ID RDF:type eg:foo xml:base xml:lang $ WantPropertyElement T4 O1  { <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; <eg:Goo> </end> $ WantPropertyElement T5 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T5 O1  ; 'abcde' $ ? ; </end> $ * T4 O1  ; pred-object $ WantPropertyElement T5 O1  ; object $ WantPropertyElement T5 O1  ; }
RDFCollection <eg:Goo> RDF:ID RDF:type eg:foo xml:lang $ WantPropertyElement T4 O1  { <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; <eg:Goo> </end> $ WantPropertyElement T5 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T5 O1  ; 'abcde' $ ? ; </end> $ * T4 O1  ; pred-object $ WantPropertyElement T5 O1  ; object $ WantPropertyElement T5 O1  ; }
RDFCollection <eg:Goo> RDF:nodeID RDF:type eg:foo xml:lang $ WantPropertyElement T4 O1  { <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; <eg:Goo> </end> $ WantPropertyElement T5 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T5 O1  ; 'abcde' $ ? ; </end> $ * T4 O1  ; pred-object $ WantPropertyElement T5 O1  ; object $ WantPropertyElement T5 O1  ; }
RDFCollection <eg:Goo> RDF:type eg:foo $ WantPropertyElement T4 O1  { <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; <eg:Goo> </end> $ WantPropertyElement T5 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T5 O1  ; 'abcde' $ ? ; </end> $ * T4 O1  ; pred-object $ WantPropertyElement T5 O1  ; object $ WantPropertyElement T5 O1  ; }
RDFCollection <eg:Goo> RDF:ID RDF:type eg:foo $ WantPropertyElement T4 O1  { <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; <eg:Goo> </end> $ WantPropertyElement T5 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T5 O1  ; 'abcde' $ ? ; </end> $ * T4 O1  ; pred-object $ WantPropertyElement T5 O1  ; object $ WantPropertyElement T5 O1  ; }
RDFCollection <eg:Goo> RDF:nodeID RDF:type eg:foo $ WantPropertyElement T4 O1  { <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; <eg:Goo> </end> $ WantPropertyElement T5 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T5 O1  ; 'abcde' $ ? ; </end> $ * T4 O1  ; pred-object $ WantPropertyElement T5 O1  ; object $ WantPropertyElement T5 O1  ; }
RDFCollection <eg:Goo> RDF:about RDF:type eg:foo $ WantPropertyElement T4 O1  { <eg:Goo> $ WantLiteralValueOrDescription T4 O1  ; <eg:Goo> </end> $ WantPropertyElement T5 O1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T5 O1  ; 'abcde' $ ? ; </end> $ * T4 O1  ; pred-object $ WantPropertyElement T5 O1  ; object $ WantPropertyElement T5 O1  ; }
WantPropertyElement <RDF:li> RDF:parseType='Resource' $ *  P1  { <eg:Goo> $ WantLiteralValueOrDescription  P1  ; <eg:Goo> </end> $ * T1 P1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T1 P1  ; 'abcde' $ ? ; </end> $ *  P1  ; pred-object $ * T1 P1  ; object $ * T1 P1  ; }
WantPropertyElement <eg:Goo> RDF:parseType='Resource' $ *  P1  { <eg:Goo> $ WantLiteralValueOrDescription  P1  ; <eg:Goo> </end> $ * T1 P1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T1 P1  ; 'abcde' $ ? ; </end> $ *  P1  ; pred-object $ * T1 P1  ; object $ * T1 P1  ; }
WantPropertyElement <RDF:li> xml:space RDF:parseType='Resource' $ *  P1  { <eg:Goo> $ WantLiteralValueOrDescription  P1  ; <eg:Goo> </end> $ * T1 P1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T1 P1  ; 'abcde' $ ? ; </end> $ *  P1  ; pred-object $ * T1 P1  ; object $ * T1 P1  ; }
WantPropertyElement <RDF:li> RDF:parseType='Resource' xml:base $ *  P1  { <eg:Goo> $ WantLiteralValueOrDescription  P1  ; <eg:Goo> </end> $ * T1 P1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T1 P1  ; 'abcde' $ ? ; </end> $ *  P1  ; pred-object $ * T1 P1  ; object $ * T1 P1  ; }
WantPropertyElement <eg:Goo> RDF:parseType='Resource' xml:lang $ *  P1  { <eg:Goo> $ WantLiteralValueOrDescription  P1  ; <eg:Goo> </end> $ * T1 P1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T1 P1  ; 'abcde' $ ? ; </end> $ *  P1  ; pred-object $ * T1 P1  ; object $ * T1 P1  ; }
WantPropertyElement <RDF:li> RDF:ID RDF:parseType='Resource' $ * T3 P1 R1  { <eg:Goo> $ WantLiteralValueOrDescription T3 P1 R1  ; <eg:Goo> </end> $ * T4 P1 R1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4 P1 R1  ; 'abcde' $ ? ; </end> $ * T3 P1 R1  ; pred-object $ * T4 P1 R1  ; object $ * T4 P1 R1  ; }
WantPropertyElement <eg:Goo> RDF:ID RDF:parseType='Resource' $ * T3 P1 R1  { <eg:Goo> $ WantLiteralValueOrDescription T3 P1 R1  ; <eg:Goo> </end> $ * T4 P1 R1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4 P1 R1  ; 'abcde' $ ? ; </end> $ * T3 P1 R1  ; pred-object $ * T4 P1 R1  ; object $ * T4 P1 R1  ; }
WantPropertyElement <RDF:li> RDF:ID RDF:parseType='Resource' xml:base $ * T3 P1 R1  { <eg:Goo> $ WantLiteralValueOrDescription T3 P1 R1  ; <eg:Goo> </end> $ * T4 P1 R1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4 P1 R1  ; 'abcde' $ ? ; </end> $ * T3 P1 R1  ; pred-object $ * T4 P1 R1  ; object $ * T4 P1 R1  ; }
WantPropertyElement <RDF:li> RDF:ID RDF:parseType='Resource' xml:base xml:lang $ * T3 P1 R1  { <eg:Goo> $ WantLiteralValueOrDescription T3 P1 R1  ; <eg:Goo> </end> $ * T4 P1 R1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4 P1 R1  ; 'abcde' $ ? ; </end> $ * T3 P1 R1  ; pred-object $ * T4 P1 R1  ; object $ * T4 P1 R1  ; }
WantTopLevelDescription <RDF:Description> $ WantPropertyElement   { <eg:Goo> $ WantLiteralValueOrDescription   ; <eg:Goo> </end> $ WantPropertyElement T1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T1  ; 'abcde' $ ? ; </end> $ *   ; pred-object $ WantPropertyElement T1  ; object $ WantPropertyElement T1  ; }
WantTopLevelDescription <RDF:Description> RDF:ID $ WantPropertyElement   { <eg:Goo> $ WantLiteralValueOrDescription   ; <eg:Goo> </end> $ WantPropertyElement T1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T1  ; 'abcde' $ ? ; </end> $ *   ; pred-object $ WantPropertyElement T1  ; object $ WantPropertyElement T1  ; }
WantTopLevelDescription <RDF:Description> RDF:nodeID $ WantPropertyElement   { <eg:Goo> $ WantLiteralValueOrDescription   ; <eg:Goo> </end> $ WantPropertyElement T1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T1  ; 'abcde' $ ? ; </end> $ *   ; pred-object $ WantPropertyElement T1  ; object $ WantPropertyElement T1  ; }
WantTopLevelDescription <RDF:Description> xml:space $ WantPropertyElement   { <eg:Goo> $ WantLiteralValueOrDescription   ; <eg:Goo> </end> $ WantPropertyElement T1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T1  ; 'abcde' $ ? ; </end> $ *   ; pred-object $ WantPropertyElement T1  ; object $ WantPropertyElement T1  ; }
WantTopLevelDescription <RDF:Description> xml:base $ WantPropertyElement   { <eg:Goo> $ WantLiteralValueOrDescription   ; <eg:Goo> </end> $ WantPropertyElement T1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T1  ; 'abcde' $ ? ; </end> $ *   ; pred-object $ WantPropertyElement T1  ; object $ WantPropertyElement T1  ; }
WantTopLevelDescription <RDF:Description> RDF:nodeID xml:base $ WantPropertyElement   { <eg:Goo> $ WantLiteralValueOrDescription   ; <eg:Goo> </end> $ WantPropertyElement T1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T1  ; 'abcde' $ ? ; </end> $ *   ; pred-object $ WantPropertyElement T1  ; object $ WantPropertyElement T1  ; }
WantTopLevelDescription <RDF:Description> RDF:about xml:base $ WantPropertyElement   { <eg:Goo> $ WantLiteralValueOrDescription   ; <eg:Goo> </end> $ WantPropertyElement T1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T1  ; 'abcde' $ ? ; </end> $ *   ; pred-object $ WantPropertyElement T1  ; object $ WantPropertyElement T1  ; }
WantTopLevelDescription <RDF:Description> xml:lang $ WantPropertyElement   { <eg:Goo> $ WantLiteralValueOrDescription   ; <eg:Goo> </end> $ WantPropertyElement T1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T1  ; 'abcde' $ ? ; </end> $ *   ; pred-object $ WantPropertyElement T1  ; object $ WantPropertyElement T1  ; }
WantTopLevelDescription <RDF:Description> RDF:ID xml:lang $ WantPropertyElement   { <eg:Goo> $ WantLiteralValueOrDescription   ; <eg:Goo> </end> $ WantPropertyElement T1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T1  ; 'abcde' $ ? ; </end> $ *   ; pred-object $ WantPropertyElement T1  ; object $ WantPropertyElement T1  ; }
WantTopLevelDescription <RDF:Description> RDF:nodeID xml:base xml:lang $ WantPropertyElement   { <eg:Goo> $ WantLiteralValueOrDescription   ; <eg:Goo> </end> $ WantPropertyElement T1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T1  ; 'abcde' $ ? ; </end> $ *   ; pred-object $ WantPropertyElement T1  ; object $ WantPropertyElement T1  ; }
WantTopLevelDescription <RDF:Description> RDF:about xml:lang $ WantPropertyElement   { <eg:Goo> $ WantLiteralValueOrDescription   ; <eg:Goo> </end> $ WantPropertyElement T1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T1  ; 'abcde' $ ? ; </end> $ *   ; pred-object $ WantPropertyElement T1  ; object $ WantPropertyElement T1  ; }
WantTopLevelDescription <RDF:Description> RDF:about $ WantPropertyElement   { <eg:Goo> $ WantLiteralValueOrDescription   ; <eg:Goo> </end> $ WantPropertyElement T1  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T1  ; 'abcde' $ ? ; </end> $ *   ; pred-object $ WantPropertyElement T1  ; object $ WantPropertyElement T1  ; }
WantTopLevelDescription <eg:Goo> $ WantPropertyElement T1  { <eg:Goo> $ WantLiteralValueOrDescription T1  ; <eg:Goo> </end> $ WantPropertyElement T2  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T2  ; 'abcde' $ ? ; </end> $ * T1  ; pred-object $ WantPropertyElement T2  ; object $ WantPropertyElement T2  ; }
WantTopLevelDescription <eg:Goo> RDF:ID $ WantPropertyElement T1  { <eg:Goo> $ WantLiteralValueOrDescription T1  ; <eg:Goo> </end> $ WantPropertyElement T2  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T2  ; 'abcde' $ ? ; </end> $ * T1  ; pred-object $ WantPropertyElement T2  ; object $ WantPropertyElement T2  ; }
WantTopLevelDescription <eg:Goo> RDF:nodeID $ WantPropertyElement T1  { <eg:Goo> $ WantLiteralValueOrDescription T1  ; <eg:Goo> </end> $ WantPropertyElement T2  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T2  ; 'abcde' $ ? ; </end> $ * T1  ; pred-object $ WantPropertyElement T2  ; object $ WantPropertyElement T2  ; }
WantTopLevelDescription <eg:Goo> RDF:about xml:space $ WantPropertyElement T1  { <eg:Goo> $ WantLiteralValueOrDescription T1  ; <eg:Goo> </end> $ WantPropertyElement T2  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T2  ; 'abcde' $ ? ; </end> $ * T1  ; pred-object $ WantPropertyElement T2  ; object $ WantPropertyElement T2  ; }
WantTopLevelDescription <RDF:Description> RDF:type $ WantPropertyElement T1  { <eg:Goo> $ WantLiteralValueOrDescription T1  ; <eg:Goo> </end> $ WantPropertyElement T2  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T2  ; 'abcde' $ ? ; </end> $ * T1  ; pred-object $ WantPropertyElement T2  ; object $ WantPropertyElement T2  ; }
WantTopLevelDescription <RDF:Description> RDF:ID RDF:type $ WantPropertyElement T1  { <eg:Goo> $ WantLiteralValueOrDescription T1  ; <eg:Goo> </end> $ WantPropertyElement T2  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T2  ; 'abcde' $ ? ; </end> $ * T1  ; pred-object $ WantPropertyElement T2  ; object $ WantPropertyElement T2  ; }
WantTopLevelDescription <RDF:Description> RDF:nodeID RDF:type $ WantPropertyElement T1  { <eg:Goo> $ WantLiteralValueOrDescription T1  ; <eg:Goo> </end> $ WantPropertyElement T2  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T2  ; 'abcde' $ ? ; </end> $ * T1  ; pred-object $ WantPropertyElement T2  ; object $ WantPropertyElement T2  ; }
WantTopLevelDescription <RDF:Description> RDF:about RDF:type $ WantPropertyElement T1  { <eg:Goo> $ WantLiteralValueOrDescription T1  ; <eg:Goo> </end> $ WantPropertyElement T2  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T2  ; 'abcde' $ ? ; </end> $ * T1  ; pred-object $ WantPropertyElement T2  ; object $ WantPropertyElement T2  ; }
WantTopLevelDescription <eg:Goo> RDF:ID xml:base $ WantPropertyElement T1  { <eg:Goo> $ WantLiteralValueOrDescription T1  ; <eg:Goo> </end> $ WantPropertyElement T2  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T2  ; 'abcde' $ ? ; </end> $ * T1  ; pred-object $ WantPropertyElement T2  ; object $ WantPropertyElement T2  ; }
WantTopLevelDescription <eg:Goo> RDF:about xml:space xml:base $ WantPropertyElement T1  { <eg:Goo> $ WantLiteralValueOrDescription T1  ; <eg:Goo> </end> $ WantPropertyElement T2  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T2  ; 'abcde' $ ? ; </end> $ * T1  ; pred-object $ WantPropertyElement T2  ; object $ WantPropertyElement T2  ; }
WantTopLevelDescription <RDF:Description> RDF:type xml:base $ WantPropertyElement T1  { <eg:Goo> $ WantLiteralValueOrDescription T1  ; <eg:Goo> </end> $ WantPropertyElement T2  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T2  ; 'abcde' $ ? ; </end> $ * T1  ; pred-object $ WantPropertyElement T2  ; object $ WantPropertyElement T2  ; }
WantTopLevelDescription <RDF:Description> RDF:ID RDF:type xml:base $ WantPropertyElement T1  { <eg:Goo> $ WantLiteralValueOrDescription T1  ; <eg:Goo> </end> $ WantPropertyElement T2  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T2  ; 'abcde' $ ? ; </end> $ * T1  ; pred-object $ WantPropertyElement T2  ; object $ WantPropertyElement T2  ; }
WantTopLevelDescription <RDF:Description> RDF:nodeID RDF:type xml:base $ WantPropertyElement T1  { <eg:Goo> $ WantLiteralValueOrDescription T1  ; <eg:Goo> </end> $ WantPropertyElement T2  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T2  ; 'abcde' $ ? ; </end> $ * T1  ; pred-object $ WantPropertyElement T2  ; object $ WantPropertyElement T2  ; }
WantTopLevelDescription <RDF:Description> eg:foo xml:base $ WantPropertyElement T1  { <eg:Goo> $ WantLiteralValueOrDescription T1  ; <eg:Goo> </end> $ WantPropertyElement T2  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T2  ; 'abcde' $ ? ; </end> $ * T1  ; pred-object $ WantPropertyElement T2  ; object $ WantPropertyElement T2  ; }
WantTopLevelDescription <RDF:Description> RDF:ID eg:foo xml:base $ WantPropertyElement T1  { <eg:Goo> $ WantLiteralValueOrDescription T1  ; <eg:Goo> </end> $ WantPropertyElement T2  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T2  ; 'abcde' $ ? ; </end> $ * T1  ; pred-object $ WantPropertyElement T2  ; object $ WantPropertyElement T2  ; }
WantTopLevelDescription <RDF:Description> RDF:nodeID eg:foo xml:base $ WantPropertyElement T1  { <eg:Goo> $ WantLiteralValueOrDescription T1  ; <eg:Goo> </end> $ WantPropertyElement T2  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T2  ; 'abcde' $ ? ; </end> $ * T1  ; pred-object $ WantPropertyElement T2  ; object $ WantPropertyElement T2  ; }
WantTopLevelDescription <eg:Goo> RDF:about xml:base $ WantPropertyElement T1  { <eg:Goo> $ WantLiteralValueOrDescription T1  ; <eg:Goo> </end> $ WantPropertyElement T2  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T2  ; 'abcde' $ ? ; </end> $ * T1  ; pred-object $ WantPropertyElement T2  ; object $ WantPropertyElement T2  ; }
WantTopLevelDescription <eg:Goo> RDF:ID xml:lang $ WantPropertyElement T1  { <eg:Goo> $ WantLiteralValueOrDescription T1  ; <eg:Goo> </end> $ WantPropertyElement T2  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T2  ; 'abcde' $ ? ; </end> $ * T1  ; pred-object $ WantPropertyElement T2  ; object $ WantPropertyElement T2  ; }
WantTopLevelDescription <RDF:Description> RDF:type xml:lang $ WantPropertyElement T1  { <eg:Goo> $ WantLiteralValueOrDescription T1  ; <eg:Goo> </end> $ WantPropertyElement T2  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T2  ; 'abcde' $ ? ; </end> $ * T1  ; pred-object $ WantPropertyElement T2  ; object $ WantPropertyElement T2  ; }
WantTopLevelDescription <RDF:Description> eg:foo xml:lang $ WantPropertyElement T1  { <eg:Goo> $ WantLiteralValueOrDescription T1  ; <eg:Goo> </end> $ WantPropertyElement T2  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T2  ; 'abcde' $ ? ; </end> $ * T1  ; pred-object $ WantPropertyElement T2  ; object $ WantPropertyElement T2  ; }
WantTopLevelDescription <RDF:Description> eg:foo $ WantPropertyElement T1  { <eg:Goo> $ WantLiteralValueOrDescription T1  ; <eg:Goo> </end> $ WantPropertyElement T2  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T2  ; 'abcde' $ ? ; </end> $ * T1  ; pred-object $ WantPropertyElement T2  ; object $ WantPropertyElement T2  ; }
WantTopLevelDescription <RDF:Description> RDF:ID eg:foo $ WantPropertyElement T1  { <eg:Goo> $ WantLiteralValueOrDescription T1  ; <eg:Goo> </end> $ WantPropertyElement T2  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T2  ; 'abcde' $ ? ; </end> $ * T1  ; pred-object $ WantPropertyElement T2  ; object $ WantPropertyElement T2  ; }
WantTopLevelDescription <RDF:Description> RDF:nodeID eg:foo $ WantPropertyElement T1  { <eg:Goo> $ WantLiteralValueOrDescription T1  ; <eg:Goo> </end> $ WantPropertyElement T2  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T2  ; 'abcde' $ ? ; </end> $ * T1  ; pred-object $ WantPropertyElement T2  ; object $ WantPropertyElement T2  ; }
WantTopLevelDescription <RDF:Description> RDF:about eg:foo $ WantPropertyElement T1  { <eg:Goo> $ WantLiteralValueOrDescription T1  ; <eg:Goo> </end> $ WantPropertyElement T2  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T2  ; 'abcde' $ ? ; </end> $ * T1  ; pred-object $ WantPropertyElement T2  ; object $ WantPropertyElement T2  ; }
WantTopLevelDescription <eg:Goo> RDF:about $ WantPropertyElement T1  { <eg:Goo> $ WantLiteralValueOrDescription T1  ; <eg:Goo> </end> $ WantPropertyElement T2  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T2  ; 'abcde' $ ? ; </end> $ * T1  ; pred-object $ WantPropertyElement T2  ; object $ WantPropertyElement T2  ; }
WantTopLevelDescription <eg:Goo> RDF:type $ WantPropertyElement T2  { <eg:Goo> $ WantLiteralValueOrDescription T2  ; <eg:Goo> </end> $ WantPropertyElement T3  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3  ; 'abcde' $ ? ; </end> $ * T2  ; pred-object $ WantPropertyElement T3  ; object $ WantPropertyElement T3  ; }
WantTopLevelDescription <eg:Goo> RDF:ID RDF:type $ WantPropertyElement T2  { <eg:Goo> $ WantLiteralValueOrDescription T2  ; <eg:Goo> </end> $ WantPropertyElement T3  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3  ; 'abcde' $ ? ; </end> $ * T2  ; pred-object $ WantPropertyElement T3  ; object $ WantPropertyElement T3  ; }
WantTopLevelDescription <eg:Goo> RDF:nodeID RDF:type $ WantPropertyElement T2  { <eg:Goo> $ WantLiteralValueOrDescription T2  ; <eg:Goo> </end> $ WantPropertyElement T3  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3  ; 'abcde' $ ? ; </end> $ * T2  ; pred-object $ WantPropertyElement T3  ; object $ WantPropertyElement T3  ; }
WantTopLevelDescription <eg:Goo> RDF:about RDF:type $ WantPropertyElement T2  { <eg:Goo> $ WantLiteralValueOrDescription T2  ; <eg:Goo> </end> $ WantPropertyElement T3  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3  ; 'abcde' $ ? ; </end> $ * T2  ; pred-object $ WantPropertyElement T3  ; object $ WantPropertyElement T3  ; }
WantTopLevelDescription <eg:Goo> RDF:type xml:base $ WantPropertyElement T2  { <eg:Goo> $ WantLiteralValueOrDescription T2  ; <eg:Goo> </end> $ WantPropertyElement T3  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3  ; 'abcde' $ ? ; </end> $ * T2  ; pred-object $ WantPropertyElement T3  ; object $ WantPropertyElement T3  ; }
WantTopLevelDescription <eg:Goo> RDF:nodeID RDF:type xml:base $ WantPropertyElement T2  { <eg:Goo> $ WantLiteralValueOrDescription T2  ; <eg:Goo> </end> $ WantPropertyElement T3  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3  ; 'abcde' $ ? ; </end> $ * T2  ; pred-object $ WantPropertyElement T3  ; object $ WantPropertyElement T3  ; }
WantTopLevelDescription <eg:Goo> RDF:about RDF:type xml:base $ WantPropertyElement T2  { <eg:Goo> $ WantLiteralValueOrDescription T2  ; <eg:Goo> </end> $ WantPropertyElement T3  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3  ; 'abcde' $ ? ; </end> $ * T2  ; pred-object $ WantPropertyElement T3  ; object $ WantPropertyElement T3  ; }
WantTopLevelDescription <eg:Goo> eg:foo xml:base $ WantPropertyElement T2  { <eg:Goo> $ WantLiteralValueOrDescription T2  ; <eg:Goo> </end> $ WantPropertyElement T3  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3  ; 'abcde' $ ? ; </end> $ * T2  ; pred-object $ WantPropertyElement T3  ; object $ WantPropertyElement T3  ; }
WantTopLevelDescription <eg:Goo> RDF:ID eg:foo xml:base $ WantPropertyElement T2  { <eg:Goo> $ WantLiteralValueOrDescription T2  ; <eg:Goo> </end> $ WantPropertyElement T3  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3  ; 'abcde' $ ? ; </end> $ * T2  ; pred-object $ WantPropertyElement T3  ; object $ WantPropertyElement T3  ; }
WantTopLevelDescription <eg:Goo> RDF:nodeID eg:foo xml:base $ WantPropertyElement T2  { <eg:Goo> $ WantLiteralValueOrDescription T2  ; <eg:Goo> </end> $ WantPropertyElement T3  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3  ; 'abcde' $ ? ; </end> $ * T2  ; pred-object $ WantPropertyElement T3  ; object $ WantPropertyElement T3  ; }
WantTopLevelDescription <eg:Goo> RDF:type xml:lang $ WantPropertyElement T2  { <eg:Goo> $ WantLiteralValueOrDescription T2  ; <eg:Goo> </end> $ WantPropertyElement T3  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3  ; 'abcde' $ ? ; </end> $ * T2  ; pred-object $ WantPropertyElement T3  ; object $ WantPropertyElement T3  ; }
WantTopLevelDescription <eg:Goo> RDF:ID RDF:type xml:lang $ WantPropertyElement T2  { <eg:Goo> $ WantLiteralValueOrDescription T2  ; <eg:Goo> </end> $ WantPropertyElement T3  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3  ; 'abcde' $ ? ; </end> $ * T2  ; pred-object $ WantPropertyElement T3  ; object $ WantPropertyElement T3  ; }
WantTopLevelDescription <eg:Goo> RDF:about RDF:type xml:lang $ WantPropertyElement T2  { <eg:Goo> $ WantLiteralValueOrDescription T2  ; <eg:Goo> </end> $ WantPropertyElement T3  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3  ; 'abcde' $ ? ; </end> $ * T2  ; pred-object $ WantPropertyElement T3  ; object $ WantPropertyElement T3  ; }
WantTopLevelDescription <eg:Goo> eg:foo xml:base xml:lang $ WantPropertyElement T2  { <eg:Goo> $ WantLiteralValueOrDescription T2  ; <eg:Goo> </end> $ WantPropertyElement T3  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3  ; 'abcde' $ ? ; </end> $ * T2  ; pred-object $ WantPropertyElement T3  ; object $ WantPropertyElement T3  ; }
WantTopLevelDescription <RDF:Description> RDF:type eg:foo xml:lang $ WantPropertyElement T2  { <eg:Goo> $ WantLiteralValueOrDescription T2  ; <eg:Goo> </end> $ WantPropertyElement T3  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3  ; 'abcde' $ ? ; </end> $ * T2  ; pred-object $ WantPropertyElement T3  ; object $ WantPropertyElement T3  ; }
WantTopLevelDescription <RDF:Description> RDF:ID RDF:type eg:foo xml:lang $ WantPropertyElement T2  { <eg:Goo> $ WantLiteralValueOrDescription T2  ; <eg:Goo> </end> $ WantPropertyElement T3  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3  ; 'abcde' $ ? ; </end> $ * T2  ; pred-object $ WantPropertyElement T3  ; object $ WantPropertyElement T3  ; }
WantTopLevelDescription <eg:Goo> eg:foo $ WantPropertyElement T2  { <eg:Goo> $ WantLiteralValueOrDescription T2  ; <eg:Goo> </end> $ WantPropertyElement T3  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3  ; 'abcde' $ ? ; </end> $ * T2  ; pred-object $ WantPropertyElement T3  ; object $ WantPropertyElement T3  ; }
WantTopLevelDescription <eg:Goo> RDF:ID eg:foo $ WantPropertyElement T2  { <eg:Goo> $ WantLiteralValueOrDescription T2  ; <eg:Goo> </end> $ WantPropertyElement T3  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3  ; 'abcde' $ ? ; </end> $ * T2  ; pred-object $ WantPropertyElement T3  ; object $ WantPropertyElement T3  ; }
WantTopLevelDescription <eg:Goo> RDF:nodeID eg:foo $ WantPropertyElement T2  { <eg:Goo> $ WantLiteralValueOrDescription T2  ; <eg:Goo> </end> $ WantPropertyElement T3  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3  ; 'abcde' $ ? ; </end> $ * T2  ; pred-object $ WantPropertyElement T3  ; object $ WantPropertyElement T3  ; }
WantTopLevelDescription <RDF:Description> RDF:type eg:foo $ WantPropertyElement T2  { <eg:Goo> $ WantLiteralValueOrDescription T2  ; <eg:Goo> </end> $ WantPropertyElement T3  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3  ; 'abcde' $ ? ; </end> $ * T2  ; pred-object $ WantPropertyElement T3  ; object $ WantPropertyElement T3  ; }
WantTopLevelDescription <RDF:Description> RDF:ID RDF:type eg:foo $ WantPropertyElement T2  { <eg:Goo> $ WantLiteralValueOrDescription T2  ; <eg:Goo> </end> $ WantPropertyElement T3  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3  ; 'abcde' $ ? ; </end> $ * T2  ; pred-object $ WantPropertyElement T3  ; object $ WantPropertyElement T3  ; }
WantTopLevelDescription <RDF:Description> RDF:nodeID RDF:type eg:foo $ WantPropertyElement T2  { <eg:Goo> $ WantLiteralValueOrDescription T2  ; <eg:Goo> </end> $ WantPropertyElement T3  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3  ; 'abcde' $ ? ; </end> $ * T2  ; pred-object $ WantPropertyElement T3  ; object $ WantPropertyElement T3  ; }
WantTopLevelDescription <RDF:Description> RDF:about RDF:type eg:foo $ WantPropertyElement T2  { <eg:Goo> $ WantLiteralValueOrDescription T2  ; <eg:Goo> </end> $ WantPropertyElement T3  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3  ; 'abcde' $ ? ; </end> $ * T2  ; pred-object $ WantPropertyElement T3  ; object $ WantPropertyElement T3  ; }
WantTopLevelDescription <eg:Goo> RDF:about eg:foo $ WantPropertyElement T2  { <eg:Goo> $ WantLiteralValueOrDescription T2  ; <eg:Goo> </end> $ WantPropertyElement T3  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T3  ; 'abcde' $ ? ; </end> $ * T2  ; pred-object $ WantPropertyElement T3  ; object $ WantPropertyElement T3  ; }
WantTopLevelDescription <eg:Goo> RDF:type eg:foo xml:base $ WantPropertyElement T3  { <eg:Goo> $ WantLiteralValueOrDescription T3  ; <eg:Goo> </end> $ WantPropertyElement T4  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4  ; 'abcde' $ ? ; </end> $ * T3  ; pred-object $ WantPropertyElement T4  ; object $ WantPropertyElement T4  ; }
WantTopLevelDescription <eg:Goo> RDF:ID RDF:type eg:foo xml:base $ WantPropertyElement T3  { <eg:Goo> $ WantLiteralValueOrDescription T3  ; <eg:Goo> </end> $ WantPropertyElement T4  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4  ; 'abcde' $ ? ; </end> $ * T3  ; pred-object $ WantPropertyElement T4  ; object $ WantPropertyElement T4  ; }
WantTopLevelDescription <eg:Goo> RDF:nodeID RDF:type eg:foo xml:base $ WantPropertyElement T3  { <eg:Goo> $ WantLiteralValueOrDescription T3  ; <eg:Goo> </end> $ WantPropertyElement T4  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4  ; 'abcde' $ ? ; </end> $ * T3  ; pred-object $ WantPropertyElement T4  ; object $ WantPropertyElement T4  ; }
WantTopLevelDescription <eg:Goo> RDF:nodeID RDF:type eg:foo xml:base xml:lang $ WantPropertyElement T3  { <eg:Goo> $ WantLiteralValueOrDescription T3  ; <eg:Goo> </end> $ WantPropertyElement T4  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4  ; 'abcde' $ ? ; </end> $ * T3  ; pred-object $ WantPropertyElement T4  ; object $ WantPropertyElement T4  ; }
WantTopLevelDescription <eg:Goo> RDF:type eg:foo $ WantPropertyElement T3  { <eg:Goo> $ WantLiteralValueOrDescription T3  ; <eg:Goo> </end> $ WantPropertyElement T4  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4  ; 'abcde' $ ? ; </end> $ * T3  ; pred-object $ WantPropertyElement T4  ; object $ WantPropertyElement T4  ; }
WantTopLevelDescription <eg:Goo> RDF:ID RDF:type eg:foo $ WantPropertyElement T3  { <eg:Goo> $ WantLiteralValueOrDescription T3  ; <eg:Goo> </end> $ WantPropertyElement T4  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4  ; 'abcde' $ ? ; </end> $ * T3  ; pred-object $ WantPropertyElement T4  ; object $ WantPropertyElement T4  ; }
WantTopLevelDescription <eg:Goo> RDF:nodeID RDF:type eg:foo $ WantPropertyElement T3  { <eg:Goo> $ WantLiteralValueOrDescription T3  ; <eg:Goo> </end> $ WantPropertyElement T4  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4  ; 'abcde' $ ? ; </end> $ * T3  ; pred-object $ WantPropertyElement T4  ; object $ WantPropertyElement T4  ; }
WantTopLevelDescription <eg:Goo> RDF:about RDF:type eg:foo $ WantPropertyElement T3  { <eg:Goo> $ WantLiteralValueOrDescription T3  ; <eg:Goo> </end> $ WantPropertyElement T4  ; <eg:Goo> </end> <eg:Goo> $ WantLiteralValueOrDescription T4  ; 'abcde' $ ? ; </end> $ * T3  ; pred-object $ WantPropertyElement T4  ; object $ WantPropertyElement T4  ; }
WantPropertyElement <RDF:li> RDF:datatype $ WantTypedLiteral   { <eg:Goo> $ ? ; 'abcde' $ WantTypedLiteral   ; 'abcde' <eg:Goo> $ ? ; 'abcde' </end> $ *  P1  ; </end> $ *  P1  ; pred-object $ WantTypedLiteral T1  ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:datatype $ WantTypedLiteral   { <eg:Goo> $ ? ; 'abcde' $ WantTypedLiteral   ; 'abcde' <eg:Goo> $ ? ; 'abcde' </end> $ *  P1  ; </end> $ *  P1  ; pred-object $ WantTypedLiteral T1  ; object $ ! ; }
WantPropertyElement <RDF:li> xml:space RDF:datatype $ WantTypedLiteral   { <eg:Goo> $ ? ; 'abcde' $ WantTypedLiteral   ; 'abcde' <eg:Goo> $ ? ; 'abcde' </end> $ *  P1  ; </end> $ *  P1  ; pred-object $ WantTypedLiteral T1  ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:datatype xml:lang $ WantTypedLiteral   { <eg:Goo> $ ? ; 'abcde' $ WantTypedLiteral   ; 'abcde' <eg:Goo> $ ? ; 'abcde' </end> $ *  P1  ; </end> $ *  P1  ; pred-object $ WantTypedLiteral T1  ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:ID RDF:datatype $ WantTypedLiteral   { <eg:Goo> $ ? ; 'abcde' $ WantTypedLiteral   ; 'abcde' <eg:Goo> $ ? ; 'abcde' </end> $ * T3 P1 R1  ; </end> $ * T3 P1 R1  ; pred-object $ WantTypedLiteral T1  ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:ID RDF:datatype $ WantTypedLiteral   { <eg:Goo> $ ? ; 'abcde' $ WantTypedLiteral   ; 'abcde' <eg:Goo> $ ? ; 'abcde' </end> $ * T3 P1 R1  ; </end> $ * T3 P1 R1  ; pred-object $ WantTypedLiteral T1  ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:ID RDF:datatype xml:base $ WantTypedLiteral   { <eg:Goo> $ ? ; 'abcde' $ WantTypedLiteral   ; 'abcde' <eg:Goo> $ ? ; 'abcde' </end> $ * T3 P1 R1  ; </end> $ * T3 P1 R1  ; pred-object $ WantTypedLiteral T1  ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:ID RDF:datatype xml:base $ WantTypedLiteral   { <eg:Goo> $ ? ; 'abcde' $ WantTypedLiteral   ; 'abcde' <eg:Goo> $ ? ; 'abcde' </end> $ * T3 P1 R1  ; </end> $ * T3 P1 R1  ; pred-object $ WantTypedLiteral T1  ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:ID RDF:datatype xml:lang $ WantTypedLiteral   { <eg:Goo> $ ? ; 'abcde' $ WantTypedLiteral   ; 'abcde' <eg:Goo> $ ? ; 'abcde' </end> $ * T3 P1 R1  ; </end> $ * T3 P1 R1  ; pred-object $ WantTypedLiteral T1  ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:ID RDF:datatype xml:lang $ WantTypedLiteral   { <eg:Goo> $ ? ; 'abcde' $ WantTypedLiteral   ; 'abcde' <eg:Goo> $ ? ; 'abcde' </end> $ * T3 P1 R1  ; </end> $ * T3 P1 R1  ; pred-object $ WantTypedLiteral T1  ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:ID RDF:datatype xml:base xml:lang $ WantTypedLiteral   { <eg:Goo> $ ? ; 'abcde' $ WantTypedLiteral   ; 'abcde' <eg:Goo> $ ? ; 'abcde' </end> $ * T3 P1 R1  ; </end> $ * T3 P1 R1  ; pred-object $ WantTypedLiteral T1  ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:ID RDF:datatype xml:base xml:lang $ WantTypedLiteral   { <eg:Goo> $ ? ; 'abcde' $ WantTypedLiteral   ; 'abcde' <eg:Goo> $ ? ; 'abcde' </end> $ * T3 P1 R1  ; </end> $ * T3 P1 R1  ; pred-object $ WantTypedLiteral T1  ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:parseType='Collection' $ RDFCollection   { <eg:Goo> $ * T2 P1  ; <eg:Goo> </end> $ RDFCollection T2 P1  ; <eg:Goo> </end> <eg:Goo> $ * T5 E2 P1  ; 'abcde' $ ? ; </end> $ *  P1  ; pred-object $ RDFCollection T1  ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:parseType='Collection' $ RDFCollection   { <eg:Goo> $ * T2 P1  ; <eg:Goo> </end> $ RDFCollection T2 P1  ; <eg:Goo> </end> <eg:Goo> $ * T5 E2 P1  ; 'abcde' $ ? ; </end> $ *  P1  ; pred-object $ RDFCollection T1  ; object $ ! ; }
WantPropertyElement <eg:Goo> xml:space RDF:parseType='Collection' $ RDFCollection   { <eg:Goo> $ * T2 P1  ; <eg:Goo> </end> $ RDFCollection T2 P1  ; <eg:Goo> </end> <eg:Goo> $ * T5 E2 P1  ; 'abcde' $ ? ; </end> $ *  P1  ; pred-object $ RDFCollection T1  ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:parseType='Collection' xml:lang $ RDFCollection   { <eg:Goo> $ * T2 P1  ; <eg:Goo> </end> $ RDFCollection T2 P1  ; <eg:Goo> </end> <eg:Goo> $ * T5 E2 P1  ; 'abcde' $ ? ; </end> $ *  P1  ; pred-object $ RDFCollection T1  ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:parseType='Collection' xml:lang $ RDFCollection   { <eg:Goo> $ * T2 P1  ; <eg:Goo> </end> $ RDFCollection T2 P1  ; <eg:Goo> </end> <eg:Goo> $ * T5 E2 P1  ; 'abcde' $ ? ; </end> $ *  P1  ; pred-object $ RDFCollection T1  ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:ID RDF:parseType='Collection' $ RDFCollection   { <eg:Goo> $ * T5 P1 R1  ; <eg:Goo> </end> $ RDFCollection T5 P1 R1  ; <eg:Goo> </end> <eg:Goo> $ * T8 E2 P1 R1  ; 'abcde' $ ? ; </end> $ * T3 P1 R1  ; pred-object $ RDFCollection T1  ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:ID RDF:parseType='Collection' $ RDFCollection   { <eg:Goo> $ * T5 P1 R1  ; <eg:Goo> </end> $ RDFCollection T5 P1 R1  ; <eg:Goo> </end> <eg:Goo> $ * T8 E2 P1 R1  ; 'abcde' $ ? ; </end> $ * T3 P1 R1  ; pred-object $ RDFCollection T1  ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:ID RDF:parseType='Collection' xml:base $ RDFCollection   { <eg:Goo> $ * T5 P1 R1  ; <eg:Goo> </end> $ RDFCollection T5 P1 R1  ; <eg:Goo> </end> <eg:Goo> $ * T8 E2 P1 R1  ; 'abcde' $ ? ; </end> $ * T3 P1 R1  ; pred-object $ RDFCollection T1  ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:ID RDF:parseType='Collection' xml:base $ RDFCollection   { <eg:Goo> $ * T5 P1 R1  ; <eg:Goo> </end> $ RDFCollection T5 P1 R1  ; <eg:Goo> </end> <eg:Goo> $ * T8 E2 P1 R1  ; 'abcde' $ ? ; </end> $ * T3 P1 R1  ; pred-object $ RDFCollection T1  ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:ID RDF:parseType='Collection' xml:lang $ RDFCollection   { <eg:Goo> $ * T5 P1 R1  ; <eg:Goo> </end> $ RDFCollection T5 P1 R1  ; <eg:Goo> </end> <eg:Goo> $ * T8 E2 P1 R1  ; 'abcde' $ ? ; </end> $ * T3 P1 R1  ; pred-object $ RDFCollection T1  ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:ID RDF:parseType='Collection' xml:lang $ RDFCollection   { <eg:Goo> $ * T5 P1 R1  ; <eg:Goo> </end> $ RDFCollection T5 P1 R1  ; <eg:Goo> </end> <eg:Goo> $ * T8 E2 P1 R1  ; 'abcde' $ ? ; </end> $ * T3 P1 R1  ; pred-object $ RDFCollection T1  ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:ID RDF:parseType='Collection' xml:base xml:lang $ RDFCollection   { <eg:Goo> $ * T5 P1 R1  ; <eg:Goo> </end> $ RDFCollection T5 P1 R1  ; <eg:Goo> </end> <eg:Goo> $ * T8 E2 P1 R1  ; 'abcde' $ ? ; </end> $ * T3 P1 R1  ; pred-object $ RDFCollection T1  ; object $ ! ; }
LookingForRDF <RDF:RDF> $ WantTopLevelDescription   { <eg:Goo> $ WantPropertyElement T1  ; <eg:Goo> </end> $ WantTopLevelDescription T1  ; <eg:Goo> </end> <eg:Goo> $ WantPropertyElement T2 E1  ; 'abcde' $ ? ; </end> $ *   ; pred-object $ WantTopLevelDescription T1  ; object $ ! ; }
WantPropertyElement <RDF:li> $ WantLiteralValueOrDescription   { <eg:Goo> $ * T1 P1  ; <eg:Goo> </end> $ WantLiteralValueOrDescription T1 P1  ; <eg:Goo> </end> <eg:Goo> $ ? ; 'abcde' $ WantLiteralValueOrDescription   ; 'abcde' <eg:Goo> $ ? ; 'abcde' </end> $ *  P1  ; </end> $ *  P1  ; pred-object $ WantLiteralValueOrDescription T1  ; object $ ! ; }
WantPropertyElement <eg:Goo> $ WantLiteralValueOrDescription   { <eg:Goo> $ * T1 P1  ; <eg:Goo> </end> $ WantLiteralValueOrDescription T1 P1  ; <eg:Goo> </end> <eg:Goo> $ ? ; 'abcde' $ WantLiteralValueOrDescription   ; 'abcde' <eg:Goo> $ ? ; 'abcde' </end> $ *  P1  ; </end> $ *  P1  ; pred-object $ WantLiteralValueOrDescription T1  ; object $ ! ; }
WantPropertyElement <RDF:li> xml:space $ WantLiteralValueOrDescription   { <eg:Goo> $ * T1 P1  ; <eg:Goo> </end> $ WantLiteralValueOrDescription T1 P1  ; <eg:Goo> </end> <eg:Goo> $ ? ; 'abcde' $ WantLiteralValueOrDescription   ; 'abcde' <eg:Goo> $ ? ; 'abcde' </end> $ *  P1  ; </end> $ *  P1  ; pred-object $ WantLiteralValueOrDescription T1  ; object $ ! ; }
WantPropertyElement <eg:Goo> xml:space $ WantLiteralValueOrDescription   { <eg:Goo> $ * T1 P1  ; <eg:Goo> </end> $ WantLiteralValueOrDescription T1 P1  ; <eg:Goo> </end> <eg:Goo> $ ? ; 'abcde' $ WantLiteralValueOrDescription   ; 'abcde' <eg:Goo> $ ? ; 'abcde' </end> $ *  P1  ; </end> $ *  P1  ; pred-object $ WantLiteralValueOrDescription T1  ; object $ ! ; }
WantPropertyElement <RDF:li> xml:base $ WantLiteralValueOrDescription   { <eg:Goo> $ * T1 P1  ; <eg:Goo> </end> $ WantLiteralValueOrDescription T1 P1  ; <eg:Goo> </end> <eg:Goo> $ ? ; 'abcde' $ WantLiteralValueOrDescription   ; 'abcde' <eg:Goo> $ ? ; 'abcde' </end> $ *  P1  ; </end> $ *  P1  ; pred-object $ WantLiteralValueOrDescription T1  ; object $ ! ; }
WantPropertyElement <eg:Goo> xml:base $ WantLiteralValueOrDescription   { <eg:Goo> $ * T1 P1  ; <eg:Goo> </end> $ WantLiteralValueOrDescription T1 P1  ; <eg:Goo> </end> <eg:Goo> $ ? ; 'abcde' $ WantLiteralValueOrDescription   ; 'abcde' <eg:Goo> $ ? ; 'abcde' </end> $ *  P1  ; </end> $ *  P1  ; pred-object $ WantLiteralValueOrDescription T1  ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:ID $ WantLiteralValueOrDescription   { <eg:Goo> $ * T4 P1 R1  ; <eg:Goo> </end> $ WantLiteralValueOrDescription T4 P1 R1  ; <eg:Goo> </end> <eg:Goo> $ ? ; 'abcde' $ WantLiteralValueOrDescription   ; 'abcde' <eg:Goo> $ ? ; 'abcde' </end> $ * T3 P1 R1  ; </end> $ * T3 P1 R1  ; pred-object $ WantLiteralValueOrDescription T1  ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:ID $ WantLiteralValueOrDescription   { <eg:Goo> $ * T4 P1 R1  ; <eg:Goo> </end> $ WantLiteralValueOrDescription T4 P1 R1  ; <eg:Goo> </end> <eg:Goo> $ ? ; 'abcde' $ WantLiteralValueOrDescription   ; 'abcde' <eg:Goo> $ ? ; 'abcde' </end> $ * T3 P1 R1  ; </end> $ * T3 P1 R1  ; pred-object $ WantLiteralValueOrDescription T1  ; object $ ! ; }
WantPropertyElement <RDF:li> xml:space RDF:ID $ WantLiteralValueOrDescription   { <eg:Goo> $ * T4 P1 R1  ; <eg:Goo> </end> $ WantLiteralValueOrDescription T4 P1 R1  ; <eg:Goo> </end> <eg:Goo> $ ? ; 'abcde' $ WantLiteralValueOrDescription   ; 'abcde' <eg:Goo> $ ? ; 'abcde' </end> $ * T3 P1 R1  ; </end> $ * T3 P1 R1  ; pred-object $ WantLiteralValueOrDescription T1  ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:ID xml:base $ WantLiteralValueOrDescription   { <eg:Goo> $ * T4 P1 R1  ; <eg:Goo> </end> $ WantLiteralValueOrDescription T4 P1 R1  ; <eg:Goo> </end> <eg:Goo> $ ? ; 'abcde' $ WantLiteralValueOrDescription   ; 'abcde' <eg:Goo> $ ? ; 'abcde' </end> $ * T3 P1 R1  ; </end> $ * T3 P1 R1  ; pred-object $ WantLiteralValueOrDescription T1  ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:ID xml:lang $ WantLiteralValueOrDescription   { <eg:Goo> $ * T4 P1 R1  ; <eg:Goo> </end> $ WantLiteralValueOrDescription T4 P1 R1  ; <eg:Goo> </end> <eg:Goo> $ ? ; 'abcde' $ WantLiteralValueOrDescription   ; 'abcde' <eg:Goo> $ ? ; 'abcde' </end> $ * T3 P1 R1  ; </end> $ * T3 P1 R1  ; pred-object $ WantLiteralValueOrDescription T1  ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:parseType='Literal' $ OuterXMLLiteral   { <eg:Goo> $ InnerXMLLiteral   ; <eg:Goo> </end> $ OuterXMLLiteral   ; <eg:Goo> </end> <eg:Goo> $ InnerXMLLiteral   ; 'abcde' $ OuterXMLLiteral   ; 'abcde' <eg:Goo> $ InnerXMLLiteral   ; 'abcde' </end> $ *  P1  ; </end> $ *  P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:parseType='Literal' $ OuterXMLLiteral   { <eg:Goo> $ InnerXMLLiteral   ; <eg:Goo> </end> $ OuterXMLLiteral   ; <eg:Goo> </end> <eg:Goo> $ InnerXMLLiteral   ; 'abcde' $ OuterXMLLiteral   ; 'abcde' <eg:Goo> $ InnerXMLLiteral   ; 'abcde' </end> $ *  P1  ; </end> $ *  P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> xml:space RDF:parseType='Literal' $ OuterXMLLiteral   { <eg:Goo> $ InnerXMLLiteral   ; <eg:Goo> </end> $ OuterXMLLiteral   ; <eg:Goo> </end> <eg:Goo> $ InnerXMLLiteral   ; 'abcde' $ OuterXMLLiteral   ; 'abcde' <eg:Goo> $ InnerXMLLiteral   ; 'abcde' </end> $ *  P1  ; </end> $ *  P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> xml:space RDF:parseType='Literal' $ OuterXMLLiteral   { <eg:Goo> $ InnerXMLLiteral   ; <eg:Goo> </end> $ OuterXMLLiteral   ; <eg:Goo> </end> <eg:Goo> $ InnerXMLLiteral   ; 'abcde' $ OuterXMLLiteral   ; 'abcde' <eg:Goo> $ InnerXMLLiteral   ; 'abcde' </end> $ *  P1  ; </end> $ *  P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:parseType='Literal' xml:base $ OuterXMLLiteral   { <eg:Goo> $ InnerXMLLiteral   ; <eg:Goo> </end> $ OuterXMLLiteral   ; <eg:Goo> </end> <eg:Goo> $ InnerXMLLiteral   ; 'abcde' $ OuterXMLLiteral   ; 'abcde' <eg:Goo> $ InnerXMLLiteral   ; 'abcde' </end> $ *  P1  ; </end> $ *  P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:parseType='Literal' xml:base $ OuterXMLLiteral   { <eg:Goo> $ InnerXMLLiteral   ; <eg:Goo> </end> $ OuterXMLLiteral   ; <eg:Goo> </end> <eg:Goo> $ InnerXMLLiteral   ; 'abcde' $ OuterXMLLiteral   ; 'abcde' <eg:Goo> $ InnerXMLLiteral   ; 'abcde' </end> $ *  P1  ; </end> $ *  P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:parseType='Literal' xml:lang $ OuterXMLLiteral   { <eg:Goo> $ InnerXMLLiteral   ; <eg:Goo> </end> $ OuterXMLLiteral   ; <eg:Goo> </end> <eg:Goo> $ InnerXMLLiteral   ; 'abcde' $ OuterXMLLiteral   ; 'abcde' <eg:Goo> $ InnerXMLLiteral   ; 'abcde' </end> $ *  P1  ; </end> $ *  P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:parseType='Literal' xml:base xml:lang $ OuterXMLLiteral   { <eg:Goo> $ InnerXMLLiteral   ; <eg:Goo> </end> $ OuterXMLLiteral   ; <eg:Goo> </end> <eg:Goo> $ InnerXMLLiteral   ; 'abcde' $ OuterXMLLiteral   ; 'abcde' <eg:Goo> $ InnerXMLLiteral   ; 'abcde' </end> $ *  P1  ; </end> $ *  P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:nodeID $ WantEmpty  P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ *  P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:nodeID $ WantEmpty  P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ *  P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> xml:space RDF:nodeID $ WantEmpty  P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ *  P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:resource $ WantEmpty  P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ *  P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:resource $ WantEmpty  P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ *  P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> xml:space RDF:resource $ WantEmpty  P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ *  P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> xml:space RDF:resource $ WantEmpty  P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ *  P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> xml:base RDF:resource $ WantEmpty  P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ *  P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:nodeID xml:base $ WantEmpty  P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ *  P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:nodeID xml:base $ WantEmpty  P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ *  P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:nodeID xml:lang $ WantEmpty  P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ *  P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> xml:space RDF:nodeID xml:lang $ WantEmpty  P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ *  P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:resource xml:lang $ WantEmpty  P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ *  P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:type RDF:resource $ WantEmpty T1 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T1 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:type RDF:resource $ WantEmpty T1 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T1 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> eg:foo RDF:resource $ WantEmpty T1 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T1 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> eg:foo RDF:resource $ WantEmpty T1 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T1 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:type $ WantEmpty T1 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T1 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:type $ WantEmpty T1 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T1 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:nodeID RDF:type $ WantEmpty T1 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T1 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:nodeID RDF:type $ WantEmpty T1 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T1 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> xml:space RDF:nodeID RDF:type $ WantEmpty T1 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T1 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> xml:space RDF:type $ WantEmpty T1 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T1 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:type xml:base $ WantEmpty T1 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T1 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:type xml:base $ WantEmpty T1 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T1 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:nodeID RDF:type xml:base $ WantEmpty T1 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T1 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:type RDF:resource xml:lang $ WantEmpty T1 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T1 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> eg:foo RDF:resource xml:lang $ WantEmpty T1 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T1 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:type xml:lang $ WantEmpty T1 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T1 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:nodeID RDF:type xml:lang $ WantEmpty T1 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T1 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> xml:space RDF:type xml:lang $ WantEmpty T1 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T1 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> eg:foo xml:lang $ WantEmpty T1 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T1 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:nodeID eg:foo xml:lang $ WantEmpty T1 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T1 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> eg:foo $ WantEmpty T1 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T1 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> eg:foo $ WantEmpty T1 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T1 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:nodeID eg:foo $ WantEmpty T1 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T1 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:nodeID eg:foo $ WantEmpty T1 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T1 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:type eg:foo xml:base RDF:resource $ WantEmpty T2 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T2 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:type eg:foo RDF:resource $ WantEmpty T2 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T2 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:type eg:foo RDF:resource $ WantEmpty T2 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T2 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:type eg:foo xml:base $ WantEmpty T2 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T2 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:nodeID RDF:type eg:foo xml:base $ WantEmpty T2 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T2 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:type eg:foo RDF:resource xml:lang $ WantEmpty T2 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T2 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:type eg:foo xml:base xml:lang $ WantEmpty T2 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T2 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:type eg:foo xml:lang $ WantEmpty T2 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T2 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:nodeID RDF:type eg:foo xml:lang $ WantEmpty T2 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T2 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:type eg:foo $ WantEmpty T2 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T2 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:type eg:foo $ WantEmpty T2 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T2 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:nodeID RDF:type eg:foo $ WantEmpty T2 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T2 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:nodeID RDF:type eg:foo $ WantEmpty T2 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T2 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> xml:space RDF:type eg:foo $ WantEmpty T2 P1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T2 P1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:parseType='Literal' RDF:ID $ OuterXMLLiteral   { <eg:Goo> $ InnerXMLLiteral   ; <eg:Goo> </end> $ OuterXMLLiteral   ; <eg:Goo> </end> <eg:Goo> $ InnerXMLLiteral   ; 'abcde' $ OuterXMLLiteral   ; 'abcde' <eg:Goo> $ InnerXMLLiteral   ; 'abcde' </end> $ * T3 P1 R1  ; </end> $ * T3 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:parseType='Literal' RDF:ID $ OuterXMLLiteral   { <eg:Goo> $ InnerXMLLiteral   ; <eg:Goo> </end> $ OuterXMLLiteral   ; <eg:Goo> </end> <eg:Goo> $ InnerXMLLiteral   ; 'abcde' $ OuterXMLLiteral   ; 'abcde' <eg:Goo> $ InnerXMLLiteral   ; 'abcde' </end> $ * T3 P1 R1  ; </end> $ * T3 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:parseType='Literal' RDF:ID xml:base $ OuterXMLLiteral   { <eg:Goo> $ InnerXMLLiteral   ; <eg:Goo> </end> $ OuterXMLLiteral   ; <eg:Goo> </end> <eg:Goo> $ InnerXMLLiteral   ; 'abcde' $ OuterXMLLiteral   ; 'abcde' <eg:Goo> $ InnerXMLLiteral   ; 'abcde' </end> $ * T3 P1 R1  ; </end> $ * T3 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:parseType='Literal' RDF:ID xml:lang $ OuterXMLLiteral   { <eg:Goo> $ InnerXMLLiteral   ; <eg:Goo> </end> $ OuterXMLLiteral   ; <eg:Goo> </end> <eg:Goo> $ InnerXMLLiteral   ; 'abcde' $ OuterXMLLiteral   ; 'abcde' <eg:Goo> $ InnerXMLLiteral   ; 'abcde' </end> $ * T3 P1 R1  ; </end> $ * T3 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:parseType='Literal' RDF:ID xml:lang $ OuterXMLLiteral   { <eg:Goo> $ InnerXMLLiteral   ; <eg:Goo> </end> $ OuterXMLLiteral   ; <eg:Goo> </end> <eg:Goo> $ InnerXMLLiteral   ; 'abcde' $ OuterXMLLiteral   ; 'abcde' <eg:Goo> $ InnerXMLLiteral   ; 'abcde' </end> $ * T3 P1 R1  ; </end> $ * T3 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:parseType='Literal' RDF:ID xml:base xml:lang $ OuterXMLLiteral   { <eg:Goo> $ InnerXMLLiteral   ; <eg:Goo> </end> $ OuterXMLLiteral   ; <eg:Goo> </end> <eg:Goo> $ InnerXMLLiteral   ; 'abcde' $ OuterXMLLiteral   ; 'abcde' <eg:Goo> $ InnerXMLLiteral   ; 'abcde' </end> $ * T3 P1 R1  ; </end> $ * T3 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:ID RDF:nodeID $ WantEmpty T3 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T3 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:ID RDF:nodeID $ WantEmpty T3 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T3 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> xml:space RDF:ID RDF:nodeID $ WantEmpty T3 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T3 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:ID RDF:resource $ WantEmpty T3 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T3 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:ID RDF:resource $ WantEmpty T3 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T3 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> xml:space RDF:ID RDF:resource $ WantEmpty T3 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T3 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:ID xml:base RDF:resource $ WantEmpty T3 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T3 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:ID RDF:nodeID xml:base $ WantEmpty T3 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T3 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:ID RDF:resource xml:lang $ WantEmpty T3 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T3 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:ID RDF:type RDF:resource $ WantEmpty T4 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T4 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:ID RDF:type RDF:resource $ WantEmpty T4 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T4 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:ID eg:foo RDF:resource $ WantEmpty T4 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T4 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:ID eg:foo RDF:resource $ WantEmpty T4 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T4 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> xml:space RDF:ID eg:foo RDF:resource $ WantEmpty T4 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T4 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:ID RDF:type $ WantEmpty T4 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T4 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:ID RDF:type $ WantEmpty T4 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T4 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:ID RDF:nodeID RDF:type $ WantEmpty T4 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T4 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:ID RDF:nodeID RDF:type $ WantEmpty T4 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T4 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:ID RDF:nodeID RDF:type xml:base $ WantEmpty T4 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T4 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:ID eg:foo xml:base $ WantEmpty T4 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T4 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:ID eg:foo xml:base $ WantEmpty T4 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T4 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:ID RDF:nodeID eg:foo xml:base $ WantEmpty T4 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T4 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:ID eg:foo RDF:resource xml:lang $ WantEmpty T4 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T4 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:ID RDF:nodeID RDF:type xml:lang $ WantEmpty T4 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T4 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:ID RDF:nodeID RDF:type xml:lang $ WantEmpty T4 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T4 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:ID RDF:nodeID eg:foo xml:lang $ WantEmpty T4 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T4 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:ID eg:foo $ WantEmpty T4 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T4 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:ID eg:foo $ WantEmpty T4 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T4 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> xml:space RDF:ID eg:foo $ WantEmpty T4 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T4 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:ID RDF:nodeID eg:foo $ WantEmpty T4 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T4 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:ID RDF:nodeID eg:foo $ WantEmpty T4 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T4 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:ID RDF:type eg:foo xml:base RDF:resource $ WantEmpty T5 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T5 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:ID RDF:type eg:foo RDF:resource $ WantEmpty T5 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T5 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:ID RDF:type eg:foo RDF:resource $ WantEmpty T5 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T5 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:ID RDF:type eg:foo xml:base $ WantEmpty T5 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T5 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:ID RDF:nodeID RDF:type eg:foo xml:base $ WantEmpty T5 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T5 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:ID RDF:nodeID RDF:type eg:foo xml:base $ WantEmpty T5 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T5 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:ID RDF:type eg:foo xml:base RDF:resource xml:lang $ WantEmpty T5 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T5 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:ID RDF:type eg:foo RDF:resource xml:lang $ WantEmpty T5 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T5 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:ID RDF:nodeID RDF:type eg:foo xml:base xml:lang $ WantEmpty T5 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T5 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:ID RDF:type eg:foo xml:lang $ WantEmpty T5 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T5 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:ID RDF:nodeID RDF:type eg:foo xml:lang $ WantEmpty T5 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T5 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:ID RDF:type eg:foo $ WantEmpty T5 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T5 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:ID RDF:type eg:foo $ WantEmpty T5 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T5 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <RDF:li> RDF:ID RDF:nodeID RDF:type eg:foo $ WantEmpty T5 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T5 P1 R1  ; pred-object $ ! ; object $ ! ; }
WantPropertyElement <eg:Goo> RDF:ID RDF:nodeID RDF:type eg:foo $ WantEmpty T5 P1 R1  { <eg:Goo> $ ? ; 'abcde' $ ? ; </end> $ * T5 P1 R1  ; pred-object $ ! ; object $ ! ; }
LookingForRDF <RDF:li> RDF:parseType='Resource' $ *   { }
LookingForRDF <RDF:Description> RDF:parseType='Resource' $ *   { }
LookingForRDF <eg:Goo> RDF:parseType='Resource' $ *   { }
LookingForRDF <RDF:li> RDF:parseType='Literal' $ *   { }
LookingForRDF <RDF:Description> RDF:parseType='Literal' $ *   { }
LookingForRDF <eg:Goo> RDF:parseType='Literal' $ *   { }
LookingForRDF <RDF:li> RDF:parseType='Collection' $ *   { }
LookingForRDF <RDF:Description> RDF:parseType='Collection' $ *   { }
LookingForRDF <eg:Goo> RDF:parseType='Collection' $ *   { }
LookingForRDF <RDF:li> $ *   { }
LookingForRDF <RDF:Description> $ *   { }
LookingForRDF <eg:Goo> $ *   { }
LookingForRDF <RDF:li> RDF:ID $ *   { }
LookingForRDF <RDF:Description> RDF:ID $ *   { }
LookingForRDF <eg:Goo> RDF:ID $ *   { }
LookingForRDF <RDF:li> RDF:nodeID $ *   { }
LookingForRDF <RDF:Description> RDF:nodeID $ *   { }
LookingForRDF <eg:Goo> RDF:nodeID $ *   { }
LookingForRDF <RDF:li> RDF:bagID $ *   { }
LookingForRDF <RDF:Description> RDF:bagID $ *   { }
LookingForRDF <eg:Goo> RDF:bagID $ *   { }
LookingForRDF <RDF:li> xml:space $ *   { }
LookingForRDF <RDF:li> RDF:resource $ *   { }
LookingForRDF <RDF:Description> RDF:resource $ *   { }
LookingForRDF <eg:Goo> RDF:resource $ *   { }
LookingForRDF <RDF:li> RDF:type $ *   { }
LookingForRDF <RDF:Description> RDF:type $ *   { }
LookingForRDF <eg:Goo> RDF:type $ *   { }
LookingForRDF <RDF:li> RDF:datatype $ *   { }
LookingForRDF <RDF:Description> RDF:datatype $ *   { }
LookingForRDF <eg:Goo> RDF:datatype $ *   { }
LookingForRDF <RDF:li> xml:base $ *   { }
LookingForRDF <RDF:Description> xml:base $ *   { }
LookingForRDF <eg:Goo> xml:base $ *   { }
LookingForRDF <RDF:li> xml:lang $ *   { }
LookingForRDF <RDF:Description> xml:lang $ *   { }
LookingForRDF <RDF:li> RDF:aboutEach $ *   { }
LookingForRDF <RDF:Description> RDF:aboutEach $ *   { }
LookingForRDF <eg:Goo> RDF:aboutEach $ *   { }
LookingForRDF <RDF:li> eg:foo $ *   { }
LookingForRDF <RDF:Description> eg:foo $ *   { }
LookingForRDF <eg:Goo> eg:foo $ *   { }
LookingForRDF <RDF:li> RDF:about $ *   { }
LookingForRDF <RDF:Description> RDF:about $ *   { }
LookingForRDF <eg:Goo> RDF:about $ *   { }
LookingForRDF <RDF:li> RDF:aboutEachPrefix $ *   { }
LookingForRDF <RDF:Description> RDF:aboutEachPrefix $ *   { }
LookingForRDF <eg:Goo> RDF:aboutEachPrefix $ *   { }
