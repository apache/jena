package org.apache.jena.vocabulary;

import org.apache.jena.rdf.model.*;

/**
 * Vocabulary definitions from https://ref.gs1.org/voc/data/gs1Voc.ttl
 *
 * @author Auto-generated by schemagen on 04 Feb 2025 10:14
 */
public class GS1 {
    /**
     * <p>The RDF model that holds the vocabulary terms</p>
     */
    private static final Model m = ModelFactory.createDefaultModel();

    /**
     * <p>The namespace of the vocabulary as a string</p>
     */
    public static final String NS = "https://ref.gs1.org/voc/";

    /**
     * <p>The namespace of the vocabulary as a string</p>
     *
     * @return namespace as String
     * @see #NS
     */
    public static String getURI() {
        return NS;
    }

    /**
     * <p>The namespace of the vocabulary as a resource</p>
     */
    public static final Resource NAMESPACE = m.createResource(NS);

    /**
     * <p>The ontology's owl:versionInfo as a string</p>
     */
    public static final String VERSION_INFO = "1.13.1";

    /**
     * <p>Code indicating a means of payment, for example, BANK_CHEQUE, CASH, etc.</p>
     */
    public static final Property acceptedPaymentMethod = m.createProperty(NS + "acceptedPaymentMethod");

    /**
     * <p>A link to ideas for using a product or engaging in other forms of entertainment,
     * particularly with children.</p>
     */
    public static final Property activityIdeas = m.createProperty(NS + "activityIdeas");

    /**
     * <p>Location identifiers assigned and managed by government bodies, trade organisations,
     * and other entities.</p>
     */
    public static final Property additionalLocationID = m.createProperty(NS + "additionalLocationID");

    /**
     * <p>Party/organisation identifiers assigned and managed by government bodies,
     * trade organisations, and other entities.</p>
     */
    public static final Property additionalOrganizationID = m.createProperty(NS + "additionalOrganizationID");

    /**
     * <p>The value associated with the Additional Organization Identification Type
     * Value.</p>
     */
    public static final Property additionalOrganizationIdentificationTypeValue = m.createProperty(NS + "additionalOrganizationIdentificationTypeValue");

    /**
     * <p>Relates to a set of additional product classification details</p>
     */
    public static final Property additionalProductClassification = m.createProperty(NS + "additionalProductClassification");

    /**
     * <p>Code specifying the applied additional product classification scheme.</p>
     */
    public static final Property additionalProductClassificationCode = m.createProperty(NS + "additionalProductClassificationCode");

    /**
     * <p>A description related to the additional product classification code value.</p>
     */
    public static final Property additionalProductClassificationCodeDescription = m.createProperty(NS + "additionalProductClassificationCodeDescription");

    /**
     * <p>Code specifying an additional product classification other than the GS1 Global
     * Product Classification. The applied classification scheme is specified as
     * additional information together with the classification value.</p>
     */
    public static final Property additionalProductClassificationValue = m.createProperty(NS + "additionalProductClassificationValue");

    /**
     * <p>Additional variants necessary to communicate to the industry to help define
     * the product. Multiple variants can be established for each GTIN for e.g. Style,
     * Colour, and Fragrance .</p>
     */
    public static final Property additionalProductDescription = m.createProperty(NS + "additionalProductDescription");

    /**
     * <p>Relates to details about any additives that a product may contain.</p>
     */
    public static final Property additive = m.createProperty(NS + "additive");

    /**
     * <p>Code indicating the level of presence of the additive.</p>
     */
    public static final Property additiveLevelOfContainment = m.createProperty(NS + "additiveLevelOfContainment");

    /**
     * <p>The name of any additive or genetic modification contained or not contained
     * in the product .</p>
     */
    public static final Property additiveName = m.createProperty(NS + "additiveName");

    /**
     * <p>The postal address for an organization or place.</p>
     */
    public static final Property address = m.createProperty(NS + "address");

    /**
     * <p>Code specifying the country (and country subdivision) for the address using
     * ISO 3166-1.</p>
     */
    public static final Property addressCountry = m.createProperty(NS + "addressCountry");

    /**
     * <p>Text specifying the name of the locality, for example a city.</p>
     */
    public static final Property addressLocality = m.createProperty(NS + "addressLocality");

    /**
     * <p>Text specifying a province or state in abbreviated format for example NJ.</p>
     */
    public static final Property addressRegion = m.createProperty(NS + "addressRegion");

    /**
     * <p>A suburb within a town or city.</p>
     */
    public static final Property addressSuburb = m.createProperty(NS + "addressSuburb");

    /**
     * <p>Links to after-hours contact information. For general contact details, gs1:contactPoint
     * SHALL be used.</p>
     */
    public static final Property afterHoursContact = m.createProperty(NS + "afterHoursContact");

    /**
     * <p>A legally defined geographical region where the grapes for a wine were grown
     * also known as an appellation. It is recommended to populate this property
     * with an ISO 3166-2 code to indicate country and subdivision.</p>
     */
    public static final Property alcoholicBeverageSubregion = m.createProperty(NS + "alcoholicBeverageSubregion");

    /**
     * <p>A link to a description of the allergen information.</p>
     */
    public static final Property allergenInfo = m.createProperty(NS + "allergenInfo");

    /**
     * <p>Code specifying the level of presence of the allergen.</p>
     */
    public static final Property allergenLevelOfContainmentCode = m.createProperty(NS + "allergenLevelOfContainmentCode");

    /**
     * <p>The agency or other organization that defines or manages the criteria for
     * allergen containment.</p>
     */
    public static final Property allergenSpecificationAgency = m.createProperty(NS + "allergenSpecificationAgency");

    /**
     * <p>Free text field containing the name and version of the regulation or standard
     * that defines the criteria of allergen containment.</p>
     */
    public static final Property allergenSpecificationName = m.createProperty(NS + "allergenSpecificationName");

    /**
     * <p>Textual description of the presence or absence of allergens as governed by
     * local rules and regulations, specified as one string.</p>
     */
    public static final Property allergenStatement = m.createProperty(NS + "allergenStatement");

    /**
     * <p>Code specifying the type of allergen.</p>
     */
    public static final Property allergenType = m.createProperty(NS + "allergenType");

    /**
     * <p>Describes the meat product in terms of whether it is the whole animal or part
     * of the animal which has been cut such as the muscle, bone, organ, or fat.</p>
     */
    public static final Property anatomicalForm = m.createProperty(NS + "anatomicalForm");

    /**
     * <p>A link to a related mobile app</p>
     */
    public static final Property appDownload = m.createProperty(NS + "appDownload");

    /**
     * <p>A property linking a gs1:linkType to the primary GS1 key(s) for which it can
     * be used. Similar to rdfs:Domain but the value space is a GS1 Application Identifier,
     * not a class.</p>
     */
    public static final Property applicableTo = m.createProperty(NS + "applicableTo");

    /**
     * <p>Link to a file containing an audio clip which is relevant to the product.
     * Examples are commercials, or instructional/ how to use audio files.</p>
     */
    public static final Property audioFile = m.createProperty(NS + "audioFile");

    /**
     * <p>Links to details of covert/overt security markings that may be used to check
     * authenticity of a product instance.</p>
     */
    public static final Property authenticity = m.createProperty(NS + "authenticity");

    /**
     * <p>Provides human-readable instructions about how to locate a physical security
     * marking and read a value from it.</p>
     */
    public static final Property authenticitySecurityFeatureInstructions = m.createProperty(NS + "authenticitySecurityFeatureInstructions");

    /**
     * <p>Links to online instructions about how to locate a physical security marking
     * and read a value from it.</p>
     */
    public static final Property authenticitySecurityFeatureInstructionsURL = m.createProperty(NS + "authenticitySecurityFeatureInstructionsURL");

    /**
     * <p>Links to a regular expression to be used to perform syntax validation (plausibility
     * checking) of a string value read from a physical security marking.</p>
     */
    public static final Property authenticitySecurityFeatureRegularExpression = m.createProperty(NS + "authenticitySecurityFeatureRegularExpression");

    /**
     * <p>Links to a URI code value indicating a particular type of physical security
     * marking.</p>
     */
    public static final Property authenticitySecurityFeatureType = m.createProperty(NS + "authenticitySecurityFeatureType");

    /**
     * <p>Links to a string value read from a physical security marking.</p>
     */
    public static final Property authenticitySecurityFeatureValue = m.createProperty(NS + "authenticitySecurityFeatureValue");

    /**
     * <p>The date from which the product is no longer available from the information
     * provider, including seasonal or temporary product and services .</p>
     */
    public static final Property availabilityEnds = m.createProperty(NS + "availabilityEnds");

    /**
     * <p>The date from which the product is available from the information provider,
     * including seasonal or temporary product and services.</p>
     */
    public static final Property availabilityStarts = m.createProperty(NS + "availabilityStarts");

    /**
     * <p>The location the offered product or service is available from.</p>
     */
    public static final Property availableAtOrFrom = m.createProperty(NS + "availableAtOrFrom");

    /**
     * <p>ISO 639-1 code specifying the language of a specified contact point.</p>
     */
    public static final Property availableLanguage = m.createProperty(NS + "availableLanguage");

    /**
     * <p>An award or prize given to the product.</p>
     */
    public static final Property awardPrize = m.createProperty(NS + "awardPrize");

    /**
     * <p>Indicates the achievement of the product in relation to a prize or award,
     * e.g. winner, runner-up, shortlisted.</p>
     */
    public static final Property awardPrizeCode = m.createProperty(NS + "awardPrizeCode");

    /**
     * <p>An ISO standard code identifying the country in which a prize or award is
     * given. It is recommended to populate this property with an ISO 3166-1 country
     * code.</p>
     */
    public static final Property awardPrizeCountryCode = m.createProperty(NS + "awardPrizeCountryCode");

    /**
     * <p>Text that describes the awards won.</p>
     */
    public static final Property awardPrizeDescription = m.createProperty(NS + "awardPrizeDescription");

    /**
     * <p>Free text listing members of the jury that awarded the prize.</p>
     */
    public static final Property awardPrizeJury = m.createProperty(NS + "awardPrizeJury");

    /**
     * <p>The name of a prize or award which the product has received.</p>
     */
    public static final Property awardPrizeName = m.createProperty(NS + "awardPrizeName");

    /**
     * <p>The year in which a prize or award was given.</p>
     */
    public static final Property awardPrizeYear = m.createProperty(NS + "awardPrizeYear");

    /**
     * <p>A link to information typically from the owner of the identified entity about
     * the creative background, thought leadership or influence of the identified
     * entity. This may include the inspiration, innovation for a development process,
     * literary approach or, the science or technology used.</p>
     */
    public static final Property backgroundInfo = m.createProperty(NS + "backgroundInfo");

    /**
     * <p>A fixed physical location where a mobile location most commonly resides. If
     * gs1:glnType is present, gs1:baseLocationGLN SHALL only be used when gs1:glnType
     * is gs1:GLN_TypeCode-MOBILE_PHYSICAL_LOCATION</p>
     */
    public static final Property baseLocation = m.createProperty(NS + "baseLocation");

    /**
     * <p>Best before date on the label or package signifies the end of the period under
     * which the product will retain specific quality attributes or claims even though
     * the product may continue to retain positive quality attributes after this
     * date. Best before date is primarily used for consumer information and may
     * be a regulatory requirement.</p>
     */
    public static final Property bestBeforeDate = m.createProperty(NS + "bestBeforeDate");

    /**
     * <p>The year in which the majority of ingredients are harvested and/or the alcoholic
     * beverage is produced. Determination as to whether the vintage year is the
     * harvest date or production date is according to requirements in the Target
     * Market.</p>
     */
    public static final Property beverageVintage = m.createProperty(NS + "beverageVintage");

    /**
     * <p>Biotin Acid per specified nutrient basis quantity.</p>
     */
    public static final Property biotinPerNutrientBasis = m.createProperty(NS + "biotinPerNutrientBasis");

    /**
     * <p>The descriptive term that is used by the product manufacturer to identify
     * whether the product makes a specific claim to contain no bones.</p>
     */
    public static final Property bonelessClaim = m.createProperty(NS + "bonelessClaim");

    /**
     * <p>The brand of the product that appears on the consumer package.</p>
     */
    public static final Property brand = m.createProperty(NS + "brand");

    /**
     * <p>A link to a brand presence aimed at clinical professionals.</p>
     */
    public static final Property brandHomepageClinical = m.createProperty(NS + "brandHomepageClinical");

    /**
     * <p>A link to a brand presence aimed at patients.</p>
     */
    public static final Property brandHomepagePatient = m.createProperty(NS + "brandHomepagePatient");

    /**
     * <p>The brand name of the product that appears on the consumer package.</p>
     */
    public static final Property brandName = m.createProperty(NS + "brandName");

    /**
     * <p>The brand owner of the product. The organization that is responsible for allocating
     * the GTIN to the product.</p>
     */
    public static final Property brandOwner = m.createProperty(NS + "brandOwner");

    /**
     * <p>Method for noting business structure (e.g., Limited liability company, not
     * for profit). Expects a repeatable value from gs1:BusinessEntityType code list.</p>
     */
    public static final Property businessEntity = m.createProperty(NS + "businessEntity");

    /**
     * <p>Calcium per specified nutrient basis quantity.</p>
     */
    public static final Property calciumPerNutrientBasis = m.createProperty(NS + "calciumPerNutrientBasis");

    /**
     * <p>Carbohydrates per specified nutrient basis quantity.</p>
     */
    public static final Property carbohydratesPerNutrientBasis = m.createProperty(NS + "carbohydratesPerNutrientBasis");

    /**
     * <p>A link to information about jobs, careers, or other employment opportunities
     * associated to an organisation or location.</p>
     */
    public static final Property careersInfo = m.createProperty(NS + "careersInfo");

    /**
     * <p>Free text field describing the sea zone from which the product was caught
     * in.</p>
     */
    public static final Property catchZone = m.createProperty(NS + "catchZone");

    /**
     * <p>Certification information about a product, organisation or location.</p>
     */
    public static final Property certification = m.createProperty(NS + "certification");

    /**
     * <p>Name of the organisation issuing the certification standard or other requirement
     * being met .</p>
     */
    public static final Property certificationAgency = m.createProperty(NS + "certificationAgency");

    /**
     * <p>URL of the organisation issuing the certification standard or other requirement
     * being met. e.g. https://www.msc.org , https://www.fsc.org</p>
     */
    public static final Property certificationAgencyURL = m.createProperty(NS + "certificationAgencyURL");

    /**
     * <p>Date of completion of the auditing needed for certification</p>
     */
    public static final Property certificationAuditDate = m.createProperty(NS + "certificationAuditDate");

    /**
     * <p>Last date of validity for the certification. (After this date the certification
     * lapses and would need to be renewed/replaced)</p>
     */
    public static final Property certificationEndDate = m.createProperty(NS + "certificationEndDate");

    /**
     * <p>A reference (i.e, to a certificate instance) issued to confirm that a product,
     * party or location has passed certification. e.g. 'XSC-C-12345'</p>
     */
    public static final Property certificationIdentification = m.createProperty(NS + "certificationIdentification");

    /**
     * <p>A link to certification information.</p>
     */
    public static final Property certificationInfo = m.createProperty(NS + "certificationInfo");

    /**
     * <p>Name of the certification standard. Free text. Example: 'Egg classification'
     * .</p>
     */
    public static final Property certificationStandard = m.createProperty(NS + "certificationStandard");

    /**
     * <p>First date of validity for the certification</p>
     */
    public static final Property certificationStartDate = m.createProperty(NS + "certificationStartDate");

    /**
     * <p>Certification scope statement of the individual certification instance. The
     * same certificationStandard can be issued with different values of certificationStatement
     * in different instances.</p>
     */
    public static final Property certificationStatement = m.createProperty(NS + "certificationStatement");

    /**
     * <p>Indicates the current status of the certification, e.g. active or inactive.</p>
     */
    public static final Property certificationStatus = m.createProperty(NS + "certificationStatus");

    /**
     * <p>References the object (e.g. product, asset, container), party or location
     * being certified. If multiple values are specified, the certification details
     * apply to the logical conjunction (AND) of groups of different types, while
     * a logical disjunction (OR) applies within each group of the same type. For
     * example, two sibling organisations O1 and O2 can process products P1 and P2
     * at locations L1 and L2: meaning that either organisation can process either
     * product at either location (OR); but the certificate holds for the combinations
     * of organisation (either O1 OR O2) AND product (either P1 OR P2) AND location
     * (either L1 OR L2)</p>
     */
    public static final Property certificationSubject = m.createProperty(NS + "certificationSubject");

    /**
     * <p>Indicates the type of certification</p>
     */
    public static final Property certificationType = m.createProperty(NS + "certificationType");

    /**
     * <p>If gs1:certificationURI is present, it should point to data about this individual
     * certificate within a repository maintained by the certification agency.</p>
     */
    public static final Property certificationURI = m.createProperty(NS + "certificationURI");

    /**
     * <p>The certification's standard value. Example: '4'.</p>
     */
    public static final Property certificationValue = m.createProperty(NS + "certificationValue");

    /**
     * <p>The firmness of the cheese product for example EXTRA_HARD.</p>
     */
    public static final Property cheeseFirmness = m.createProperty(NS + "cheeseFirmness");

    /**
     * <p>A descriptive way to specify a date range as some cheeses are matured over
     * a period of time, but not an exact period. For example 3 to 4 weeks, over
     * 1 year etc. The term maturation is also known in other markets as Aged.</p>
     */
    public static final Property cheeseMaturationPeriodDescription = m.createProperty(NS + "cheeseMaturationPeriodDescription");

    /**
     * <p>Chloride per specified nutrient basis quantity.</p>
     */
    public static final Property chloridePerNutrientBasis = m.createProperty(NS + "chloridePerNutrientBasis");

    /**
     * <p>Cholesterol per specified nutrient basis quantity.</p>
     */
    public static final Property cholesterolPerNutrientBasis = m.createProperty(NS + "cholesterolPerNutrientBasis");

    /**
     * <p>Chromium per specified nutrient basis quantity.</p>
     */
    public static final Property chromiumPerNutrientBasis = m.createProperty(NS + "chromiumPerNutrientBasis");

    /**
     * <p>A circle is the circular region of a specified radius centred at a specified
     * latitude and longitude. A circle is expressed as a pair followed by a radius
     * in meters.</p>
     */
    public static final Property circle = m.createProperty(NS + "circle");

    /**
     * <p>Supplemental information to indicate the clothing cut or silhouette make of
     * the garment. For example, silhouette details for a pair of jeans such as boot
     * cut, or loose fit, comfort fit.</p>
     */
    public static final Property clothingCut = m.createProperty(NS + "clothingCut");

    /**
     * <p>A free text description of the type of collar on the garment.</p>
     */
    public static final Property collarType = m.createProperty(NS + "collarType");

    /**
     * <p>Relates to a set of details about the colour code for a product</p>
     */
    public static final Property colourCode = m.createProperty(NS + "colourCode");

    /**
     * <p>The parties controlling the colour code lists. Dependent on colour code value.</p>
     */
    public static final Property colourCodeList = m.createProperty(NS + "colourCodeList");

    /**
     * <p>A code indicating the colour of an object according to a specific code list.
     * The applied code list is specified as additional information together with
     * the colour code.</p>
     */
    public static final Property colourCodeValue = m.createProperty(NS + "colourCodeValue");

    /**
     * <p>A description of the colour of an object.</p>
     */
    public static final Property colourDescription = m.createProperty(NS + "colourDescription");

    /**
     * <p>The legally required/compulsory additional label information as stated on
     * the product packaging or label.</p>
     */
    public static final Property compulsoryAdditionalInformation = m.createProperty(NS + "compulsoryAdditionalInformation");

    /**
     * <p>The legally required/compulsory additional label information as stated on
     * the product packaging or label.</p>
     */
    public static final Property compulsoryAdditionalLabelInformation = m.createProperty(NS + "compulsoryAdditionalLabelInformation");

    /**
     * <p>The code indicating the type of the legally required/compulsory additional
     * information that is stated on the product packaging label.</p>
     */
    public static final Property compulsoryAdditionalLabelInformationType = m.createProperty(NS + "compulsoryAdditionalLabelInformationType");

    /**
     * <p>The first date/time that the buyer is allowed to sell the product to consumers.
     * Usually related to a specific geography. ISO 8601 date format CCYY-MM-DDTHH:MM:SS.</p>
     */
    public static final Property consumerFirstAvailabilityDateTime = m.createProperty(NS + "consumerFirstAvailabilityDateTime");

    /**
     * <p>Link to a website, file, or image containing the manufacturer's recommendations
     * for how the consumer or end user should store and handle the product.</p>
     */
    public static final Property consumerHandlingStorage = m.createProperty(NS + "consumerHandlingStorage");

    /**
     * <p>A link to information about safe handling and storage for consumer use.</p>
     */
    public static final Property consumerHandlingStorageInfo = m.createProperty(NS + "consumerHandlingStorageInfo");

    /**
     * <p>Indicates, with reference to the product branding, labelling or packaging,
     * the descriptive term that is used by the product manufacturer to identify
     * the period or stage in the consumer's life during which the product is considered
     * to be suitable.</p>
     */
    public static final Property consumerLifestage = m.createProperty(NS + "consumerLifestage");

    /**
     * <p>Additional information that should be used in advertising and in displaying.</p>
     */
    public static final Property consumerPackageDisclaimer = m.createProperty(NS + "consumerPackageDisclaimer");

    /**
     * <p>The consumer product variant may be used to distinguish one variant of a retail
     * consumer trade item from another if the change does not require the allocation
     * of a different Global Trade Item Number (per the GTIN Management Standard),
     * but communication between trading partners is required to support consumers.
     * The brand owner is responsible for assigning the consumer product variant.</p>
     */
    public static final Property consumerProductVariant = m.createProperty(NS + "consumerProductVariant");

    /**
     * <p>Expresses in text the consumer recycling instructions which are normally held
     * on the label or accompanying the product. Instructions may refer to the 'how'
     * the consumer is supposed to sort the product and packaging materials for recycling.</p>
     */
    public static final Property consumerRecyclingInstructions = m.createProperty(NS + "consumerRecyclingInstructions");

    /**
     * <p>Information on consumer safety regarding the product.</p>
     */
    public static final Property consumerSafetyInformation = m.createProperty(NS + "consumerSafetyInformation");

    /**
     * <p>A code indicating restrictions imposed on the product regarding how it can
     * be sold to the consumer for example Prescription Required.</p>
     */
    public static final Property consumerSalesCondition = m.createProperty(NS + "consumerSalesCondition");

    /**
     * <p>Expresses in text the consumer storage instructions of a product which are
     * normally held on the label or accompanying the product. This information may
     * or may not be labelled on the pack.</p>
     */
    public static final Property consumerStorageInstructions = m.createProperty(NS + "consumerStorageInstructions");

    /**
     * <p>Free text containing the usage instructions of a product, which are normally
     * held on the label or accompanying the product. This information may or may
     * not be labelled on the pack.</p>
     */
    public static final Property consumerUsageInstructions = m.createProperty(NS + "consumerUsageInstructions");

    /**
     * <p>Contact information. To specify a contact specifically designated for after-hours
     * support, see gs1:afterHoursContact</p>
     */
    public static final Property contactPoint = m.createProperty(NS + "contactPoint");

    /**
     * <p>The function or role of a contact. Value from gs1:ContactRoleType code list.</p>
     */
    public static final Property contactRoleCode = m.createProperty(NS + "contactRoleCode");

    /**
     * <p>The job title of the person that can be contacted for example Manager.</p>
     */
    public static final Property contactTitle = m.createProperty(NS + "contactTitle");

    /**
     * <p>The function or role of a contact for example Customer Support.</p>
     */
    public static final Property contactType = m.createProperty(NS + "contactType");

    /**
     * <p>Designates the larger physical location a sub-location is located within.
     * To specify sub-locations of a physical location, see gs1:containsPlace.</p>
     */
    public static final Property containedInPlace = m.createProperty(NS + "containedInPlace");

    /**
     * <p>Designates a sub-location (e.g., floor, room, shelf) within the physical location
     * being identified. There may be multiple sub-locations associated to a single,
     * physical location. To specify the larger physical location the sub-location
     * is located within, see gs1:containedInPlace</p>
     */
    public static final Property containsPlace = m.createProperty(NS + "containsPlace");

    /**
     * <p>An indication of the ease of preparation for semi-prepared products. The convenience
     * level indicates the level of preparation in percentage required to prepare
     * and helps the consumer to assess how long it will take to prepare the meal.</p>
     */
    public static final Property convenienceLevelPercent = m.createProperty(NS + "convenienceLevelPercent");

    /**
     * <p>Open standard spatial reference systems or coordinate reference systems that
     * provide coordinate-based local, regional or global system used to locate geographical
     * entities. Values should be URIs already defined by the IOPG Geomatics Committee
     * (https://epsg.org/), such as https://epsg.io/4326 (WGS84); https://epsg.io/4267
     * (NAD27); https://epsg.io/4230 (ED50); https://epsg.io/4618 (SAD69); https://epsg.io/4269
     * (NAD83). For elevation values, gs1:elevation SHALL be used.</p>
     */
    public static final Property coordinateReferenceSystem = m.createProperty(NS + "coordinateReferenceSystem");

    /**
     * <p>Copper per specified nutrient basis quantity.</p>
     */
    public static final Property copperPerNutrientBasis = m.createProperty(NS + "copperPerNutrientBasis");

    /**
     * <p>A short text string code (see values defined in ISO 3166) specifying the country
     * in which a processing or other activity is performed, for example processing,
     * bottling, manufacturing.Code specifying the country for the address using
     * ISO 3166-1.</p>
     */
    public static final Property countryCode = m.createProperty(NS + "countryCode");

    /**
     * <p>The place where product is assembled.</p>
     */
    public static final Property countryOfAssembly = m.createProperty(NS + "countryOfAssembly");

    /**
     * <p>The place where the product or ingredient was last processed and tested before
     * importation.</p>
     */
    public static final Property countryOfLastProcessing = m.createProperty(NS + "countryOfLastProcessing");

    /**
     * <p>Code indicating the country of origin of the product.</p>
     */
    public static final Property countryOfOrigin = m.createProperty(NS + "countryOfOrigin");

    /**
     * <p>A description of the geographic area the item may have originated from or
     * has been processed.</p>
     */
    public static final Property countryOfOriginStatement = m.createProperty(NS + "countryOfOriginStatement");

    /**
     * <p>A short text string code (see values defined in ISO 3166_2) specifying the
     * country subdivision in which an activity is performed, for example processing,
     * bottling, manufacturing.</p>
     */
    public static final Property countrySubdivisionCode = m.createProperty(NS + "countrySubdivisionCode");

    /**
     * <p>A code that identifies a county. A county is a territorial division in some
     * countries, forming the chief unit of local administration. In the US, a county
     * is a political and administrative division of a state.</p>
     */
    public static final Property countyCode = m.createProperty(NS + "countyCode");

    /**
     * <p>A street intersecting a main street (usually at right angles) and continuing
     * on both sides of it.</p>
     */
    public static final Property crossStreet = m.createProperty(NS + "crossStreet");

    /**
     * <p>The organization which provides product support to the trading partner organization
     * to which merchandise is sold.</p>
     */
    public static final Property customerSupportCentre = m.createProperty(NS + "customerSupportCentre");

    /**
     * <p>The percentage of the recommended daily intake of a nutrient as recommended
     * by authorities of the target market. Is expressed relative to the serving
     * size and base daily value intake.</p>
     */
    public static final Property dailyValueIntakePercent = m.createProperty(NS + "dailyValueIntakePercent");

    /**
     * <p>The default link for a given identified item to which a resolver will redirect
     * unless there is information in the request that is a better match.</p>
     */
    public static final Property defaultLink = m.createProperty(NS + "defaultLink");

    /**
     * <p>A set of 'default links' that may be differentiated by information in the
     * HTTP request headers sent to a resolver to enable a better match than the
     * single default link.</p>
     */
    public static final Property defaultLinkMulti = m.createProperty(NS + "defaultLinkMulti");

    /**
     * <p>The name of a division of an organization dealing with a specific activity</p>
     */
    public static final Property department = m.createProperty(NS + "department");

    /**
     * <p>Dependent products are products which are required to make the current product
     * functional.</p>
     */
    public static final Property dependentProprietaryProduct = m.createProperty(NS + "dependentProprietaryProduct");

    /**
     * <p>An alphanumeric size factor the brand owner wishes to communicate to the consumer.
     * IE Jumbo, Capri, Full Length, Maxi.</p>
     */
    public static final Property descriptiveSize = m.createProperty(NS + "descriptiveSize");

    /**
     * <p>Links to multiple pairs of gs1:DietTypeCode and diet type sub code (free-form
     * text string).</p>
     */
    public static final Property dietCode = m.createProperty(NS + "dietCode");

    /**
     * <p>Code indicating the diet the product is suitable for example Kosher.</p>
     */
    public static final Property dietType = m.createProperty(NS + "dietType");

    /**
     * <p>Free text for indication of diet not stated in the list of diets.</p>
     */
    public static final Property dietTypeDescription = m.createProperty(NS + "dietTypeDescription");

    /**
     * <p>Indicates a set of agreements or a certificate name that guarantees the product
     * is permitted in a particular diet. A diet type subcode is a subclassification
     * of a specific diet type. For example, Pareve is a diet type subcode of Kosher.</p>
     */
    public static final Property dietTypeSubcode = m.createProperty(NS + "dietTypeSubcode");

    /**
     * <p>The location reference associated to a digital place. If gs1:glnType is present,
     * SHALL only be associated if the value of gs1:glnType is gs1:GLN_TypeCode-DIGITAL_LOCATION.</p>
     */
    public static final Property digitalAddress = m.createProperty(NS + "digitalAddress");

    /**
     * <p>The name of a digital place. To specify the name of a physical location, see
     * gs1:physicalLocationName.</p>
     */
    public static final Property digitalLocationName = m.createProperty(NS + "digitalLocationName");

    /**
     * <p>If specified and set to true, the discount is available for each time the
     * minimum qualifying criteria are met. This can be used to express '$10 off
     * each $50 spend', which is distinct from a 20% discount because it is quantized
     * in units of spending.</p>
     */
    public static final Property discountRepeatsPerMultipleMinimum = m.createProperty(NS + "discountRepeatsPerMultipleMinimum");

    /**
     * <p>A code that specifies the type of payment discount applicable to an offer,
     * for example BOGO.</p>
     */
    public static final Property discountType = m.createProperty(NS + "discountType");

    /**
     * <p>The weight of the product when drained of its liquid. For example 225 GRM,
     * Jar of pickles in vinegar.</p>
     */
    public static final Property drainedWeight = m.createProperty(NS + "drainedWeight");

    /**
     * <p>The date by which an invoice should be paid. This data element represents
     * an attribute of a payment slip reference number, AI (8020), and a Global Location
     * Number (GLN) of the invoicing party.</p>
     */
    public static final Property dueDate = m.createProperty(NS + "dueDate");

    /**
     * <p>The time period that the warranty is valid within.</p>
     */
    public static final Property durationOfWarranty = m.createProperty(NS + "durationOfWarranty");

    /**
     * <p>The current tax or duty or fee amount applicable to the product, expressed
     * as a floating-point numeric value that is qualified by the corresponding currency.
     * See also gs1:priceCurrency.</p>
     */
    public static final Property dutyFeeTaxAmount = m.createProperty(NS + "dutyFeeTaxAmount");

    /**
     * <p>A description of tax type for example Taxes sure les supports audio.</p>
     */
    public static final Property dutyFeeTaxDescription = m.createProperty(NS + "dutyFeeTaxDescription");

    /**
     * <p>The current tax or duty rate percentage applicable to the product.</p>
     */
    public static final Property dutyFeeTaxRate = m.createProperty(NS + "dutyFeeTaxRate");

    /**
     * <p>A link to electronic Instruction For Use instructions for Medical Devices.</p>
     */
    public static final Property eifu = m.createProperty(NS + "eifu");

    /**
     * <p>The elevation of a location (WGS 84). Values may be of the form 'NUMBER UNITOFMEASUREMENT'
     * (e.g., '1,000 m', '3,200 ft') while numbers alone SHALL be a value in meters.</p>
     */
    public static final Property elevation = m.createProperty(NS + "elevation");

    /**
     * <p>The quantity including unit of measure for which the offer for good or service
     * is valid. If this is not specified, an eligible quantity of 1 should be assumed.</p>
     */
    public static final Property eligibleQuantity = m.createProperty(NS + "eligibleQuantity");

    /**
     * <p>The maximum quantity including unit of measure for which the offer for good
     * or service is valid.</p>
     */
    public static final Property eligibleQuantityMaximum = m.createProperty(NS + "eligibleQuantityMaximum");

    /**
     * <p>The minimum quantity including unit of measure for which the offer for good
     * or service is valid.</p>
     */
    public static final Property eligibleQuantityMinimum = m.createProperty(NS + "eligibleQuantityMinimum");

    /**
     * <p>A code determining the location where a user can redeem the offer, for example
     * ONLINE_ONLY.</p>
     */
    public static final Property eligibleTradeChannel = m.createProperty(NS + "eligibleTradeChannel");

    /**
     * <p>Creating/sending/receiving of unstructured free text messages or documents
     * using computer network, a mini-computer or an attached modem and regular telephone
     * line or other electronic transmission media.</p>
     */
    public static final Property email = m.createProperty(NS + "email");

    /**
     * <p>Energy from Fat per specified nutrient basis quantity.</p>
     */
    public static final Property energyFromFatPerNutrientBasis = m.createProperty(NS + "energyFromFatPerNutrientBasis");

    /**
     * <p>Energy Per specified nutrient basis quantity.</p>
     */
    public static final Property energyPerNutrientBasis = m.createProperty(NS + "energyPerNutrientBasis");

    /**
     * <p>A link to an EPCIS repository of visibility event data.</p>
     */
    public static final Property epcis = m.createProperty(NS + "epcis");

    /**
     * <p>A link to an electronic patient information leaflet.</p>
     */
    public static final Property epil = m.createProperty(NS + "epil");

    /**
     * <p>A product which can be substituted for the product based on supplier-defined
     * functional equivalence to the product.</p>
     */
    public static final Property equivalentProduct = m.createProperty(NS + "equivalentProduct");

    /**
     * <p>A link to event details. For a page specifically for scheduling a reservation
     * or booking an appointment, see gs1:scheduleTime.</p>
     */
    public static final Property eventsInfo = m.createProperty(NS + "eventsInfo");

    /**
     * <p>Links to a gs1:PriceSpecification that indicates in terms of an amount and
     * specified currency, the exact discount on the sales price associated with
     * a particular gs1:Discount. This property can be used to express '$10 off'.</p>
     */
    public static final Property exactDiscountAmount = m.createProperty(NS + "exactDiscountAmount");

    /**
     * <p>A floating-point value indicating an exact percentage discount on the sales
     * price associated with a particular gs1:Discount. This property can be used
     * to express '15% discount'.</p>
     */
    public static final Property exactDiscountPercentage = m.createProperty(NS + "exactDiscountPercentage");

    /**
     * <p>A text description of any products, brands, or categories that cannot be used
     * with the offer</p>
     */
    public static final Property exclusionDescription = m.createProperty(NS + "exclusionDescription");

    /**
     * <p>The expiration date is the date that determines the limit of consumption or
     * use of a product/coupon. Its meaning is determined based on the trade item
     * context (e.g., for food, the date will indicate the possibility of a direct
     * health risk resulting from use of the product after the date, for pharmaceutical
     * products, it will indicate the possibility of an indirect health risk resulting
     * from the ineffectiveness of the product after the date). It is often referred
     * to as 'use by date' or 'maximum durability date'.</p>
     */
    public static final Property expirationDate = m.createProperty(NS + "expirationDate");

    /**
     * <p>The manufacturer determines the expiration date and time, which is relevant
     * only for short duration and for items that will not be sent on long distances
     * and not outside of the time zone. A typical application of AI (7003) is in
     * hospitals or public pharmacies for special, customised, products which may
     * have a 'life duration' shorter than one single day. The life duration varies
     * according the pharmaceutical substances used in the treatment. The precise
     * expiration date and time is defined at the end of the manufacturing process,
     * and can be barcoded on the product label as an attribute to the item's GTIN.
     * Where there is no business requirement to express the expiration date to the
     * nearest hour (or less), AI (17) Expiration date should be used.</p>
     */
    public static final Property expirationDateTime = m.createProperty(NS + "expirationDateTime");

    /**
     * <p>A link to a set of frequently asked questions.</p>
     */
    public static final Property faqs = m.createProperty(NS + "faqs");

    /**
     * <p>The percentage of fat contained in milk content of the product.</p>
     */
    public static final Property fatInMilkContent = m.createProperty(NS + "fatInMilkContent");

    /**
     * <p>Fat per specified nutrient basis quantity.</p>
     */
    public static final Property fatPerNutrientBasis = m.createProperty(NS + "fatPerNutrientBasis");

    /**
     * <p>The amount of fat contained in the base product expressed in percentage.</p>
     */
    public static final Property fatpercentageInDryMatter = m.createProperty(NS + "fatpercentageInDryMatter");

    /**
     * <p>A fax number used for transmitting and reproducing fixed graphic material
     * over telephone lines or other electronic transmission media.</p>
     */
    public static final Property faxNumber = m.createProperty(NS + "faxNumber");

    /**
     * <p>Fibre per specified nutrient basis quantity.</p>
     */
    public static final Property fibrePerNutrientBasis = m.createProperty(NS + "fibrePerNutrientBasis");

    /**
     * <p>The specified language to which the digital asset is targeted. It is recommended
     * to use the ISO 639-1 language code.</p>
     */
    public static final Property fileLanguageCode = m.createProperty(NS + "fileLanguageCode");

    /**
     * <p>The number of pixels along the vertical axis of the image.</p>
     */
    public static final Property filePixelHeight = m.createProperty(NS + "filePixelHeight");

    /**
     * <p>The number of pixels along the horizontal axis of the image.</p>
     */
    public static final Property filePixelWidth = m.createProperty(NS + "filePixelWidth");

    /**
     * <p>The first freeze date is applicable to products that are frozen directly after
     * slaughtering, harvesting, catching or after initial processing of the product.
     * Examples include fresh meat, meat products or fishery products. The first
     * freeze date is determined by the organisation conducting the freezing.</p>
     */
    public static final Property firstFreezeDate = m.createProperty(NS + "firstFreezeDate");

    /**
     * <p>The type of fish for example Sea bass.</p>
     */
    public static final Property fishType = m.createProperty(NS + "fishType");

    /**
     * <p>Fluoride per specified nutrient basis quantity.</p>
     */
    public static final Property fluoridePerNutrientBasis = m.createProperty(NS + "fluoridePerNutrientBasis");

    /**
     * <p>Folic Acid per specified nutrient basis quantity.</p>
     */
    public static final Property folicAcidPerNutrientBasis = m.createProperty(NS + "folicAcidPerNutrientBasis");

    /**
     * <p>Identifies whether or not the product requires refrigeration.</p>
     */
    public static final Property foodBeverageRefrigerationClaim = m.createProperty(NS + "foodBeverageRefrigerationClaim");

    /**
     * <p>The type of meal the food or beverage product is targeted to for example Breakfast.</p>
     */
    public static final Property foodBeverageTargetUse = m.createProperty(NS + "foodBeverageTargetUse");

    /**
     * <p>Something that mechanically joins or affixes two or more parts together in
     * a footwear product for example a shoe lace.</p>
     */
    public static final Property footwearFasteningType = m.createProperty(NS + "footwearFasteningType");

    /**
     * <p>The descriptive term that is used by the product manufacturer to identify
     * whether the footwear upper is open or closed. Otherwise known as Open or Closed
     * Upper.</p>
     */
    public static final Property footwearUpperType = m.createProperty(NS + "footwearUpperType");

    /**
     * <p>A code determining whether the fish originated from the sea or was farmed.</p>
     */
    public static final Property freshOrSeawaterFarmed = m.createProperty(NS + "freshOrSeawaterFarmed");

    /**
     * <p>Describes use of the product or service by the consumer. Should help clarify
     * the product classification associated with the GTIN.</p>
     */
    public static final Property functionalName = m.createProperty(NS + "functionalName");

    /**
     * <p>A statement of the presence or absence of genetically modified protein or
     * DNA.</p>
     */
    public static final Property geneticallyModifiedDeclaration = m.createProperty(NS + "geneticallyModifiedDeclaration");

    /**
     * <p>Links to information about geocoordinates or geoshapes for a place.</p>
     */
    public static final Property geo = m.createProperty(NS + "geo");

    /**
     * <p>Indicates what type of thing is being identified by a GLN.</p>
     */
    public static final Property glnType = m.createProperty(NS + "glnType");

    /**
     * <p>A Global Location Number (GLN) is the GS1 Identification Key used to identify
     * physical locations or parties. The key comprises a GS1 Company Prefix, Location
     * Reference and Check Digit. For more information see https://www.gs1.org/gln.</p>
     */
    public static final Property globalLocationNumber = m.createProperty(NS + "globalLocationNumber");

    /**
     * <p>8-digit code (GPC Brick Value) specifying a product category according to
     * the GS1 Global Product Classification (GPC) standard. For more information
     * see https://www.gs1.org/gpc</p>
     */
    public static final Property gpcCategoryCode = m.createProperty(NS + "gpcCategoryCode");

    /**
     * <p>A description of the code specifying a product category according to the GS1
     * Global Product Classification (GPC) standard.</p>
     */
    public static final Property gpcCategoryDescription = m.createProperty(NS + "gpcCategoryDescription");

    /**
     * <p>The overall area of the item including packaging. This can be given using
     * a number of different AI ranges that depend on the units in which the area
     * is measured.</p>
     */
    public static final Property grossArea = m.createProperty(NS + "grossArea");

    /**
     * <p>The overall volume of the item including packaging. This can be given using
     * a number of different AI ranges that depend on the units in which the volume
     * is measured.</p>
     */
    public static final Property grossVolume = m.createProperty(NS + "grossVolume");

    /**
     * <p>Used to identify the gross weight of the product. The gross weight includes
     * all packaging materials of the product. At pallet level the productGrossWeight
     * includes the weight of the pallet itself. For example, 200 GRM, value - total
     * pounds, total grams, etc.</p>
     */
    public static final Property grossWeight = m.createProperty(NS + "grossWeight");

    /**
     * <p>The process through which fresh produce is grown and cultivated.</p>
     */
    public static final Property growingMethod = m.createProperty(NS + "growingMethod");

    /**
     * <p>A Global Trade Item Number (GTIN) is the 14 digit GS1 Identification Key used
     * to identify products. The key comprises a GS1 Company Prefix followed by an
     * Item Reference Number and a Check Digit. See https://www.gs1.org/gtin for
     * more details.</p>
     */
    public static final Property gtin = m.createProperty(NS + "gtin");

    /**
     * <p>Used when one resolver redirects all request URIs that match a given pattern
     * without further processing, such as from GS1 to a brand-operated service.
     * See section 7.7.1 of the Digital Link standard, version 1.1.</p>
     */
    public static final Property handledBy = m.createProperty(NS + "handledBy");

    /**
     * <p>The harvest date. For example, the harvest date can be the date when an animal
     * was slaughtered or killed, a fish has been harvested, or a crop was harvested.
     * This date is determined by the organisation conducting the harvesting. Different
     * organisations may use more specific terminology when referring to their specific
     * needs and use terms such as: Date of catch or slaughter date.</p>
     */
    public static final Property harvestDate = m.createProperty(NS + "harvestDate");

    /**
     * <p>The harvest end date. For example, the harvest end date can be the date when
     * an animal was slaughtered or killed, a fish has been harvested, or a crop
     * was harvested. This end date is determined by the organisation conducting
     * the harvesting. Different organisations may use more specific terminology
     * when referring to their specific needs and use terms such as: Date of catch
     * or slaughter date. When referring to animals the date range refers to the
     * whole animal and all meat or fish cuts derived from this animal.</p>
     */
    public static final Property harvestDateEnd = m.createProperty(NS + "harvestDateEnd");

    /**
     * <p>The harvest start date. For example, the harvest start date can be the date
     * when an animal was slaughtered or killed, a fish has been harvested, or a
     * crop was harvested. This start date is determined by the organisation conducting
     * the harvesting. Different organisations may use more specific terminology
     * when referring to their specific needs and use terms such as: Date of catch
     * or slaughter date. When referring to animals the date range refers to the
     * whole animal and all meat or fish cuts derived from this animal.</p>
     */
    public static final Property harvestDateStart = m.createProperty(NS + "harvestDateStart");

    /**
     * <p>Relates to details about allergens</p>
     */
    public static final Property hasAllergen = m.createProperty(NS + "hasAllergen");

    /**
     * <p>The batch or lot number associates an item with information the manufacturer
     * considers relevant for traceability of the trade item to which the element
     * string is applied. The data may refer to the trade item itself or to items
     * contained. The number may be, for example, a production lot number, a shift
     * number, a machine number, a time, or an internal production code. In cases
     * where the same product is manufactured in different locations the brand owner
     * and the manufacturer are responsible for ensuring the non-duplication of batch/lot
     * numbers for a GTIN. For the re-use of batch/lot numbers with a GTIN, sector-specific
     * constraints need to be considered.</p>
     */
    public static final Property hasBatchLotNumber = m.createProperty(NS + "hasBatchLotNumber");

    /**
     * <p>Links to the place(s) that this organisation designates as their primary location(s).</p>
     */
    public static final Property hasPrimaryLocation = m.createProperty(NS + "hasPrimaryLocation");

    /**
     * <p>A link to a list of retailers.</p>
     */
    public static final Property hasRetailers = m.createProperty(NS + "hasRetailers");

    /**
     * <p>links to details of amounts refunded for returnable package in a specified
     * region.</p>
     */
    public static final Property hasReturnablePackageDeposit = m.createProperty(NS + "hasReturnablePackageDeposit");

    /**
     * <p>A serial number is assigned to an entity for its lifetime. When combined with
     * a GTIN, a serial number uniquely identifies an individual item. The serial
     * number field is alphanumeric and may include all characters contained in figure
     * 7.11-1. The brand owner and the manufacturer are responsible for ensuring
     * the non-duplication of serial numbers for a GTIN. For the re-use of serial
     * numbers with a GTIN, sector-specific constraints need to be considered.</p>
     */
    public static final Property hasSerialNumber = m.createProperty(NS + "hasSerialNumber");

    /**
     * <p>This identifier is assigned to an entity for its lifetime. When combined with
     * a GTIN, a TPX uniquely identifies an individual item and forms a unit pack
     * Unique Identifier (upUI) for tobacco traceability per EU 2018/574. The serial
     * number field is alphanumeric and may include all characters contained in figure
     * 7.11-1. The Third Party determines the TPX, but the TPX shall begin with the
     * ID Issuer Unique Identification Code (UIC), followed by GS1 UIC Extension
     * 1, and GS1 UIC Extension 2.</p>
     */
    public static final Property hasThirdPartyControlledSerialNumber = m.createProperty(NS + "hasThirdPartyControlledSerialNumber");

    /**
     * <p>A description of health claims according to regulations of the target market.</p>
     */
    public static final Property healthClaimDescription = m.createProperty(NS + "healthClaimDescription");

    /**
     * <p>A link to general information about an organisation or brand. Typically the
     * homepage of an organisation's website. It may include links to further information
     * such as certifications, careers, payments, reservations, etc.</p>
     */
    public static final Property homepage = m.createProperty(NS + "homepage");

    /**
     * <p>Link to a file containing a visual representation of the product.</p>
     */
    public static final Property image = m.createProperty(NS + "image");

    /**
     * <p>The depth of the product in its packaging, as measured according to the GS1
     * Package Measurement Rules. See https://www.gs1.org/package-measurement-rules-implementation-guide
     * for more details.</p>
     */
    public static final Property inPackageDepth = m.createProperty(NS + "inPackageDepth");

    /**
     * <p>The measurement of the diameter of the product in its package at its largest
     * point. For example, 165 MMT.</p>
     */
    public static final Property inPackageDiameter = m.createProperty(NS + "inPackageDiameter");

    /**
     * <p>The height of the product in the package, as measured according to the GS1
     * Package Measurement Rules. See https://www.gs1.org/package-measurement-rules-implementation-guide
     * for more details.</p>
     */
    public static final Property inPackageHeight = m.createProperty(NS + "inPackageHeight");

    /**
     * <p>The width of the product in the package, as measured according to the GS1
     * Package Measurement Rules. See https://www.gs1.org/package-measurement-rules-implementation-guide
     * for more details.</p>
     */
    public static final Property inPackageWidth = m.createProperty(NS + "inPackageWidth");

    /**
     * <p>Any included object or device not part of the core product itself but which
     * adds to its functionality or use.</p>
     */
    public static final Property includedAccessories = m.createProperty(NS + "includedAccessories");

    /**
     * <p>Links to information about ingredients of a specific Food/Beverage/Tobacco
     * product.</p>
     */
    public static final Property ingredient = m.createProperty(NS + "ingredient");

    /**
     * <p>Quantity of the ingredient contained in the product as a percentage of the
     * total product ingredients. This is used in conjunction with ingredientName.</p>
     */
    public static final Property ingredientContentPercentage = m.createProperty(NS + "ingredientContentPercentage");

    /**
     * <p>Free text field describing an ingredient or ingredient group. Ingredients
     * include any additives (colourings, preservatives, e-numbers, etc.) that are
     * encompassed.</p>
     */
    public static final Property ingredientName = m.createProperty(NS + "ingredientName");

    /**
     * <p>Indicates a claim to an ingredient, considered to be a concern for regulatory
     * or other reasons, and which is 'contained' within the product but may not
     * need to specify the amount whether approximate, or an accurate measurement
     * be given.</p>
     */
    public static final Property ingredientOfConcern = m.createProperty(NS + "ingredientOfConcern");

    /**
     * <p>Integer (1, 2, 3...) indicating the ingredient order by content percentage
     * of the product. (major ingredient = 1, second ingredient = 2) etc.</p>
     */
    public static final Property ingredientSequence = m.createProperty(NS + "ingredientSequence");

    /**
     * <p>Information on the constituent ingredient make up of the product specified
     * as one string.</p>
     */
    public static final Property ingredientStatement = m.createProperty(NS + "ingredientStatement");

    /**
     * <p>A link to facts about ingredients.</p>
     */
    public static final Property ingredientsInfo = m.createProperty(NS + "ingredientsInfo");

    /**
     * <p>The date when the certification was originally issued. May differ from the
     * certificationStartDate of the current recertification cycle.</p>
     */
    public static final Property initialCertificationDate = m.createProperty(NS + "initialCertificationDate");

    /**
     * <p>A link to instructions, such as assembly instructions, usage tips etc. It
     * is not appropriate to use this link type for healthcare regulated content
     * applications for which specific link types are available.</p>
     */
    public static final Property instructions = m.createProperty(NS + "instructions");

    /**
     * <p>Link to a file containing the Instructions For Use.</p>
     */
    public static final Property instructionsForUse = m.createProperty(NS + "instructionsForUse");

    /**
     * <p>Iodine per specified nutrient basis quantity.</p>
     */
    public static final Property iodinePerNutrientBasis = m.createProperty(NS + "iodinePerNutrientBasis");

    /**
     * <p>Iron per specified nutrient basis quantity.</p>
     */
    public static final Property ironPerNutrientBasis = m.createProperty(NS + "ironPerNutrientBasis");

    /**
     * <p>Indicates if radiation has been applied to the product.</p>
     */
    public static final Property irradiatedCode = m.createProperty(NS + "irradiatedCode");

    /**
     * <p>Used to identify whether or not a beverage product is naturally effervescent
     * or has been made effervescent by the addition of carbon dioxide gas.</p>
     */
    public static final Property isCarbonated = m.createProperty(NS + "isCarbonated");

    /**
     * <p>The descriptive term that is used by the product manufacturer to identify
     * whether or not the product contains caffeine.</p>
     */
    public static final Property isDecaffeinated = m.createProperty(NS + "isDecaffeinated");

    /**
     * <p>Used to identify whether or not the product claims to be made from a concentrated
     * formulation.</p>
     */
    public static final Property isFromConcentrate = m.createProperty(NS + "isFromConcentrate");

    /**
     * <p>A The indication whether or not the milk used was actively homogenised. The
     * homogenisation of milk is a technical process in the dairy. The milk fat is
     * milled to such an extent that further creaming is prevented.</p>
     */
    public static final Property isHomogenised = m.createProperty(NS + "isHomogenised");

    /**
     * <p>Determines whether the product is instant.</p>
     */
    public static final Property isInstant = m.createProperty(NS + "isInstant");

    /**
     * <p>Indicates, with reference to the product branding, labelling or packaging,
     * the descriptive term that is used by the product manufacturer to identify
     * if the product is intended as maternity wear.</p>
     */
    public static final Property isMaternity = m.createProperty(NS + "isMaternity");

    /**
     * <p>If specified and set to true, the discount is only available through the retailer
     * making the offer.</p>
     */
    public static final Property isOnlyAvailableThroughRetailer = m.createProperty(NS + "isOnlyAvailableThroughRetailer");

    /**
     * <p>If specified and set to true, the discount is only available for customers
     * who have signed up to the retailer's mailing list.</p>
     */
    public static final Property isOnlyWithMailingListSignup = m.createProperty(NS + "isOnlyWithMailingListSignup");

    /**
     * <p>If specified, the discount is only available when purchasing using one of
     * the specified payment card types.</p>
     */
    public static final Property isOnlyWithPaymentCard = m.createProperty(NS + "isOnlyWithPaymentCard");

    /**
     * <p>If specified and set to true, the discount is only available for holders of
     * the retailer's own loyalty card.</p>
     */
    public static final Property isOnlyWithRetailerLoyaltyCard = m.createProperty(NS + "isOnlyWithRetailerLoyaltyCard");

    /**
     * <p>If specified and set to true, the discount is only available for holders of
     * the retailer's own store payment card.</p>
     */
    public static final Property isOnlyWithRetailerPaymentCard = m.createProperty(NS + "isOnlyWithRetailerPaymentCard");

    /**
     * <p>The descriptive term that is used by the product manufacturer to identify
     * whether or not the product has a patterned design.</p>
     */
    public static final Property isPatterned = m.createProperty(NS + "isPatterned");

    /**
     * <p>The descriptive term that is used by the product manufacturer to identify
     * whether or not a fruit or vegetable product has been de-stoned or pitted prior
     * to being offered for sale.</p>
     */
    public static final Property isPittedStoned = m.createProperty(NS + "isPittedStoned");

    /**
     * <p>An indicator for the product to determine if the Manufacturer or Supplier
     * has recalled the product.</p>
     */
    public static final Property isProductRecalled = m.createProperty(NS + "isProductRecalled");

    /**
     * <p>Determines whether the offer is only provided by the promoter</p>
     */
    public static final Property isPromoterExclusiveOffer = m.createProperty(NS + "isPromoterExclusiveOffer");

    /**
     * <p>An indicator whether or not the cheese rind is edible. Some cheeses are coated
     * in plastic or their surface is treated with other traditional substances to
     * increase their shelf life. This can result in the rind no longer being edible.</p>
     */
    public static final Property isRindEdible = m.createProperty(NS + "isRindEdible");

    /**
     * <p>Determines whether the product is seedless as grown.</p>
     */
    public static final Property isSeedless = m.createProperty(NS + "isSeedless");

    /**
     * <p>The descriptive term that is used by the product manufacturer to identify
     * whether or not the product or its contents have been shelled/peeled prior
     * to being offered for sale.</p>
     */
    public static final Property isShelledPeeled = m.createProperty(NS + "isShelledPeeled");

    /**
     * <p>Determines whether the product comes pre-sliced.</p>
     */
    public static final Property isSliced = m.createProperty(NS + "isSliced");

    /**
     * <p>The descriptive term that is used to identify whether the product is thermal.</p>
     */
    public static final Property isThermal = m.createProperty(NS + "isThermal");

    /**
     * <p>Identifies whether the product makes claim to being vintage.</p>
     */
    public static final Property isVintage = m.createProperty(NS + "isVintage");

    /**
     * <p>Determines whether product has been prewashed and is ready to eat.</p>
     */
    public static final Property isWashedReadyToEat = m.createProperty(NS + "isWashedReadyToEat");

    /**
     * <p>The descriptive term that is used to identify whether or not the product claims
     * to provide waterproofing to the applied surface.</p>
     */
    public static final Property isWaterproof = m.createProperty(NS + "isWaterproof");

    /**
     * <p>Identifies whether or not the product is intended to be disposed of after
     * single use or a limited period of use.</p>
     */
    public static final Property isWearableItemDisposable = m.createProperty(NS + "isWearableItemDisposable");

    /**
     * <p>The product included in the offer.</p>
     */
    public static final Property itemOffered = m.createProperty(NS + "itemOffered");

    /**
     * <p>The fruit juice content of the product expressed as a percentage.</p>
     */
    public static final Property juiceContentPercent = m.createProperty(NS + "juiceContentPercent");

    /**
     * <p>A link to a JSON Web Signature</p>
     */
    public static final Property jws = m.createProperty(NS + "jws");

    /**
     * <p>Angular distance North or South from the earth's equator measured through
     * 90 degrees.</p>
     */
    public static final Property latitude = m.createProperty(NS + "latitude");

    /**
     * <p>Links to the organisation (lessor) from which this place is leased.</p>
     */
    public static final Property leasedFrom = m.createProperty(NS + "leasedFrom");

    /**
     * <p>Links to the organisation(s) (lessee(s)) to which this place is leased. Property
     * SHOULD be applied to a specific sub-location, rather than a main location,
     * wherever possible.</p>
     */
    public static final Property leasedTo = m.createProperty(NS + "leasedTo");

    /**
     * <p>A link through which a review can be added.</p>
     */
    public static final Property leaveReview = m.createProperty(NS + "leaveReview");

    /**
     * <p>Links to the place(s) for which this organisation is the lessee (i.e., this
     * organisation leases those places from another organisation, the lessor).</p>
     */
    public static final Property lesseeOf = m.createProperty(NS + "lesseeOf");

    /**
     * <p>Links to the place(s) for which this organisation is the lessor (i.e., this
     * organisation leases those places to others).</p>
     */
    public static final Property lessorFor = m.createProperty(NS + "lessorFor");

    /**
     * <p>A line is a point-to-point path consisting of two or more point objects separated
     * by a space. A single line segment (i.e., straight line) is expressed as two
     * points. A multi-line path (i.e., open polygon) is expressed as a series of
     * three or more points. For a closed shape, gs1:polygon SHALL be used.</p>
     */
    public static final Property line = m.createProperty(NS + "line");

    /**
     * <p>Provides a URL for related information or services. This is not expected to
     * be used directly but provides a super property for all other link types in
     * the GS1 ecosystem.</p>
     */
    public static final Property linkType = m.createProperty(NS + "linkType");

    /**
     * <p>The place(s) associated with an organization.</p>
     */
    public static final Property location = m.createProperty(NS + "location");

    /**
     * <p>13-digit GLN that is being used to identify a physical or digital location.
     * If gs1:glnType is present, gs1:locationGLN SHALL only be used when gs1:GLN_TypeCode
     * includes FIXED_PHYSICAL_LOCATION, MOBILE_PHYSICAL_LOCATION, or DIGITAL_LOCATION</p>
     */
    public static final Property locationGLN = m.createProperty(NS + "locationGLN");

    /**
     * <p>Provides details on if and when a location is active or inactive.</p>
     */
    public static final Property locationHistory = m.createProperty(NS + "locationHistory");

    /**
     * <p>Identifier value associated to a location. This value SHALL follow rules set
     * forth by the administrating organisation designated in gs1:LocationID_Type.</p>
     */
    public static final Property locationID = m.createProperty(NS + "locationID");

    /**
     * <p>Secondary qualifier to supplement gs1:LocationID_Type meaning. May be used
     * with proprietary ID code values to define identifier administrator.</p>
     */
    public static final Property locationID_Qualifier = m.createProperty(NS + "locationID_Qualifier");

    /**
     * <p>Organisation that administers the gs1:locationID or the name of the ID itself.
     * Value from gs1:LocationID_Type code list.</p>
     */
    public static final Property locationID_Type = m.createProperty(NS + "locationID_Type");

    /**
     * <p>A URI that links to information about the gs1:locationID.</p>
     */
    public static final Property locationID_URI = m.createProperty(NS + "locationID_URI");

    /**
     * <p>A link to a map, directions, or other location-related information. For B2B
     * location information, see gs1:logisticsInfo. For details specific to hours
     * of operation, see gs1:openingHoursInfo</p>
     */
    public static final Property locationInfo = m.createProperty(NS + "locationInfo");

    /**
     * <p>A location classification based on the purpose, type of site and/or what occurs
     * there. Repeatable value from gs1:LocationRoleType code list.</p>
     */
    public static final Property locationRole = m.createProperty(NS + "locationRole");

    /**
     * <p>Designation of active/inactive status of a location.</p>
     */
    public static final Property locationStatus = m.createProperty(NS + "locationStatus");

    /**
     * <p>A link to B2B logistics information related to a physical location.</p>
     */
    public static final Property logisticsInfo = m.createProperty(NS + "logisticsInfo");

    /**
     * <p>The arc or portion of the earth's equator intersected between the meridian
     * of a given place and the prime meridian and expressed in degrees</p>
     */
    public static final Property longitude = m.createProperty(NS + "longitude");

    /**
     * <p>A link to information about a loyalty program, including a member's current
     * status and/or a registration option for new members</p>
     */
    public static final Property loyaltyProgram = m.createProperty(NS + "loyaltyProgram");

    /**
     * <p>Magnesium per specified nutrient basis quantity.</p>
     */
    public static final Property magnesiumPerNutrientBasis = m.createProperty(NS + "magnesiumPerNutrientBasis");

    /**
     * <p>An offer made by an organization.</p>
     */
    public static final Property makesOffer = m.createProperty(NS + "makesOffer");

    /**
     * <p>Links to the organisation that manages this place or organisation, as designated
     * by the owner or another organisation.</p>
     */
    public static final Property managedBy = m.createProperty(NS + "managedBy");

    /**
     * <p>Links to the organisation(s) for whom this place is managed. Property SHOULD
     * be applied to a specific sub-location, rather than a main location, wherever
     * possible.</p>
     */
    public static final Property managedFor = m.createProperty(NS + "managedFor");

    /**
     * <p>Links to the place(s) or organisation(s) that this organisation manages, on
     * behalf of the owner or another organisation.</p>
     */
    public static final Property manages = m.createProperty(NS + "manages");

    /**
     * <p>Manganese per specified nutrient basis quantity.</p>
     */
    public static final Property manganesePerNutrientBasis = m.createProperty(NS + "manganesePerNutrientBasis");

    /**
     * <p>The organization that produces the item.</p>
     */
    public static final Property manufacturer = m.createProperty(NS + "manufacturer");

    /**
     * <p>Code indicating the preparation methods that a manufacturer has used in the
     * manufacturing of a product for example DEEP_FRY.</p>
     */
    public static final Property manufacturerPreparationCode = m.createProperty(NS + "manufacturerPreparationCode");

    /**
     * <p>The warranty associated with the product.</p>
     */
    public static final Property manufacturersWarranty = m.createProperty(NS + "manufacturersWarranty");

    /**
     * <p>A physical location consisting of one or more buildings with facilities for
     * manufacturing.</p>
     */
    public static final Property manufacturingPlant = m.createProperty(NS + "manufacturingPlant");

    /**
     * <p>The mass per unit area of the item. This can be given using a number of different
     * AI ranges that depend on the units in which the mass and area are measured.</p>
     */
    public static final Property massPerUnitArea = m.createProperty(NS + "massPerUnitArea");

    /**
     * <p>A link to a source of structured master data for the entity. This is typically
     * for B2B applications.</p>
     */
    public static final Property masterData = m.createProperty(NS + "masterData");

    /**
     * <p>The method of maturity for the item for example tree ripened or jet fresh.</p>
     */
    public static final Property maturationMethod = m.createProperty(NS + "maturationMethod");

    /**
     * <p>Provides a maximum price value as a floating-point numeric value that is qualified
     * by the corresponding currency. See also gs1:priceCurrency</p>
     */
    public static final Property maxPrice = m.createProperty(NS + "maxPrice");

    /**
     * <p>Links to a gs1:PriceSpecification that indicates in terms of an amount and
     * specified currency, the maximum discount on the sales price associated with
     * a particular gs1:Discount. This property can be used to express 'up to $10
     * off'.</p>
     */
    public static final Property maximumDiscountAmount = m.createProperty(NS + "maximumDiscountAmount");

    /**
     * <p>A floating-point value indicating a maximum percentage discount on the sales
     * price associated with a particular gs1:Discount. This property can be used
     * to express 'up to 15% discount'.</p>
     */
    public static final Property maximumDiscountPercentage = m.createProperty(NS + "maximumDiscountPercentage");

    /**
     * <p>The upper limit drinking temperature of the optimum range of the drinking
     * temperature. The optimum range of the drinking temperature is a recommendation
     * and is based on the experience of the individual producer. Allows for the
     * representation of the same value in different units of measure but not multiple
     * values.</p>
     */
    public static final Property maximumOptimumConsumptionTemperature = m.createProperty(NS + "maximumOptimumConsumptionTemperature");

    /**
     * <p>Specifies the maximum number of items that qualify for a particular gs1:Discount.
     * This property can be used to express 'maximum N items per customer'.</p>
     */
    public static final Property maximumQualifyingItems = m.createProperty(NS + "maximumQualifyingItems");

    /**
     * <p>Links to a gs1:PriceSpecification that indicates in terms of an amount and
     * specified currency, the maximum spend that qualifies for a particular gs1:Discount.
     * This property can be used to express 'for purchases of up to $100'.</p>
     */
    public static final Property maximumQualifyingSpend = m.createProperty(NS + "maximumQualifyingSpend");

    /**
     * <p>The fish, meat, or poultry type for this food and beverage item.</p>
     */
    public static final Property meatPoultryType = m.createProperty(NS + "meatPoultryType");

    /**
     * <p>A link to menu details. This may include food menus, services, or other offerings
     * provided by an organisation or at a location. For details specific to allergens
     * only, see gs1:allergenInfo . For details specific to nutrition information
     * only, see gs1:nutritionalInfo . For details specific to ingredients only,
     * see gs1:ingredientsInfo .</p>
     */
    public static final Property menuInfo = m.createProperty(NS + "menuInfo");

    /**
     * <p>Provides a minimum price value as a floating-point numeric value that is qualified
     * by the corresponding currency. See also gs1:priceCurrency</p>
     */
    public static final Property minPrice = m.createProperty(NS + "minPrice");

    /**
     * <p>Links to a gs1:PriceSpecification that indicates in terms of an amount and
     * specified currency, the minimum discount on the sales price associated with
     * a particular gs1:Discount. This property can be used to express 'at least
     * $10 off'.</p>
     */
    public static final Property minimumDiscountAmount = m.createProperty(NS + "minimumDiscountAmount");

    /**
     * <p>A floating-point value indicating a minimum percentage discount on the sales
     * price associated with a particular gs1:Discount. This property can be used
     * to express 'at least 15% discount'.</p>
     */
    public static final Property minimumDiscountPercentage = m.createProperty(NS + "minimumDiscountPercentage");

    /**
     * <p>The minimum amount of fish contained in a food and beverage product expressed
     * as a measurement.</p>
     */
    public static final Property minimumFishContent = m.createProperty(NS + "minimumFishContent");

    /**
     * <p>The minimum amount of fish, meat or poultry contained in a food and beverage
     * product expressed as a measurement.</p>
     */
    public static final Property minimumMeatPoultryContent = m.createProperty(NS + "minimumMeatPoultryContent");

    /**
     * <p>The lower limit drinking temperature of the optimum range of the drinking
     * temperature. The optimum range of the drinking temperature is a recommendation
     * and is based on the experience of the individual producer. Allows for the
     * representation of the same value in different units of measure but not multiple
     * values.</p>
     */
    public static final Property minimumOptimumConsumptionTemperature = m.createProperty(NS + "minimumOptimumConsumptionTemperature");

    /**
     * <p>Specifies the minimum number of items that must be purchased to qualify for
     * a particular gs1:Discount. This property can be used to express 'if you buy
     * at least N items'.</p>
     */
    public static final Property minimumQualifyingItems = m.createProperty(NS + "minimumQualifyingItems");

    /**
     * <p>Links to a gs1:PriceSpecification that indicates in terms of an amount and
     * specified currency, the minimum spend required to qualify for a particular
     * gs1:Discount. This property can be used to express 'if you spend at least
     * $100'.</p>
     */
    public static final Property minimumQualifyingSpend = m.createProperty(NS + "minimumQualifyingSpend");

    /**
     * <p>Molybdenum per specified nutrient basis quantity.</p>
     */
    public static final Property molybdenumPerNutrientBasis = m.createProperty(NS + "molybdenumPerNutrientBasis");

    /**
     * <p>Monounsaturated fat per specified nutrient basis quantity.</p>
     */
    public static final Property monounsaturatedFatPerNutrientBasis = m.createProperty(NS + "monounsaturatedFatPerNutrientBasis");

    /**
     * <p>The net area of the item. This can be given using a number of different AI
     * ranges that depend on the units in which the area is measured.</p>
     */
    public static final Property netArea = m.createProperty(NS + "netArea");

    /**
     * <p>The quantity of the product contained by a package, usually as claimed on
     * the label. Indicates the net content of the total product. For fixed value
     * products use the value claimed on the package, to avoid variable fill rate
     * issue that arises with some product which are sold by volume or weight, and
     * whose actual content may vary slightly from batch to batch.</p>
     */
    public static final Property netContent = m.createProperty(NS + "netContent");

    /**
     * <p>Used to identify the net weight of the product. Net Weight excludes all packaging
     * material, including the packaging material of all lower-level GTINs. Example:11.5
     * kgm.</p>
     */
    public static final Property netWeight = m.createProperty(NS + "netWeight");

    /**
     * <p>Niacin per specified nutrient basis quantity.</p>
     */
    public static final Property niacinPerNutrientBasis = m.createProperty(NS + "niacinPerNutrientBasis");

    /**
     * <p>The total number of servings contained in the package.</p>
     */
    public static final Property numberOfServingsPerPackage = m.createProperty(NS + "numberOfServingsPerPackage");

    /**
     * <p>Code indicating whether the number of servings per package is exact or approximate.</p>
     */
    public static final Property numberOfServingsPerPackageMeasurementPrecision = m.createProperty(NS + "numberOfServingsPerPackageMeasurementPrecision");

    /**
     * <p>A free text field specifying a range for the number of servings contained
     * in the package.</p>
     */
    public static final Property numberOfServingsRangeDescription = m.createProperty(NS + "numberOfServingsRangeDescription");

    /**
     * <p>Quantity on which the nutrient information has been based; for example, per
     * 100 grams. When specified, nutrientBasisQuantity establishes the basis for
     * all contained nutrient records.</p>
     */
    public static final Property nutrientBasisQuantity = m.createProperty(NS + "nutrientBasisQuantity");

    /**
     * <p>The type of quantity specified in the nutrientBasisQuantity for example measurement,
     * serving size, or container. This is used in conjunction with the nutrientBasisQuantity.</p>
     */
    public static final Property nutrientBasisQuantityType = m.createProperty(NS + "nutrientBasisQuantityType");

    /**
     * <p>The Code indicating whether the specified nutrient content is exact or approximate.</p>
     */
    public static final Property nutrientMeasurementPrecision = m.createProperty(NS + "nutrientMeasurementPrecision");

    /**
     * <p>Code indicating a nutritional claim applicable to the product, for example
     * FAT_FREE.</p>
     */
    public static final Property nutritionalClaim = m.createProperty(NS + "nutritionalClaim");

    /**
     * <p>Free text field for any additional nutritional claims.</p>
     */
    public static final Property nutritionalClaimStatement = m.createProperty(NS + "nutritionalClaimStatement");

    /**
     * <p>A link to nutritional facts.</p>
     */
    public static final Property nutritionalInfo = m.createProperty(NS + "nutritionalInfo");

    /**
     * <p>Links to the organisation(s) that occupy this place. Property SHOULD be applied
     * to a specific sub-location, rather than a main location, wherever possible.</p>
     */
    public static final Property occupiedBy = m.createProperty(NS + "occupiedBy");

    /**
     * <p>Links to the place(s) that this organisation occupies.</p>
     */
    public static final Property occupies = m.createProperty(NS + "occupies");

    /**
     * <p>A description of the offer including goods or services offered for sale or
     * use.</p>
     */
    public static final Property offerDescription = m.createProperty(NS + "offerDescription");

    /**
     * <p>A discount associated with an offer.</p>
     */
    public static final Property offerDiscount = m.createProperty(NS + "offerDiscount");

    /**
     * <p>A code indicating the type of redemptions that apply to the offer, for example
     * single use.</p>
     */
    public static final Property offerRedemptionType = m.createProperty(NS + "offerRedemptionType");

    /**
     * <p>The URL where the offer seeker will need to go in order to redeem the offer
     * for an online redemption.</p>
     */
    public static final Property offerRedemptionURL = m.createProperty(NS + "offerRedemptionURL");

    /**
     * <p>A description of what the offer is restricted to, relative to all other offerings
     * by the issuer, for example payment restrictions, subscription required, new
     * customers only.</p>
     */
    public static final Property offerRestrictionDescription = m.createProperty(NS + "offerRestrictionDescription");

    /**
     * <p>A link to details on hours of operation.</p>
     */
    public static final Property openingHoursInfo = m.createProperty(NS + "openingHoursInfo");

    /**
     * <p>Relates to an organic claim about the product</p>
     */
    public static final Property organicClaim = m.createProperty(NS + "organicClaim");

    /**
     * <p>A governing body that creates and maintains standards related to organic products.</p>
     */
    public static final Property organicClaimAgency = m.createProperty(NS + "organicClaimAgency");

    /**
     * <p>The percent of actual organic materials per weight of the product. This is
     * usually claimed on the product.</p>
     */
    public static final Property organicPercentClaim = m.createProperty(NS + "organicPercentClaim");

    /**
     * <p>Provides details on if and when an organisation/party is active or inactive.</p>
     */
    public static final Property organizationHistory = m.createProperty(NS + "organizationHistory");

    /**
     * <p>Identifier value associated to an organisation/party. This value SHALL follow
     * rules set forth by the administrating organisation designated in gs1:OrganizationID_Type.</p>
     */
    public static final Property organizationID = m.createProperty(NS + "organizationID");

    /**
     * <p>Secondary qualifier to supplement gs1:organizationID_Type meaning. May be
     * used with proprietary ID code values to define identifier administrator.</p>
     */
    public static final Property organizationID_Qualifier = m.createProperty(NS + "organizationID_Qualifier");

    /**
     * <p>Organisation that administers the gs1:organizationID or the name of the ID
     * itself. Value from gs1:OrganizationID_Type code list.</p>
     */
    public static final Property organizationID_Type = m.createProperty(NS + "organizationID_Type");

    /**
     * <p>A URI that links to information about the gs1:organizationID.</p>
     */
    public static final Property organizationID_URI = m.createProperty(NS + "organizationID_URI");

    /**
     * <p>The name of the organization expressed in text.</p>
     */
    public static final Property organizationName = m.createProperty(NS + "organizationName");

    /**
     * <p>The role and/or purpose of a party (i.e. legal entity or function). Multiple
     * values from gs1:OrganizationRoleType code list may be associated to a single
     * organisation/party.</p>
     */
    public static final Property organizationRole = m.createProperty(NS + "organizationRole");

    /**
     * <p>Designation of active/inactive status of an organisation/party.</p>
     */
    public static final Property organizationStatus = m.createProperty(NS + "organizationStatus");

    /**
     * <p>Links to the alphanumeric code value defined elsewhere in GS1 or the GS1 Global
     * Data Dictionary</p>
     */
    public static final Property originalCodeValue = m.createProperty(NS + "originalCodeValue");

    /**
     * <p>The depth of the product out of its packaging, as measured according to the
     * GS1 Package Measurement Rules. See https://www.gs1.org/package-measurement-rules-implementation-guide
     * for more details.</p>
     */
    public static final Property outOfPackageDepth = m.createProperty(NS + "outOfPackageDepth");

    /**
     * <p>The measurement of the diameter of the product out of its package at its largest
     * point. For example, 165 MMT.</p>
     */
    public static final Property outOfPackageDiameter = m.createProperty(NS + "outOfPackageDiameter");

    /**
     * <p>The height of the product out of the package, as measured according to the
     * GS1 Package Measurement Rules. See https://www.gs1.org/package-measurement-rules-implementation-guide
     * for more details.</p>
     */
    public static final Property outOfPackageHeight = m.createProperty(NS + "outOfPackageHeight");

    /**
     * <p>The width of the product out of the package, as measured according to the
     * GS1 Package Measurement Rules. See https://www.gs1.org/package-measurement-rules-implementation-guide
     * for more details.</p>
     */
    public static final Property outOfPackageWidth = m.createProperty(NS + "outOfPackageWidth");

    /**
     * <p>Links to the organisation(s) that own this place, in full or in part. This
     * includes joint ventures. For leased locations, see gs1:lessorFor and gs1:isLeasedFrom.</p>
     */
    public static final Property ownedBy = m.createProperty(NS + "ownedBy");

    /**
     * <p>Links to the place(s) or organisation(s) that this organisation owns.</p>
     */
    public static final Property owns = m.createProperty(NS + "owns");

    /**
     * <p>Details on the packaging for a product including type, weight and materials.</p>
     */
    public static final Property packaging = m.createProperty(NS + "packaging");

    /**
     * <p>The packaging date is the date when the goods were packed as determined by
     * the packager. The date may refer to the trade item itself or to items contained.</p>
     */
    public static final Property packagingDate = m.createProperty(NS + "packagingDate");

    /**
     * <p>Code indicating a feature that facilitates the usage of the product by the
     * consumer, for example a handle. Packaging features do not affect the core
     * composition of the packaging type nor modify its usage.</p>
     */
    public static final Property packagingFeature = m.createProperty(NS + "packagingFeature");

    /**
     * <p>Code indicating specific functionality for packaging resulting from specific
     * processes or features present in the packaging type,for example, ANTI_TAMPERING.</p>
     */
    public static final Property packagingFunction = m.createProperty(NS + "packagingFunction");

    /**
     * <p>Indication of which dietary or allergen marks are on the package.</p>
     */
    public static final Property packagingMarkedDietAllergenType = m.createProperty(NS + "packagingMarkedDietAllergenType");

    /**
     * <p>Indication of the food ingredients that the package is marked free from.</p>
     */
    public static final Property packagingMarkedFreeFrom = m.createProperty(NS + "packagingMarkedFreeFrom");

    /**
     * <p>A marking that the product received recognition, endorsement, certification
     * by following guidelines by the label issuing agency. This does not represent
     * claims for regulatory purposes on products such as free from markings.</p>
     */
    public static final Property packagingMarkedLabelAccreditation = m.createProperty(NS + "packagingMarkedLabelAccreditation");

    /**
     * <p>links to details about packaging material type, quantity and thickness</p>
     */
    public static final Property packagingMaterial = m.createProperty(NS + "packagingMaterial");

    /**
     * <p>The quantity of the packaging material of the product. Can be weight, volume
     * or surface, can vary by country.</p>
     */
    public static final Property packagingMaterialCompositionQuantity = m.createProperty(NS + "packagingMaterialCompositionQuantity");

    /**
     * <p>The thickness of a packaging material.</p>
     */
    public static final Property packagingMaterialThickness = m.createProperty(NS + "packagingMaterialThickness");

    /**
     * <p>The materials used for the packaging of the product for example glass or plastic.</p>
     */
    public static final Property packagingMaterialType = m.createProperty(NS + "packagingMaterialType");

    /**
     * <p>The process the packaging could undertake for recyclable &amp; sustainability
     * programs. Examples COMPOSTABLE, ENERGY_RECOVERABLE, REUSABLE.</p>
     */
    public static final Property packagingRecyclingProcessType = m.createProperty(NS + "packagingRecyclingProcessType");

    /**
     * <p>A code indicating the recycling scheme the packaging of this product will
     * fall within when recycled. Applies to recyclable packaging with or without
     * deposit.</p>
     */
    public static final Property packagingRecyclingScheme = m.createProperty(NS + "packagingRecyclingScheme");

    /**
     * <p>A code depicting the shape of a package for example CONE.</p>
     */
    public static final Property packagingShape = m.createProperty(NS + "packagingShape");

    /**
     * <p>The dominant means used to transport, store, handle or display the product
     * as defined by the data source. This packaging is not used to describe any
     * manufacturing process.Recommend to use UNECE Rec 21 codes.</p>
     */
    public static final Property packagingType = m.createProperty(NS + "packagingType");

    /**
     * <p>Pantothenic Acid per specified nutrient basis quantity.</p>
     */
    public static final Property pantothenicAcidPerNutrientBasis = m.createProperty(NS + "pantothenicAcidPerNutrientBasis");

    /**
     * <p>Designates the legal entity or function directly above the organisation/party
     * being identified in a hierarchy. This is not defaulted to the highest-level
     * entity in the hierarchy. Only one parent organisation SHALL be associated
     * to a single GLN. To specify other affiliated organisations, see gs1:affiliatedTo,
     * gs1:managedBy, gs1:franchiseeOf, gs1:ownedBy. To specify an organisation/party
     * lower in the hierarchy, see gs1:subOrganization.</p>
     */
    public static final Property parentOrganization = m.createProperty(NS + "parentOrganization");

    /**
     * <p>13-digit GLN that is being used to identify a legal entity or function. If
     * gs1:glnType is present, gs1:partyGLN SHALL only be used when gs1:GLN_TypeCode
     * includes LEGAL_ENTITY and/or FUNCTION</p>
     */
    public static final Property partyGLN = m.createProperty(NS + "partyGLN");

    /**
     * <p>A link to a place where payments details are provided and/or payments can
     * be made by the user.</p>
     */
    public static final Property paymentLink = m.createProperty(NS + "paymentLink");

    /**
     * <p>The type of payment term expressed as a code, for example Discount.</p>
     */
    public static final Property paymentTerms = m.createProperty(NS + "paymentTerms");

    /**
     * <p>The percentage of alcohol contained in product.</p>
     */
    public static final Property percentageOfAlcoholByVolume = m.createProperty(NS + "percentageOfAlcoholByVolume");

    /**
     * <p>Phosphorus per specified nutrient basis quantity.</p>
     */
    public static final Property phosphorusPerNutrientBasis = m.createProperty(NS + "phosphorusPerNutrientBasis");

    /**
     * <p>The name of a physical place. To specify the name of a digital location, see
     * gs1:digitalLocationName.</p>
     */
    public static final Property physicalLocationName = m.createProperty(NS + "physicalLocationName");

    /**
     * <p>A link to information specifically about the identified item, typically operated
     * by the brand owner or a retailer of the product and aimed at consumers. It
     * may include links to further information, product description, specifications
     * etc.</p>
     */
    public static final Property pip = m.createProperty(NS + "pip");

    /**
     * <p>A polygon is the area enclosed by a point-to-point path for which the starting
     * and ending points are the same. A polygon is expressed as a series of four
     * or more space delimited points where the first and final points are identical.</p>
     */
    public static final Property polygon = m.createProperty(NS + "polygon");

    /**
     * <p>Polyols per specified nutrient basis quantity.</p>
     */
    public static final Property polyolsPerNutrientBasis = m.createProperty(NS + "polyolsPerNutrientBasis");

    /**
     * <p>Polyunsaturated fat per specified nutrient basis quantity.</p>
     */
    public static final Property polyunsaturatedFatPerNutrientBasis = m.createProperty(NS + "polyunsaturatedFatPerNutrientBasis");

    /**
     * <p>The number that identifies a PO box. A PO box is a box in a post office or
     * other postal service location assigned to an organization where postal items
     * may be kept.</p>
     */
    public static final Property postOfficeBoxNumber = m.createProperty(NS + "postOfficeBoxNumber");

    /**
     * <p>Text specifying the postal code for an address.</p>
     */
    public static final Property postalCode = m.createProperty(NS + "postalCode");

    /**
     * <p>The name of the recipient expressed in text. Note that this may be different
     * than gs1:OrganizationName.</p>
     */
    public static final Property postalName = m.createProperty(NS + "postalName");

    /**
     * <p>Potassium per specified nutrient basis quantity.</p>
     */
    public static final Property potassiumPerNutrientBasis = m.createProperty(NS + "potassiumPerNutrientBasis");

    /**
     * <p>Code specifying the preparation state of the product for which the nutrient
     * information is valid. PREPARED, UNPREPARED.</p>
     */
    public static final Property preparationCode = m.createProperty(NS + "preparationCode");

    /**
     * <p>Specifies additional precautions to be taken before preparation or consumption
     * of the product.</p>
     */
    public static final Property preparationConsumptionPrecautions = m.createProperty(NS + "preparationConsumptionPrecautions");

    /**
     * <p>Links to information about how to prepare a specific Food/Beverage/Tobacco
     * product.</p>
     */
    public static final Property preparationInformation = m.createProperty(NS + "preparationInformation");

    /**
     * <p>Free text providing instructions on how to prepare the product before serving.</p>
     */
    public static final Property preparationInstructions = m.createProperty(NS + "preparationInstructions");

    /**
     * <p>Code indicating the preservation technique used to preserve the product from
     * deterioration, for example, BRINING.</p>
     */
    public static final Property preservationTechnique = m.createProperty(NS + "preservationTechnique");

    /**
     * <p>Provides a price value as a floating-point numeric value that is qualified
     * by the corresponding currency. See also gs1:priceCurrency. The price value
     * indicates the unit price unless the property gs1:eligibleQuantity is specified
     * and indicates multiple units</p>
     */
    public static final Property price = m.createProperty(NS + "price");

    /**
     * <p>A string value indicating a currency from ISO 4217 for example USD .</p>
     */
    public static final Property priceCurrency = m.createProperty(NS + "priceCurrency");

    /**
     * <p>The price related to an offer. If the offer is a multi-buy offer for a quantity
     * of product greater than one unit, this should be indicated using the property
     * gs1:eligibleQuantity</p>
     */
    public static final Property priceSpecification = m.createProperty(NS + "priceSpecification");

    /**
     * <p>A product that is similar to the current product but is not exact match. Same
     * form fit function, e.g. same product different colour, different package size,
     * better quality.</p>
     */
    public static final Property primaryAlternateProduct = m.createProperty(NS + "primaryAlternateProduct");

    /**
     * <p>Links to the organisation(s) that designate this place as its/their primary
     * location. Property SHOULD be applied to a specific sub-location, rather than
     * a main location, wherever possible.</p>
     */
    public static final Property primaryLocationOf = m.createProperty(NS + "primaryLocationOf");

    /**
     * <p>An understandable and useable description of a product using brand and other
     * descriptors. This attribute is filled with as little abbreviation as possible,
     * while keeping to a reasonable length. This should be a meaningful description
     * of the product with full spelling to facilitate message processing. Retailers
     * can use this description as the base to fully understand the brand, flavour,
     * scent etc. of the specific product, in order to accurately create a product
     * description as needed for their internal systems. Examples: XYZ Brand Base
     * Invisible Solid Deodorant AP Stick Spring Breeze.</p>
     */
    public static final Property productDescription = m.createProperty(NS + "productDescription");

    /**
     * <p>Element for consumer facing marketing content to describe the key features
     * or benefits of the style suitable for display purposes.</p>
     */
    public static final Property productFeatureBenefit = m.createProperty(NS + "productFeatureBenefit");

    /**
     * <p>The physical form or shape of the product. Used, for example, in pharmaceutical
     * industry to indicate the formulation of the product. Defines the form the
     * product takes and is distinct from the form of the packaging.</p>
     */
    public static final Property productFormDescription = m.createProperty(NS + "productFormDescription");

    /**
     * <p>Additional means to the Global Trade Item Number to identify a product.</p>
     */
    public static final Property productID = m.createProperty(NS + "productID");

    /**
     * <p>Marketing message associated with the product. Consumer-friendly marketing
     * detailed description of the product.</p>
     */
    public static final Property productMarketingMessage = m.createProperty(NS + "productMarketingMessage");

    /**
     * <p>Consumer friendly short description of the product suitable for compact presentation.</p>
     */
    public static final Property productName = m.createProperty(NS + "productName");

    /**
     * <p>A name, used by a Brand Owner, that span multiple consumer categories or uses.
     * E.g. (Waist Watchers).</p>
     */
    public static final Property productRange = m.createProperty(NS + "productRange");

    /**
     * <p>This term has been deprecated. Please use gs1:sustainabilityInfo instead.</p>
     */
    public static final Property productSustainabilityInfo = m.createProperty(NS + "productSustainabilityInfo");

    /**
     * <p>Product quantity after preparation. This can differ based on productYieldType</p>
     */
    public static final Property productYield = m.createProperty(NS + "productYield");

    /**
     * <p>Code indicating the type of yield measurement specified in productYield. Examples:
     * AFTER_DILUTION, DRAINED_WEIGHT.</p>
     */
    public static final Property productYieldType = m.createProperty(NS + "productYieldType");

    /**
     * <p>Indication of range in percent of the given cooking / roasting loss. Percentage
     * that the actual weight of the product differs upward or downward from the
     * average or estimated product yield.</p>
     */
    public static final Property productYieldVariationPercentage = m.createProperty(NS + "productYieldVariationPercentage");

    /**
     * <p>The production date is the production or assembly date determined by the manufacturer.
     * The date may refer to the trade item itself or to items contained.</p>
     */
    public static final Property productionDate = m.createProperty(NS + "productionDate");

    /**
     * <p>The date and time of production (or assembly). The date and time of production
     * is determined by the manufacturer. The date and time may refer to the trade
     * item itself or to the items contained.</p>
     */
    public static final Property productionDateTime = m.createProperty(NS + "productionDateTime");

    /**
     * <p>Free text assigned by the manufacturer to describe the production variant.
     * Examples are: package series X, package series Y.</p>
     */
    public static final Property productionVariantDescription = m.createProperty(NS + "productionVariantDescription");

    /**
     * <p>The start date of a production variant. The variant applies to products having
     * a date mark (a best before date or expiration date) on the package that comes
     * on or after the effective date.</p>
     */
    public static final Property productionVariantEffectiveDateTime = m.createProperty(NS + "productionVariantEffectiveDateTime");

    /**
     * <p>A link to a promotion.</p>
     */
    public static final Property promotion = m.createProperty(NS + "promotion");

    /**
     * <p>Protein per specified nutrient basis quantity.</p>
     */
    public static final Property proteinPerNutrientBasis = m.createProperty(NS + "proteinPerNutrientBasis");

    /**
     * <p>Free text description of the region or place the product originates from.
     * This is to be specifically used to specify areas such as cities, mountain
     * ranges, regions. Examples: Made in the Thuringen Mountains, Made in Paris,
     * From the Napa Valley.</p>
     */
    public static final Property provenanceStatement = m.createProperty(NS + "provenanceStatement");

    /**
     * <p>A link to information about where supplies or accessories for the item can
     * be purchased or ordered.</p>
     */
    public static final Property purchaseSuppliesOrAccessories = m.createProperty(NS + "purchaseSuppliesOrAccessories");

    /**
     * <p>If specified, the discount is only available when purchasing a product from
     * one of the brand names specified via this property.</p>
     */
    public static final Property qualifyingBrandName = m.createProperty(NS + "qualifyingBrandName");

    /**
     * <p>If specified, the discount is only available when purchasing a product whose
     * Global Product Classification (GPC) brick value appears in the list specified
     * via this property.</p>
     */
    public static final Property qualifyingGPCs = m.createProperty(NS + "qualifyingGPCs");

    /**
     * <p>If specified, the discount is only available when purchasing a product from
     * categories specified in this free-form text field.</p>
     */
    public static final Property qualifyingProductCategoryDescription = m.createProperty(NS + "qualifyingProductCategoryDescription");

    /**
     * <p>If specified, the discount is only available when purchasing a product whose
     * product classification (other than GPC) appears in the list specified via
     * this property. This property specifies a product classification other than
     * GPC.</p>
     */
    public static final Property qualifyingProductClassificationCode = m.createProperty(NS + "qualifyingProductClassificationCode");

    /**
     * <p>If specified, the discount is only available when purchasing a product whose
     * GTIN appears in the list specified via this property.</p>
     */
    public static final Property qualifyingProductGTINs = m.createProperty(NS + "qualifyingProductGTINs");

    /**
     * <p>If specified, the discount is only available when purchasing a product from
     * one of the sub-brand names (specified product ranges for a given brand) specified
     * via this property.</p>
     */
    public static final Property qualifyingSubBrandName = m.createProperty(NS + "qualifyingSubBrandName");

    /**
     * <p>A link to a description of the key features needed to be understood to begin
     * using the item or interacting with something new.</p>
     */
    public static final Property quickStartGuide = m.createProperty(NS + "quickStartGuide");

    /**
     * <p>A link to information about whether the product has been recalled or not,
     * typically an API.</p>
     */
    public static final Property recallStatus = m.createProperty(NS + "recallStatus");

    /**
     * <p>A link to a recipe website.</p>
     */
    public static final Property recipeInfo = m.createProperty(NS + "recipeInfo");

    /**
     * <p>Link to a file or website containing additional information on product.</p>
     */
    public static final Property referencedFile = m.createProperty(NS + "referencedFile");

    /**
     * <p>The date upon which the target of this external link ceases to be effective
     * for use.</p>
     */
    public static final Property referencedFileEffectiveEndDateTime = m.createProperty(NS + "referencedFileEffectiveEndDateTime");

    /**
     * <p>The date upon which the target of this external link begins to be effective
     * for use.</p>
     */
    public static final Property referencedFileEffectiveStartDateTime = m.createProperty(NS + "referencedFileEffectiveStartDateTime");

    /**
     * <p>The size of the file as it is stored in an uncompressed format.</p>
     */
    public static final Property referencedFileSize = m.createProperty(NS + "referencedFileSize");

    /**
     * <p>A code indicating the purpose or role of file (not a MIME type) that is being
     * referenced, for example PRODUCT_LABEL_IMAGE. This code is used when the purpose
     * of a file is not specified in the property.</p>
     */
    public static final Property referencedFileType = m.createProperty(NS + "referencedFileType");

    /**
     * <p>Simple text string that refers to a resource on the internet, URLs may refer
     * to documents, resources, people, etc.</p>
     */
    public static final Property referencedFileURL = m.createProperty(NS + "referencedFileURL");

    /**
     * <p>A link to an entry point for registering ownership of a product including
     * for warranty purposes.</p>
     */
    public static final Property registerProduct = m.createProperty(NS + "registerProduct");

    /**
     * <p>A link to an entry in a register, such as a business register or register
     * of locations. Such registers may act as alternative identifiers, such as official
     * company numbers, LEIs, other location identifiers etc.</p>
     */
    public static final Property registryEntry = m.createProperty(NS + "registryEntry");

    /**
     * <p>The prescribed, regulated or generic product name or denomination that describes
     * the true nature of the product. For example for a food product in order to
     * distinguish it from other foods according to country specific regulations.</p>
     */
    public static final Property regulatedProductName = m.createProperty(NS + "regulatedProductName");

    /**
     * <p>Indicates, with reference to the product branding, labelling or packaging
     * whether a food product which is ready to eat can be reheated if required prior
     * to consumption.</p>
     */
    public static final Property reheatingClaim = m.createProperty(NS + "reheatingClaim");

    /**
     * <p>A link to any image that depicts or relates to the identified entity (e.g.,
     * trade item, assets, business process, patient record, location, organisation,
     * etc.)</p>
     */
    public static final Property relatedImage = m.createProperty(NS + "relatedImage");

    /**
     * <p>The organisation(s) associated with a place.</p>
     */
    public static final Property relatedOrganization = m.createProperty(NS + "relatedOrganization");

    /**
     * <p>A link to any video, or document that has an embedded video, that describes
     * or relates to the identified item, organisation, or location in some way.</p>
     */
    public static final Property relatedVideo = m.createProperty(NS + "relatedVideo");

    /**
     * <p>Links to the successor organisation that is used in place of a previous organisation</p>
     */
    public static final Property replacedByOrganization = m.createProperty(NS + "replacedByOrganization");

    /**
     * <p>Links to the successor location that is used in place of a previous location</p>
     */
    public static final Property replacedByPlace = m.createProperty(NS + "replacedByPlace");

    /**
     * <p>The product which permanently replaces the current product. This product is
     * sent in the record for the original item that is being replaced.</p>
     */
    public static final Property replacedByProduct = m.createProperty(NS + "replacedByProduct");

    /**
     * <p>Links to the previous organisation that this organisation replaces</p>
     */
    public static final Property replacedOrganization = m.createProperty(NS + "replacedOrganization");

    /**
     * <p>Links to the previous location that this location replaces</p>
     */
    public static final Property replacedPlace = m.createProperty(NS + "replacedPlace");

    /**
     * <p>Indicates the product identification of an item that is being permanently
     * replaced by this product.</p>
     */
    public static final Property replacedProduct = m.createProperty(NS + "replacedProduct");

    /**
     * <p>Text further specifying the area of responsibility of the trade contact.</p>
     */
    public static final Property responsibility = m.createProperty(NS + "responsibility");

    /**
     * <p>Links to the place(s) for which this organisation is responsible.</p>
     */
    public static final Property responsibleForLocation = m.createProperty(NS + "responsibleForLocation");

    /**
     * <p>Links to the organisation that is directly responsible for this place.</p>
     */
    public static final Property responsibleOrganization = m.createProperty(NS + "responsibleOrganization");

    /**
     * <p>The monetary amount for the individual returnable package.</p>
     */
    public static final Property returnablePackageDepositAmount = m.createProperty(NS + "returnablePackageDepositAmount");

    /**
     * <p>The geographic region associated with the returnable package deposit amount.</p>
     */
    public static final Property returnablePackageDepositRegion = m.createProperty(NS + "returnablePackageDepositRegion");

    /**
     * <p>A link to reviews.</p>
     */
    public static final Property review = m.createProperty(NS + "review");

    /**
     * <p>Riboflavin per specified nutrient basis quantity.</p>
     */
    public static final Property riboflavinPerNutrientBasis = m.createProperty(NS + "riboflavinPerNutrientBasis");

    /**
     * <p>A link to safety information.</p>
     */
    public static final Property safetyInfo = m.createProperty(NS + "safetyInfo");

    /**
     * <p>Salt per specified nutrient basis quantity.</p>
     */
    public static final Property saltPerNutrientBasis = m.createProperty(NS + "saltPerNutrientBasis");

    /**
     * <p>Saturated fat per specified nutrient basis quantity.</p>
     */
    public static final Property saturatedFatPerNutrientBasis = m.createProperty(NS + "saturatedFatPerNutrientBasis");

    /**
     * <p>A link to a site that offers information on scheduling, appointments, or reservations.
     * This may or may not allow the user to book the reservation.</p>
     */
    public static final Property scheduleTime = m.createProperty(NS + "scheduleTime");

    /**
     * <p>The calendar year in which the product is seasonally available.</p>
     */
    public static final Property seasonCalendarYear = m.createProperty(NS + "seasonCalendarYear");

    /**
     * <p>Element defines the season applicable to the item for example Winter.</p>
     */
    public static final Property seasonName = m.createProperty(NS + "seasonName");

    /**
     * <p>Code indicating the season in which the product is available, e.g. SPRING,
     * WINTER</p>
     */
    public static final Property seasonParameter = m.createProperty(NS + "seasonParameter");

    /**
     * <p>The organization seeking an offer.</p>
     */
    public static final Property seeker = m.createProperty(NS + "seeker");

    /**
     * <p>If specified and set to true, the discount only applies to specific products
     * selected by the retailer or offer promoter - not to all items in that product
     * category. This property should be asserted and set to true for offers that
     * say 'on selected products'.</p>
     */
    public static final Property selectedProductsOnly = m.createProperty(NS + "selectedProductsOnly");

    /**
     * <p>Selenium per specified nutrient basis quantity.</p>
     */
    public static final Property seleniumPerNutrientBasis = m.createProperty(NS + "seleniumPerNutrientBasis");

    /**
     * <p>The date specified by the manufacturer as the last date the retailer is to
     * offer the product for sale to the consumer. The product should not be merchandised
     * after this date.</p>
     */
    public static final Property sellByDate = m.createProperty(NS + "sellByDate");

    /**
     * <p>The organization seeking to sell a product or service.</p>
     */
    public static final Property seller = m.createProperty(NS + "seller");

    /**
     * <p>A link to service or maintenance instructions.</p>
     */
    public static final Property serviceInfo = m.createProperty(NS + "serviceInfo");

    /**
     * <p>Measurement value specifying the serving size in which the information per
     * nutrient has been stated. Example: Per 100 GRM.</p>
     */
    public static final Property servingSize = m.createProperty(NS + "servingSize");

    /**
     * <p>A free text field specifying the serving size for which the nutrient information
     * has been stated for example: per 1/3 cup (42 g).</p>
     */
    public static final Property servingSizeDescription = m.createProperty(NS + "servingSizeDescription");

    /**
     * <p>Free text field for serving suggestion.</p>
     */
    public static final Property servingSuggestion = m.createProperty(NS + "servingSuggestion");

    /**
     * <p>The descriptive term that is used by the product manufacturer to identify
     * the sharpness of the taste of the product for example EXTRA_SHARP. Usually
     * the longer the aging of the product, the sharper the taste.</p>
     */
    public static final Property sharpnessOfCheese = m.createProperty(NS + "sharpnessOfCheese");

    /**
     * <p>Links a wearable product to one or more groupings of gs1:SizeDetails representing
     * size systems, size groups, size type and size dimensions.</p>
     */
    public static final Property size = m.createProperty(NS + "size");

    /**
     * <p>Links a product to one or more groupings of gs1:SizeCodeDetails representing
     * the size value from a specified code list.</p>
     */
    public static final Property sizeCode = m.createProperty(NS + "sizeCode");

    /**
     * <p>Code specifying a size code list. Allowed code values are specified in GS1
     * Code List SizeCodeListCode .</p>
     */
    public static final Property sizeCodeListCode = m.createProperty(NS + "sizeCodeListCode");

    /**
     * <p>A code indicating the size of an object according to a specific code list.
     * The applied code list is specified as additional information together with
     * the size code.</p>
     */
    public static final Property sizeCodeValue = m.createProperty(NS + "sizeCodeValue");

    /**
     * <p>The numerical size measurement relating to the size type.</p>
     */
    public static final Property sizeDimension = m.createProperty(NS + "sizeDimension");

    /**
     * <p>Code indicating the type of size that is necessary to uniquely specify the
     * size of the item, for example, BOYS.</p>
     */
    public static final Property sizeGroup = m.createProperty(NS + "sizeGroup");

    /**
     * <p>The system that is being used to define the size for example EUROPE. Size
     * system is used in conjunction with size group to define the size dimension.</p>
     */
    public static final Property sizeSystem = m.createProperty(NS + "sizeSystem");

    /**
     * <p>The type of size dimension being specified for example SLEEVE.</p>
     */
    public static final Property sizeType = m.createProperty(NS + "sizeType");

    /**
     * <p>A link to the product's SmartLabel page.</p>
     */
    public static final Property smartLabel = m.createProperty(NS + "smartLabel");

    /**
     * <p>A link to Summary Product Characteristics. To be used specifically when linking
     * to information for healthcare professionals.</p>
     */
    public static final Property smpc = m.createProperty(NS + "smpc");

    /**
     * <p>A link to a social media channel. The title will typically be replaced by
     * the name of the channel.</p>
     */
    public static final Property socialMedia = m.createProperty(NS + "socialMedia");

    /**
     * <p>Sodium per specified nutrient basis quantity.</p>
     */
    public static final Property sodiumPerNutrientBasis = m.createProperty(NS + "sodiumPerNutrientBasis");

    /**
     * <p>Code indicating the source of raw material used to produce the food product,
     * for example a GOAT for milk.</p>
     */
    public static final Property sourceAnimal = m.createProperty(NS + "sourceAnimal");

    /**
     * <p>Code indicating the type of sporting activity for which the product is intended
     * to be worn, for example FOOTBALL.</p>
     */
    public static final Property sportingActivityType = m.createProperty(NS + "sportingActivityType");

    /**
     * <p>Starch per specified nutrient basis quantity.</p>
     */
    public static final Property starchPerNutrientBasis = m.createProperty(NS + "starchPerNutrientBasis");

    /**
     * <p>A link to information about statistics regarding an organisation, location,
     * or other entity.</p>
     */
    public static final Property statisticInfo = m.createProperty(NS + "statisticInfo");

    /**
     * <p>Date and time (including optional timezone) associated to status designations.
     * Timestamps may be future dated to provide advance notice of status changes.
     * For further information about the required lexical representation of date,
     * time, and timezone please see https://www.w3.org/TR/xmlschema-2/#dateTime</p>
     */
    public static final Property statusTimestamp = m.createProperty(NS + "statusTimestamp");

    /**
     * <p>The street address expressed as free form text. The street address is printed
     * on paper as the first lines below the name. For example, the name of the street
     * and the number in the street or the name of a building. A total of four street
     * address lines are available. gs1:streetAddress SHOULD be used before populating
     * lines two through four. For a PO Box gs1:postOfficeBoxNumber SHOULD be used
     * instead.</p>
     */
    public static final Property streetAddress = m.createProperty(NS + "streetAddress");

    /**
     * <p>The second line of the street address, expressed as free form text. The street
     * address is printed on paper as the first lines below the name. For example,
     * the name of the street and the number in the street or the name of a building.
     * A total of four street address lines are available. gs1:streetAddress SHOULD
     * be used before populating lines two through four. These SHALL NOT be used
     * as alternatives to the dedicated address properties gs1:addressSuburb, gs1:addressLocality
     * and gs1:addressRegion.</p>
     */
    public static final Property streetAddressLine2 = m.createProperty(NS + "streetAddressLine2");

    /**
     * <p>The third line of the street address, expressed as free form text. The street
     * address is printed on paper as the first lines below the name. For example,
     * the name of the street and the number in the street or the name of a building.
     * A total of four street address lines are available. gs1:streetAddress and
     * gs1:streetaddressLine2 SHOULD be used before populating lines three and four.
     * These SHALL NOT be used as alternatives to the dedicated address properties
     * gs1:addressSuburb, gs1:addressLocality and gs1:addressRegion.</p>
     */
    public static final Property streetAddressLine3 = m.createProperty(NS + "streetAddressLine3");

    /**
     * <p>The fourth line of the street address, expressed as free form text. The street
     * address is printed on paper as the first lines below the name. For example,
     * the name of the street and the number in the street or the name of a building.
     * gs1:streetAddress, gs1:streetaddressLine2 and gs1:streetaddressLine3 SHOULD
     * be used before populating line four. These SHALL NOT be used as alternatives
     * to the dedicated address properties gs1:addressSuburb, gs1:addressLocality
     * and gs1:addressRegion.</p>
     */
    public static final Property streetAddressLine4 = m.createProperty(NS + "streetAddressLine4");

    /**
     * <p>An attribute that classifies products that share many of the same characteristics
     * (attribute values) that does NOT vary by GTIN, and are presented by the supplier
     * as a single merchandise selection for the buyer.</p>
     */
    public static final Property styleDescription = m.createProperty(NS + "styleDescription");

    /**
     * <p>Second level of brand. Can be a trademark. It is the primary differentiating
     * factor that a brand owner wants to communicate to the consumer or buyer. E.g.
     * Yummy-Cola Classic. In this example Yummy-Cola is the brand and Classic is
     * the sub-brand.</p>
     */
    public static final Property subBrandName = m.createProperty(NS + "subBrandName");

    /**
     * <p>Designates a legal entity or function directly below the organisation/party
     * being identified in a hierarchy. There may be multiple sub-organisations associated
     * to a single GLN. To specify other affiliated organisations, see gs1:manages,
     * gs1:franchisorOf, gs1:owns. To specify a parent organisation, see gs1:parentOrganization.</p>
     */
    public static final Property subOrganization = m.createProperty(NS + "subOrganization");

    /**
     * <p>A link to a subscription form</p>
     */
    public static final Property subscribe = m.createProperty(NS + "subscribe");

    /**
     * <p>Sugars per specified nutrient basis quantity.</p>
     */
    public static final Property sugarsPerNutrientBasis = m.createProperty(NS + "sugarsPerNutrientBasis");

    /**
     * <p>Represents the number of days between a product's sell by date and its use
     * by date.</p>
     */
    public static final Property supplierSpecifiedMinimumConsumerStorageDays = m.createProperty(NS + "supplierSpecifiedMinimumConsumerStorageDays");

    /**
     * <p>A link to a source of support such as a helpdesk, chat support, email etc.</p>
     */
    public static final Property support = m.createProperty(NS + "support");

    /**
     * <p>A link to information relating to sustainability and recycling requirements
     * or processes.</p>
     */
    public static final Property sustainabilityInfo = m.createProperty(NS + "sustainabilityInfo");

    /**
     * <p>Indicates the descriptive term that is used by the product manufacturer to
     * identify the sweetness of the alcoholic beverage. These are sometimes placed
     * on a label. In some markets, the term is based on the amount of sugar content
     * according to local regulation.</p>
     */
    public static final Property sweetnessLevelOfAlcoholicBeverage = m.createProperty(NS + "sweetnessLevelOfAlcoholicBeverage");

    /**
     * <p>Identifies the target consumer age range for which a product has been designed.</p>
     */
    public static final Property targetConsumerAge = m.createProperty(NS + "targetConsumerAge");

    /**
     * <p>Identifies the target consumer gender for which a product has been designed
     * for example MALE</p>
     */
    public static final Property targetConsumerGender = m.createProperty(NS + "targetConsumerGender");

    /**
     * <p>Relates to a set of target market details (product release date and associated
     * countries)</p>
     */
    public static final Property targetMarket = m.createProperty(NS + "targetMarket");

    /**
     * <p>List of countries representing the target market for a particular release
     * date indicated by gs1:consumerFirstAvailabilityDateTime</p>
     */
    public static final Property targetMarketCountries = m.createProperty(NS + "targetMarketCountries");

    /**
     * <p>A telephone number for example +44 217 992 9999.</p>
     */
    public static final Property telephone = m.createProperty(NS + "telephone");

    /**
     * <p>One or more links to information about the materials used in a wearable product.</p>
     */
    public static final Property textileMaterial = m.createProperty(NS + "textileMaterial");

    /**
     * <p>A description of the material composition used in conjunction with the material
     * percentage.</p>
     */
    public static final Property textileMaterialContent = m.createProperty(NS + "textileMaterialContent");

    /**
     * <p>This provides a name or brief description of one material contained within
     * the product, for example Rayon.</p>
     */
    public static final Property textileMaterialDescription = m.createProperty(NS + "textileMaterialDescription");

    /**
     * <p>Corresponding net weight percentage of the product material specified via
     * gs1:textileMaterialDescription, e.g. 70.</p>
     */
    public static final Property textileMaterialPercentage = m.createProperty(NS + "textileMaterialPercentage");

    /**
     * <p>The quality of material (fabric) of a product based on the total number of
     * vertical and horizontal threads in one square inch.</p>
     */
    public static final Property textileMaterialThreadCount = m.createProperty(NS + "textileMaterialThreadCount");

    /**
     * <p>The measured weight of the material expressed in ounces per square yard or
     * grams per square meter.</p>
     */
    public static final Property textileMaterialWeight = m.createProperty(NS + "textileMaterialWeight");

    /**
     * <p>Thiamin per specified nutrient basis quantity.</p>
     */
    public static final Property thiaminPerNutrientBasis = m.createProperty(NS + "thiaminPerNutrientBasis");

    /**
     * <p>A link to traceability information (includes track and trace). Traceability
     * information may be provided for consumption by humans or computers. If the
     * target is an EPCIS repository, use gs1:epcis instead.</p>
     */
    public static final Property traceability = m.createProperty(NS + "traceability");

    /**
     * <p>Trans Fat per specified nutrient basis quantity.</p>
     */
    public static final Property transFatPerNutrientBasis = m.createProperty(NS + "transFatPerNutrientBasis");

    /**
     * <p>A link to a tutorial or set of tutorials, such as online classes, how-to videos
     * etc.</p>
     */
    public static final Property tutorial = m.createProperty(NS + "tutorial");

    /**
     * <p>A string value indicating a Measurement Unit from UN/ECE Recommendation 20,
     * Units of Measure used in International Trade e.g. GRM = gram - see http://www.unece.org/fileadmin/DAM/cefact/recommendations/rec20/rec20_rev3_Annex3e.pdf</p>
     */
    public static final Property unitCode = m.createProperty(NS + "unitCode");

    /**
     * <p>The material(s) used for the upper part of the footwear product. The upper
     * is the part of a shoe, boot, slipper or other item of footwear that is above
     * the sole.</p>
     */
    public static final Property upperMaterialType = m.createProperty(NS + "upperMaterialType");

    /**
     * <p>A link to an agreement or waiver.</p>
     */
    public static final Property userAgreement = m.createProperty(NS + "userAgreement");

    /**
     * <p>Links to the place(s) that this organisation uses as a managed space.</p>
     */
    public static final Property usesManagedLocation = m.createProperty(NS + "usesManagedLocation");

    /**
     * <p>The effective start date of the price .</p>
     */
    public static final Property validFrom = m.createProperty(NS + "validFrom");

    /**
     * <p>The effective end date of the price .</p>
     */
    public static final Property validThrough = m.createProperty(NS + "validThrough");

    /**
     * <p>A floating-point numeric value that is qualified by the corresponding measurement
     * unit code - see gs1:unitCode</p>
     */
    public static final Property value = m.createProperty(NS + "value");

    /**
     * <p>Free text field used to identify the variant of the product. Variants are
     * the distinguishing characteristics that differentiate products with the same
     * brand and size including such things as the particular flavour, fragrance,
     * taste.</p>
     */
    public static final Property variantDescription = m.createProperty(NS + "variantDescription");

    /**
     * <p>A link to a GS1 Lightweight Messaging Service for verifying the status of
     * a product, organisation, or location and its identifier.</p>
     */
    public static final Property verificationService = m.createProperty(NS + "verificationService");

    /**
     * <p>The person hired by a winery or wine company who is responsible for many of
     * the processes in the preparation, taste and quality of the wine produced.
     * The science of wine making is referred to as oenology. The vintner is the
     * oenologist.</p>
     */
    public static final Property vintner = m.createProperty(NS + "vintner");

    /**
     * <p>Vitamin A per specified nutrient basis quantity.</p>
     */
    public static final Property vitaminAPerNutrientBasis = m.createProperty(NS + "vitaminAPerNutrientBasis");

    /**
     * <p>Vitamin B12 per specified nutrient basis quantity.</p>
     */
    public static final Property vitaminB12PerNutrientBasis = m.createProperty(NS + "vitaminB12PerNutrientBasis");

    /**
     * <p>Vitamin B6 per specified nutrient basis quantity.</p>
     */
    public static final Property vitaminB6PerNutrientBasis = m.createProperty(NS + "vitaminB6PerNutrientBasis");

    /**
     * <p>Vitamin C per specified nutrient basis quantity.</p>
     */
    public static final Property vitaminCPerNutrientBasis = m.createProperty(NS + "vitaminCPerNutrientBasis");

    /**
     * <p>Vitamin D per specified nutrient basis quantity.</p>
     */
    public static final Property vitaminDPerNutrientBasis = m.createProperty(NS + "vitaminDPerNutrientBasis");

    /**
     * <p>Vitamin E per specified nutrient basis quantity.</p>
     */
    public static final Property vitaminEPerNutrientBasis = m.createProperty(NS + "vitaminEPerNutrientBasis");

    /**
     * <p>Vitamin K per specified nutrient basis quantity.</p>
     */
    public static final Property vitaminKPerNutrientBasis = m.createProperty(NS + "vitaminKPerNutrientBasis");

    /**
     * <p>Warning information is additional information that outlines special requirements,
     * warning and caution information printed on the package.</p>
     */
    public static final Property warningCopyDescription = m.createProperty(NS + "warningCopyDescription");

    /**
     * <p>The warranty associated with the product, as provided by the manufacturer.</p>
     */
    public static final Property warranty = m.createProperty(NS + "warranty");

    /**
     * <p>The description of warranty available for the product. Allows for the representation
     * of the same value in different languages but not for multiple values.</p>
     */
    public static final Property warrantyScopeDescription = m.createProperty(NS + "warrantyScopeDescription");

    /**
     * <p>A link to a description of all the individual items in a packaged item.</p>
     */
    public static final Property whatsInTheBox = m.createProperty(NS + "whatsInTheBox");

    /**
     * <p>Product quantity after preparation.</p>
     */
    public static final Property yield = m.createProperty(NS + "yield");

    /**
     * <p>Zinc per specified nutrient basis quantity.</p>
     */
    public static final Property zincPerNutrientBasis = m.createProperty(NS + "zincPerNutrientBasis");

    /**
     * <p>A product classification for the product other than the Global Product Classification(GPC
     * brick value).</p>
     */
    public static final Resource AdditionalProductClassificationDetails = m.createResource(NS + "AdditionalProductClassificationDetails");

    /**
     * <p>A set of details about one of the additives within the product.</p>
     */
    public static final Resource AdditiveDetails = m.createResource(NS + "AdditiveDetails");

    /**
     * <p>Details of an allergen for a product.</p>
     */
    public static final Resource AllergenDetails = m.createResource(NS + "AllergenDetails");

    /**
     * <p>A set of details about covert or overt security features that may contribute
     * to checking the authenticity of a product or product instance.</p>
     */
    public static final Resource AuthenticityDetails = m.createResource(NS + "AuthenticityDetails");

    /**
     * <p>Describes a prize or award won by a product or organization.</p>
     */
    public static final Resource AwardPrizeDetails = m.createResource(NS + "AwardPrizeDetails");

    /**
     * <p>Any potable liquid.</p>
     */
    public static final Resource Beverage = m.createResource(NS + "Beverage");

    /**
     * <p>Information on brands and sub-brands for a product.</p>
     */
    public static final Resource Brand = m.createResource(NS + "Brand");

    /**
     * <p>Certification issued by a certifying body to a certification subject (Organization,
     * Place, Product).</p>
     */
    public static final Resource CertificationDetails = m.createResource(NS + "CertificationDetails");

    /**
     * <p>A product that is worn on the body.</p>
     */
    public static final Resource Clothing = m.createResource(NS + "Clothing");

    /**
     * <p>A set of colour code details (colour code, party controlling the code list)
     * for the product.</p>
     */
    public static final Resource ColourCodeDetails = m.createResource(NS + "ColourCodeDetails");

    /**
     * <p>The group of compulsory information about a product.</p>
     */
    public static final Resource CompulsoryAdditionalInformation = m.createResource(NS + "CompulsoryAdditionalInformation");

    /**
     * <p>Information on an individual or department acting as point of contact for
     * an organiation.</p>
     */
    public static final Resource ContactPoint = m.createResource(NS + "ContactPoint");

    /**
     * <p>Country is a complex data type that indicates a country and a country subdivision.</p>
     */
    public static final Resource Country = m.createResource(NS + "Country");

    /**
     * <p>A set of diet type code details (diet type code and diet type sub code) for
     * the product.</p>
     */
    public static final Resource DietTypeCodeDetails = m.createResource(NS + "DietTypeCodeDetails");

    /**
     * <p>Provides information on a discount applicable to an offer for example 2 percent.</p>
     */
    public static final Resource Discount = m.createResource(NS + "Discount");

    /**
     * <p>Food and Beverage Preparation Information is a complex data type that indicates
     * a preparation state code and preparation instructions.</p>
     */
    public static final Resource FoodAndBeveragePreparationInformation = m.createResource(NS + "FoodAndBeveragePreparationInformation");

    /**
     * <p>Food Beverage Tobacco Ingredient is a complex data type that includes an ingredient
     * statement and details.</p>
     */
    public static final Resource FoodBeverageTobaccoIngredientDetails = m.createResource(NS + "FoodBeverageTobaccoIngredientDetails");

    /**
     * <p>A food, beverage or tobacco product.</p>
     */
    public static final Resource FoodBeverageTobaccoProduct = m.createResource(NS + "FoodBeverageTobaccoProduct");

    /**
     * <p>Outerwear that is worn on the feet such as shoes or boots.</p>
     */
    public static final Resource Footwear = m.createResource(NS + "Footwear");

    /**
     * <p>Contains properties related specifically to fruit and vegetable products.</p>
     */
    public static final Resource FruitsVegetables = m.createResource(NS + "FruitsVegetables");

    /**
     * <p>The geographic coordinates of a place or event.</p>
     */
    public static final Resource GeoCoordinates = m.createResource(NS + "GeoCoordinates");

    /**
     * <p>The geographic shape of a place. A GeoShape can be described using several
     * properties whose values are based on latitude/longitude pairs. Either whitespace
     * or commas can be used to separate latitude and longitude; whitespace should
     * be used when writing a list of several such points.</p>
     */
    public static final Resource GeoShape = m.createResource(NS + "GeoShape");

    /**
     * <p>Government bodies, trade organisations, and other parties issue identifiers
     * that are associated to locations. Linking these identifiers to GLN and one
     * another supports consolidating records, mapping related, collaborative identifiers,
     * enhances search ability and enables more efficient transitions between identifiers.
     * This class provides a mechanism for connecting and sharing location identifiers.</p>
     */
    public static final Resource LocationID_Details = m.createResource(NS + "LocationID_Details");

    /**
     * <p>Over the lifetime of a location, it may go through periods of being active
     * and inactive. gs1:LocationStatusHistory allows changes in status to be communicated
     * in advance and tracked over time.</p>
     */
    public static final Resource LocationStatusHistory = m.createResource(NS + "LocationStatusHistory");

    /**
     * <p>Meat and poultry products.</p>
     */
    public static final Resource MeatPoultry = m.createResource(NS + "MeatPoultry");

    /**
     * <p>Milk butter cream yogurts cheese eggs and any substitutes for these products.</p>
     */
    public static final Resource MilkButterCreamYogurtCheeseEggsSubstitutes = m.createResource(NS + "MilkButterCreamYogurtCheeseEggsSubstitutes");

    /**
     * <p>A class providing nutritional value and intake percent.</p>
     */
    public static final Resource NutritionMeasurementType = m.createResource(NS + "NutritionMeasurementType");

    /**
     * <p>An offer to transfer some rights to an item or to provide a service,for example,
     * an offer to sell tickets to an event, to rent the DVD of a movie, to stream
     * a TV show over the internet, to repair a motorcycle, or to loan a book.</p>
     */
    public static final Resource Offer = m.createResource(NS + "Offer");

    /**
     * <p>A set of organic claim details for the product.</p>
     */
    public static final Resource OrganicClaimDetails = m.createResource(NS + "OrganicClaimDetails");

    /**
     * <p>An Organization is any legal or physical entity involved at any point in any
     * supply chain and upon which there is a need to retrieve predefined information.
     * An Organization is uniquely identified by a Global Location Number (GLN).</p>
     */
    public static final Resource Organization = m.createResource(NS + "Organization");

    /**
     * <p>Government bodies, trade organisations, and other parties issue identifiers
     * that are associated to legal entities and/or functions. Linking these identifiers
     * to GLN and one another supports consolidating records, mapping related, collaborative
     * identifiers, enhances search ability and enables more efficient transitions
     * between identifiers. This class provides a mechanism for connecting and sharing
     * party identifiers.</p>
     */
    public static final Resource OrganizationID_Details = m.createResource(NS + "OrganizationID_Details");

    /**
     * <p>Over the lifetime of an organisation, it may go through periods of being active
     * and inactive. gs1:OrganizationStatusHistory allows changes in status to be
     * communicated in advance and tracked over time.</p>
     */
    public static final Resource OrganizationStatusHistory = m.createResource(NS + "OrganizationStatusHistory");

    /**
     * <p>Details on packaging for a product for example packaging type (bottle), materials,
     * features, recycling, etc..</p>
     */
    public static final Resource PackagingDetails = m.createResource(NS + "PackagingDetails");

    /**
     * <p>Information on any material used for packaging.</p>
     */
    public static final Resource PackagingMaterialDetails = m.createResource(NS + "PackagingMaterialDetails");

    /**
     * <p>Entities that have a somewhat fixed, physical location.</p>
     */
    public static final Resource Place = m.createResource(NS + "Place");

    /**
     * <p>The location at which a particular organization or person may be found or
     * reached.</p>
     */
    public static final Resource PostalAddress = m.createResource(NS + "PostalAddress");

    /**
     * <p>A structured value representing a monetary amount, consisting of a value and
     * currency code.</p>
     */
    public static final Resource PriceSpecification = m.createResource(NS + "PriceSpecification");

    /**
     * <p>Any item (product or service) upon which there is a need to retrieve pre-defined
     * information and that may be priced, or ordered, or invoiced at any point in
     * any supply chain.</p>
     */
    public static final Resource Product = m.createResource(NS + "Product");

    /**
     * <p>A grouping of properties related to the yield of a food or beverage product
     * according to a specified type of preparation.</p>
     */
    public static final Resource ProductYieldDetails = m.createResource(NS + "ProductYieldDetails");

    /**
     * <p>A point value or interval for product characteristics and other purposes.
     * A unit of measurement is also specified.</p>
     */
    public static final Resource QuantitativeValue = m.createResource(NS + "QuantitativeValue");

    /**
     * <p>Provides URL and other information on a referenced electronic file.</p>
     */
    public static final Resource ReferencedFileDetails = m.createResource(NS + "ReferencedFileDetails");

    /**
     * <p>Details of the deposit for returnable packaging for a product.</p>
     */
    public static final Resource ReturnablePackageDepositDetails = m.createResource(NS + "ReturnablePackageDepositDetails");

    /**
     * <p>Seafood Products including fish and shellfish.</p>
     */
    public static final Resource Seafood = m.createResource(NS + "Seafood");

    /**
     * <p>A grouping of properties related to the representing the size of a product,
     * by specifying a value from a specified code list.</p>
     */
    public static final Resource SizeCodeDetails = m.createResource(NS + "SizeCodeDetails");

    /**
     * <p>A grouping of properties related to the size of a wearable product</p>
     */
    public static final Resource SizeDetails = m.createResource(NS + "SizeDetails");

    /**
     * <p>A set of target market details (product release date and associated countries)
     * for the product.</p>
     */
    public static final Resource TargetMarketDetails = m.createResource(NS + "TargetMarketDetails");

    /**
     * <p>Details on the composition of any materials used to make a product using textiles.</p>
     */
    public static final Resource TextileMaterialDetails = m.createResource(NS + "TextileMaterialDetails");

    /**
     * <p>A code list.</p>
     */
    public static final Resource TypeCode = m.createResource(NS + "TypeCode");

    /**
     * <p>An assurance that the product is reliable and that repairs or replacement
     * will be done free of charge within a given time limit and under certain conditions
     * in the event of a defect.</p>
     */
    public static final Resource WarrantyPromise = m.createResource(NS + "WarrantyPromise");

    /**
     * <p>Products that are worn on the body.</p>
     */
    public static final Resource WearableProduct = m.createResource(NS + "WearableProduct");

    public static final Resource __ = m.createResource(NS + "");

    /**
     * <p>Indicates the reporting of an alarm condition detected by a sensor device</p>
     */
    public static final Resource ALARM_CONDITION = m.createResource(NS + "ALARM_CONDITION");

    /**
     * <p>The ratio of the mass of water vapour in a sample of moist air to the volume
     * of the sample. SI Units: kilogram per cubic metre</p>
     */
    public static final Resource AbsoluteHumidity = m.createResource(NS + "AbsoluteHumidity");

    /**
     * <p>The energy absorbed per unit mass of the patient from the decay of a radionuclide
     * given to a patient for diagnostic or therapeutic purposes. SI Units: gray</p>
     */
    public static final Resource AbsorbedDose = m.createResource(NS + "AbsorbedDose");

    /**
     * <p>The energy absorbed per unit time per unit mass of the patient from the decay
     * of a radionuclide given to a patient for diagnostic or therapeutic purposes.
     * SI Units: gray per second</p>
     */
    public static final Resource AbsorbedDoseRate = m.createResource(NS + "AbsorbedDoseRate");

    /**
     * <p>The rate of change of velocity, a vector quantity with magnitude and direction.
     * SI Units: metre per second per second</p>
     */
    public static final Resource Acceleration = m.createResource(NS + "Acceleration");

    /**
     * <p>Refers to the presence of 1,3-Bis-(2,4-diaminophenoxy)propane as listed in
     * the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource PROPANE = m.createResource(NS + "AllergenTypeCode-1%2C3-BIS-%282%2C4-DIAMINOPHENOXY%29PROPANE");

    /**
     * <p>Refers to the presence of 1-Naphthol as listed in the regulations specified
     * in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_1_NAPHTHOL = m.createResource(NS + "AllergenTypeCode-1-NAPHTHOL");

    /**
     * <p>Refers to the presence of 2,6-Dimethoxy-3,5-pyridinediamine HCl as listed
     * in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource PYRIDINEDIAMINE_HCL = m.createResource(NS + "AllergenTypeCode-2%2C6-DIMETHOXY-3%2C5-PYRIDINEDIAMINE_HCL");

    /**
     * <p>Refers to the presence of 2-Hydroxyethyl-picramic acid as listed in the regulations
     * specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_2_HYDROXYETHYL_PICRAMIC_ACID = m.createResource(NS + "AllergenTypeCode-2-HYDROXYETHYL-PICRAMIC_ACID");

    /**
     * <p>Refers to the presence of 2-Methyl-5-hydroxyethylaminophenol as listed in
     * the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_2_METHYL_5_HYDROXYETHYLAMINOPHENOL = m.createResource(NS + "AllergenTypeCode-2-METHYL-5-HYDROXYETHYLAMINOPHENOL");

    /**
     * <p>Refers to the presence of 3-Amino-2,4-dichlorophenol as listed in the regulations
     * specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource DICHLOROPHENOL = m.createResource(NS + "AllergenTypeCode-3-AMINO-2%2C4-DICHLOROPHENOL");

    /**
     * <p>Refers to the presence of 3-Aminophenol as listed in the regulations specified
     * in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_3_AMINOPHENOL = m.createResource(NS + "AllergenTypeCode-3-AMINOPHENOL");

    /**
     * <p>Refers to the presence of 4-Amino-3-nitrophenol as listed in the regulations
     * specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_4_AMINO_3_NITROPHENOL = m.createResource(NS + "AllergenTypeCode-4-AMINO-3-NITROPHENOL");

    /**
     * <p>Refers to the presence of 4-Hydroxy-propylamino-3-nitrophenol as listed in
     * the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_4_HYDROXY_PROPYLAMINO_3_NITROPHENOL = m.createResource(NS + "AllergenTypeCode-4-HYDROXY-PROPYLAMINO-3-NITROPHENOL");

    /**
     * <p>Refers to the presence of Amylcinnamyl Alcohol in the product. - CAS Registry
     * Number: 101-85-9 - Also known as: alpha-Amylcinnamyl alcohol - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_AA = m.createResource(NS + "AllergenTypeCode-AA");

    /**
     * <p>Refers to the presence of Abalone and its derivatives in the product, as listed
     * in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_ABALONE = m.createResource(NS + "AllergenTypeCode-ABALONE");

    /**
     * <p>Refers to the presence of Tuna and its derivatives in the product. - Family/Genus/Species:
     * Scombridae subfamily Scombrinae/(various) - Also known as: Albacore, Bigeye
     * Tuna, Black Skipjack, Blackfin Tuna, Bluefin Tuna, Bullet Tuna, Buri, Dogtooth
     * Tuna, Escolar, Frigate Tuna, Kawakawa, Little Tuna, Longtail Tuna, Pacific
     * Bluefin Tuna, Skipjack Tuna, Slender Tuna, Southern Bluefin Tuna, Spotted
     * Tunny, Tuna, Yellowfin Tuna - Disclaimer: Refers to the presence of the allergen
     * in the product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_ABD = m.createResource(NS + "AllergenTypeCode-ABD");

    /**
     * <p>Refers to the presence of Walleye and its derivatives in the product. - Family/Genus/Species:
     * Percidae/Sander/S. vitreus - Also known as: Walleye, Yellow Pike, Yellow Pickerel
     * - Disclaimer: Refers to the presence of the allergen in the product, as listed
     * in the regulations specified by an agency and specification or any local market
     * regulations.</p>
     */
    public static final Resource AllergenTypeCode_ABE = m.createResource(NS + "AllergenTypeCode-ABE");

    /**
     * <p>Refers to the presence of Barnacles and its derivatives in the product. -
     * Family/Genus/Species: (various) - Also known as: Barnacle, Goose Barnacle,
     * Leaf Barnacle, Pico - Disclaimer: Refers to the presence of the allergen in
     * the product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_ABF = m.createResource(NS + "AllergenTypeCode-ABF");

    /**
     * <p>Refers to the presence of Crab and its derivatives in the product. - Family/Genus/Species:
     * Brachyura (various) - Also known as: (various) - Disclaimer: Refers to the
     * presence of the allergen in the product, as listed in the regulations specified
     * by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_ABG = m.createResource(NS + "AllergenTypeCode-ABG");

    /**
     * <p>Refers to the presence of Crawfish and its derivatives in the product. - Family/Genus/Species:
     * Astacidae or Cambaridae or Cambaroididae or Parastacidae/(various) - Also
     * known as: Caribbean Spiny Lobster, Crawdad, Crawdaddy, Crawfish, Craydid,
     * Crayfish, Freshwater Crayfish, Freshwater Lobsters, Marron, Mountain Lobsters,
     * Mudbugs, Murray River Crayfish, Red Claw Crayfish, Red Swamp Crayfish, Rock
     * Lobsters, Royal Spiny Lobster, White River Crayfish, Yabbie Crayfish - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_ABH = m.createResource(NS + "AllergenTypeCode-ABH");

    /**
     * <p>Refers to the presence of Krill and its derivatives in the product. - Family/Genus/Species:
     * Euphausiacea (various) - Also known as: - Disclaimer: Refers to the presence
     * of the allergen in the product, as listed in the regulations specified by
     * an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_ABI = m.createResource(NS + "AllergenTypeCode-ABI");

    /**
     * <p>Refers to the presence of Lobster and its derivatives in the product. - Family/Genus/Species:
     * Nephropidae/(various) - Also known as: American Lobster, Blue Spiny Lobster,
     * Blunt Slipper Lobster, Brazilian Slipper Lobster, California Spiny Lobster,
     * Cape Spiny Lobster, Caribbean Lobsterette, Caribbean Spiny Lobster, Colorado
     * Langostino, Common Spiny Lobster, Eastern Spiny Lobster, European Lobster,
     * Flathead Locust Lobster, Florida Lobsterette, Gilchrist Spiny Lobster, Green
     * Spiny Lobster, Hawaiian Spiny Lobster, Japanese Fan Lobster, Japanese Spiny
     * Lobster, Lobsterette, Mud Spiny Lobster, Natal Spiny Lobster, Norway Lobster,
     * Ornate Spiny Lobster, Painted Spiny Lobster, Pelagic Crab, Pink Spiny Lobster,
     * Pronghorn Spiny Lobster, Red-banded Lobster, Ridged Slipper Lobster, Royal
     * Spiny Lobster, Scalloped Spiny Lobster, Smoothtail Spiny Lobster, Southern
     * Rock Lobster, Spanish Slipper Lobster, St. Paul Spiny Lobster, Swarming Squat
     * Lobster, Urugavian Lobster, Western Red Lobster - Disclaimer: Refers to the
     * presence of the allergen in the product, as listed in the regulations specified
     * by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_ABJ = m.createResource(NS + "AllergenTypeCode-ABJ");

    /**
     * <p>Refers to the presence of Prawns and its derivatives in the product. Prawn
     * is a common name for small aquatic crustaceans with an exoskeleton and ten
     * legs (which is a member of the order decapoda), some of which can be eaten.
     * The terms shrimp and prawn are common names, not scientific names. They are
     * vernacular or colloquial terms which lack the formal definition of scientific
     * terms. They are not taxa, but are terms of convenience with little circumscriptional
     * significance. There is no reason to avoid using the terms shrimp or prawn
     * when convenient, but it is important not to confuse them with the names or
     * relationships of actual taxa. - Family/Genus/Species: (various) - Also known
     * as: Banana Prawn, Brown Tiger Prawn, Caramote Prawn, Common Prawn, Eastern
     * King Prawn, Giant Freshwater Prawn, Giant Gamba Prawn, Giant Tiger Prawn,
     * Green Tiger Prawn, Indian Prawn, Jack-knife Prawn, Kuruma Prawn, Redtail Prawn,
     * Roshna Prawn, Western King Prawn, Prawn - Disclaimer: Refers to the presence
     * of the allergen in the product, as listed in the regulations specified by
     * an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_ABK = m.createResource(NS + "AllergenTypeCode-ABK");

    /**
     * <p>Refers to the presence of Shrimp and its derivatives in the product. The terms
     * shrimp and prawn are common names, not scientific names. They are vernacular
     * or colloquial terms which lack the formal definition of scientific terms.
     * They are not taxa, but are terms of convenience with little circumscriptional
     * significance. There is no reason to avoid using the terms shrimp or prawn
     * when convenient, but it is important not to confuse them with the names or
     * relationships of actual taxa. - Family/Genus/Species: (various) - Also known
     * as: Akiami Paste Shrimp, Argentine Red Shrimp, Atlantic Seabob, Bigclaw River
     * Shrimp, Blue Shrimp, Brown Rock Shrimp, Brown Shrimp, California Shrimp, Chinese
     * White Shrimp, Cinnamon River Shrimp, Common Shrimp, Coonstriped Shrimp, Deep-water
     * Rose Shrimp, Deep-water Rose Shrimp, Endeavour Shrimp, Golden Shrimp, Greasyback
     * Shrimp, Humpy Shrimp, Jinga Shrimp, Kadal Shrimp, Kiddi Shrimp, Knife Shrimp,
     * Kolibri Shrimp, Marsh Grass Shrimp, Northern Shrimp, Ocean Shrimp, Ohio Shrimp,
     * Pink Shrimp, Pinkspotted Shrimp, Rainbow Shrimp, Royal Red Shrimp, Sakura
     * Shrimp, Seven-spine Bay Shrimp, Sidestriped Shrimp, Smooth Nylon Shrimp, Southern
     * Brown Shrimp, Southern White Shrimp, Speckled Shrimp, Spot Shrimp, Spot-tail
     * Mantis Shrimp, Titi Shrimp, Western White Shrimp, White Shrimp, Whiteleg Shrimp,
     * Tiger Shrimp, Shrimp - Disclaimer: Refers to the presence of the allergen
     * in the product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_ABL = m.createResource(NS + "AllergenTypeCode-ABL");

    /**
     * <p>Refers to the presence of Abalone and its derivates in the product. - Family/Genus/Species:
     * Haliotidae/Haliotis/(various) - Also known as: Abalone, Ear Shells, Sea Ears,
     * Muttonfish, Muttonshells, Ormer, Perlemoen, PÄua, Australian Abalone, Blackfoot
     * Abalone, Blacklip Abalone, Flat Abalone, Giant Abalone, Green Abalone, Greenlip
     * Abalone, Pink Abalone, Pinto Abalone, Pourtale Abalone, Red Abalone, Roe's
     * Abalone, Threaded Abalone, Tube Abalone - Disclaimer: Refers to the presence
     * of the allergen in the product, as listed in the regulations specified by
     * an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_ABN = m.createResource(NS + "AllergenTypeCode-ABN");

    /**
     * <p>Refers to the presence of Crustaceans and its derivates in the product - Family/Genus/Species:
     * (Subphylum: Crustacea)/(various) - Also known as: (various) - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_AC = m.createResource(NS + "AllergenTypeCode-AC");

    /**
     * <p>Refers to the presence of Carp and its derivatives in the product. - Family/Genus/Species:
     * Cyprinidae /Cyprinus/(various) - Also known as: Banded Carpet Shell, Bighead
     * Carp, Black Carp, Blue Morwong, Carp, Common Carp, Crucian Carp, Giant Barb,
     * Golden Carpet Shell, Grass Carp, Grooved Carpet Shell, Large Razorbelly Minnow,
     * Mola Carplet, Mottled Grouper, Mrigal, Mud Carp, Quillback, Reba Carp, River
     * Carpsucker, Rockfish, Rudd, Silver Carp, Small Scaled Mud Carp, Smooth Nylon
     * Shrimp, Ziege - Disclaimer: Refers to the presence of the allergen in the
     * product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_ACP = m.createResource(NS + "AllergenTypeCode-ACP");

    /**
     * <p>Refers to the presence of 3-Amino-2,4-dichlorophenol in the product. - CAS
     * Registry Number: 61693-42-3 - Also known as: - Disclaimer: Refers to the presence
     * of the allergen in the product, as listed in the regulations specified by
     * an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_AD = m.createResource(NS + "AllergenTypeCode-AD");

    /**
     * <p>Refers to the presence of Bass and its derivatives in the product. - Family/Genus/Species:
     * Percichthyidae Macquaria novemaculeata/Serranidae Centropristis striata/Nototheniidae
     * Dissostichus eleginoides/Polyprionidae Stereolepis gigas - Also known as:
     * Akamutsu, Antarctic Toothfish, Argentine Sea Bass, Atlantic Creolefish, Bank
     * Sea Bass, Barred Sand Bass, Black Crappie, Black Sea Bass, Blackfin Seabass,
     * Blackmouth Bass, Blacktip Grouper, Choctaw Bass, Common Name, European Sea
     * Bass, European Seabass, Giant Perch, Giant Sea Bass, Guadalupe Bass, Hapuka,
     * Himalayan Glassy Perchlet, Japanese SeabassLargemouth Bass, Japanese Seaperch,
     * Kelp Bass, Largemouth Bass, Longtail Bass, Meagre, Murray Cod, Northern Rockfish,
     * Oscar, Ozark Bass, Pacific Creolefish, Palmetto Bass, Patagonian Toothfish,
     * Peacock Cichlid, Peruvian Sea Bass, Red Drum, Roanoke Bass, Rock Bass, Rock
     * Sea Bass, Sea Bass, Shortfin Corvina, Smallmouth Bass, Splittail Bass, Spotted
     * Bass, Spotted Grouper, Spotted Sand Bass, Striped Bass, Sunshine Bass, Suwannee
     * Bass, Tripletail, Warmouth, White Bass, White Crappie, White Seabass, Wreckfish,
     * Yellow Bass - Disclaimer: Refers to the presence of the allergen in the product,
     * as listed in the regulations specified by an agency and specification or any
     * local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_ADB = m.createResource(NS + "AllergenTypeCode-ADB");

    /**
     * <p>Refers to the presence of Anchovies and its derivatives in the product. -
     * Family/Genus/Species: Engraulidae/(various) - Also known as: Anchoveta, Anchovy,
     * Bay Anchovy, Deepbody Anchovy, Dusky Anchovy, European Anchovy, Flat Anchovy,
     * Japanese Anchovy, Key Anchovy, Moustached Thryssa, New Jersey Anchovy, Northern
     * Anchovy, Ramcarat Grenadier Anchovy, Round Headed Anchovy, Silver Anchovy,
     * Slough Anchovy, Southern Anchovy, Striped Anchovy, Teri Anchovy - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_ADC = m.createResource(NS + "AllergenTypeCode-ADC");

    /**
     * <p>Refers to the presence of Catfish and its derivatives in the product. - Family/Genus/Species:
     * (various) - Also known as: Asian Redtail Catfish, Atlantic Wolffish, Bagrid
     * Catfish, Bagrid Catfishes, Black Bullhead, Blue Catfish, Broadhead Catfish,
     * Brown Bullhead, Catfish, Channel Catfish, Couma Sea Catfish, Crucifix Sea
     * Catfish, Flathead Catfish, Flatwhiskered Catfish, Gafftopsail Catfish, Giant
     * Catfish, Giant River Catfish, Gilded Catfish, Gillbacker Sea Catfish, Glass
     * Catfishes, Hardhead Catfish, Hardhead Sea Catfish, Highwaterman Catfish, Hybrid
     * Clarias Catfish, Large Spotted Dogfish, Long Whiskered Catfish, Mekong Giant
     * Catfish, Northern Wolffish, Pabdah Catfish, Pemecou Sea Catfish, Sharptooth
     * Catfish, Spotted Stargazer, Spotted Wolffish, Stinging Catfish, Striped Dwarf
     * Catfish, Sucker Catfishes, Sutchi Catfish, Tiger Sorubim, Walking Catfish,
     * Wels Catfish, White Catfish, Yaqui Catfish, Yellowtail Catfish - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_ADE = m.createResource(NS + "AllergenTypeCode-ADE");

    /**
     * <p>Refers to the presence of Cod and its derivatives in the product. - Family/Genus/Species:
     * Gadidae/Gadus/(various) - Also known as: Arctic Cod, Atlantic Cod, Blue Antimora,
     * Common Mora, Greenland Cod, Longfin Codling, Maori Cod, Northern Bastard Codling,
     * Pacific Cod, Polar Cod, Red Cod, Rock Cod, Saffron Cod, Tadpole Mora, Toothed
     * Cod - Disclaimer: Refers to the presence of the allergen in the product, as
     * listed in the regulations specified by an agency and specification or any
     * local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_ADF = m.createResource(NS + "AllergenTypeCode-ADF");

    /**
     * <p>Refers to the presence of Flounder and its derivatives in the product. - Family/Genus/Species:
     * Achiropsettidae or Bothidae or Pleuronectidae or Paralichthyidae or Samaridae/(various)
     * - Also known as: Arctic Flounder, Arrowtooth Flounder, Bering Flounder, Bigmouth
     * Flounder, Black Flounder, Blackback, Brill, Broad Flounder, California Flounder,
     * Common Dab, Cortez Halibut, European Flounder, Eyed Flounder, Fivespot Flounder,
     * Fluke, Fourspot Flounder, Fourspot Megrim, Greenback Flounder, Gulf Flounder,
     * Indian Ocean Spiny Halibut, Kamchatka Flounder, Largetoothed Flounder, Longhead
     * Dab, Megrim, Mexican Flounder, New Zealand Brill, Olive Flounder, Panther
     * Flounder, Patagonian Flounder, Peacock Flounder, Pelican Flounder, Sand Flounder,
     * Slime Flounder, Smalleye Flounder, Smalltoothed Flounder, Sohachi Flounder,
     * Southern Flounder, Speckled Flounder, Starry Flounder, Summer Flounder, Three-eye
     * Flounder, Threespot Righteye Flounder, Tropical Flounder, Windowpane, Winter
     * Flounder, Witch, Witch Flounder, Yellowbelly Flounder, Yellowtail Flounder
     * - Disclaimer: Refers to the presence of the allergen in the product, as listed
     * in the regulations specified by an agency and specification or any local market
     * regulations.</p>
     */
    public static final Resource AllergenTypeCode_ADG = m.createResource(NS + "AllergenTypeCode-ADG");

    /**
     * <p>Refers to the presence of Grouper and its derivatives in the product. - Family/Genus/Species:
     * Serranidae subfamily Epinephelina/(various) - Also known as: Banded Grouper,
     * Black Grouper, Blacktip Grouper, Bridled Grouper, Broomtail Grouper, Brownspotted
     * Rockcod, Camouflage Grouper, Chevron Tailed Grouper, Comb Grouper, Comet Grouper,
     * Coney, Coral Hind, Dot-dash Grouper, Dusky Grouper, Dusty Tail Grouper, Gag,
     * Giant Grouper, Goliath, Graysby, Greasy Rockcod, Grouper, Gulf Coney, Gulf
     * Grouper, Halfmoon Grouper, Hawaiian Grouper, Highfin Grouper, Hong Kong Grouper,
     * Leopard Coralgrouper, Longspine Grouper, Malabar Grouper, Marbled Grouper,
     * Misty Grouper, Mottled Grouper, Nassau Grouper, Netfin Grouper, Oblique-banded
     * Grouper, Orange-spotted Grouper, Persian Grouper, Purplespotted Grouper, Red
     * Grouper, Red Hind, Redmouth Grouper, Sabah Grouper, Sand Perch, Scamp, Sixbar
     * Grouper, Slender Grouper, Snowy Grouper, Snubnose Grouper, Speckled Blue Grouper,
     * Speckled Dwarf Grouper, Spinycheek Grouper, Spotted Grouper, Squaretail Coralgrouper,
     * Starspotted Grouper, Star-studded grouper, Strawberry Hind, Striped Grouper,
     * Tiger Grouper, Tomato Hind, Warsaw Grouper, Wavy Lined Grouper, White Grouper,
     * White-blotched Grouper, Yellowedge Grouper, Yellow-edged Lyretail, Yellowfin
     * Grouper, Yellowmouth Grouper - Disclaimer: Refers to the presence of the allergen
     * in the product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_ADH = m.createResource(NS + "AllergenTypeCode-ADH");

    /**
     * <p>Refers to the presence of Haddock and its derivatives in the product. - Family/Genus/Species:
     * Gadidae/Melanogrammus/Melanogrammus aeglefinus - Also known as: - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_ADI = m.createResource(NS + "AllergenTypeCode-ADI");

    /**
     * <p>Refers to the presence of Hake and its derivatives in the product. - Family/Genus/Species:
     * Merlucciidae or Phycidae or Gadidae subfamily Phycinae/(various) - Also known
     * as: Argentine hake, Benguela hake, Brazilian Hake, Carolina Hake, Deep-water
     * hake, European hake, Gayi hake, Gulf Hake, Longfin Hake, North Pacific hake,
     * Offshore hake, Panama hake, Red Hake, Senegalese hake, Shallow-water hake,
     * Silver hake, Southern Hake, Southern hake, Spotted Hake, White Hake - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_ADJ = m.createResource(NS + "AllergenTypeCode-ADJ");

    /**
     * <p>Refers to the presence of Halibut and its derivatives in the product. - FFamily/Genus/Species:
     * Pleuronectidae/Hippoglossus/Hippoglossus hippoglossus or Hippoglossus stenolepis
     * or Reinhardtius hippoglossoides - Also known as: Atlantic Halibut, Pacific
     * Halibut, Greenland Halibut - Disclaimer: Refers to the presence of the allergen
     * in the product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_ADK = m.createResource(NS + "AllergenTypeCode-ADK");

    /**
     * <p>Refers to the presence of Herring and its derivatives in the product. - Family/Genus/Species:
     * Clupeidae/Clupea/(various) - Also known as: African Ilisha, Araucanian herring,
     * Atlantic Herring, Atlantic Thread Herring, Bigeye Ilisha, Blackstripe herring,
     * Blueback Herring, Day's round herring, Deepbody Thread Herring, Denticle herring,
     * Dogtooth herring, Dwarf round herring, Flatiron Herring, Galapagos thread
     * herring, Gilchrist's round herring, Graceful herring, Indian Ilisha, Indian
     * Pellona, Javan Ilisha, Little-eye round herring, Middling thread herring,
     * Pacific Flatiron herring, Pacific Herring, Pacific thread herring, Panamanian
     * Ilisha, Pugnose Ilisha, Red-eye round herring, Round Herring, Sanaga pygmy
     * herring, Silver Darlings, Silver-stripe round herring, Skipjack Herring, Slender
     * thread herring, Striped herring, Tardoore, Toothed river herring, Two-finned
     * round herring, Venezuelan herring, West African pygmy herring, Whitehead's
     * round herring - Disclaimer: Refers to the presence of the allergen in the
     * product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_ADL = m.createResource(NS + "AllergenTypeCode-ADL");

    /**
     * <p>Refers to the presence of Mahi Mahi and its derivatives in the product. -
     * Family/Genus/Species: Coryphaenidae/Coryphaena/C. hippurus - Also known as:
     * Mahi, Mahi-Mahi, Common Dolphinfish, Dorado, Pompano Dolphin - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_ADM = m.createResource(NS + "AllergenTypeCode-ADM");

    /**
     * <p>Refers to the presence of Pike and its derivatives in the product. - Family/Genus/Species:
     * Esocidae/Esox/(various) - Also known as: Pike, Pickerel, American Pickerel,
     * Amur Pike, Aquitanian Pike, Chain Pickerel, Muskellunge, Northern Pike, Southern
     * Pike, Grass Pike - Disclaimer: Refers to the presence of the allergen in the
     * product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_ADP = m.createResource(NS + "AllergenTypeCode-ADP");

    /**
     * <p>Refers to the presence of Pollock and its derivatives in the product. - Family/Genus/Species:
     * Gadidae/Pollachius/Pollachius pollachius or Pollachius virens - Also known
     * as: Atlantic pollock, European pollock, Lieu Jaune, Lythe, Boston Blue, Silver
     * Bill, Saithem Pollock, Pollack, Coley, Coalfish, Walleye Pollock - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_ADQ = m.createResource(NS + "AllergenTypeCode-ADQ");

    /**
     * <p>Refers to the presence of Salmon and its derivatives in the product. - Family/Genus/Species:
     * Salmonidae subfamily Salmoninae/(various) - Also known as: Atlantic salmon,
     * Chinook salmon, Chum salmon, Coho salmon, Masu salmon, Pacific Salmon, Pink
     * salmon, Sockeye salmon - Disclaimer: Refers to the presence of the allergen
     * in the product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_ADR = m.createResource(NS + "AllergenTypeCode-ADR");

    /**
     * <p>Refers to the presence of Snapper and its derivatives in the product. - Family/Genus/Species:
     * Lutjanidae/(various) - Also known as: African Forktail Snapper, Amarillo Snapper,
     * Black and White Snapper, Black Snapper, Blackfin Snapper, Blacktail Snapper,
     * Bloodred Snapper, Blubberlip Snapper, Bluestriped Snapper, Cardinal Snapper,
     * Caribbean Red Snapper, Chinamanfish, Colorado Snapper, Crimson Jobfish, Crimson
     * Snapper, Cubera Snapper, Cunera Snapper, Dog Snapper, Emperor Snapper, Five-lined
     * Snapper, Goldbanded Jobfish, Golden Snapper, Goldeneye Jobfish, Gold-striped
     * Snapper, Gray Snapper, Green Jobfish, Humpback Snapper, John's Snapper, Lane
     * Snapper, Lavender Jobfish, Mahogany Snapper, Malabar Snapper, Mangrove Red
     * Snapper, Midnight Snapper, Mullet Snapper, Mutton Snapper, Oblique-banded
     * Snapper, Onespot Snapper, Pacific Dog Snapper, Pacific Snapper, Pinjalo, Pink
     * Snapper, Queen Snapper, Red Snapper, Rose Snapper, Ruby Snapper, Rufous Snapper,
     * Rusty Jobfish, Saddleback Snapper, Sailfin Snapper, Sharptooth Jobfish, Silk
     * Snapper, Smalltooth Jobfish, Snapper, Twinspot Snapper, Vermilion Snapper,
     * Wenchman, Yellowstripe Snapper, Yellowtail Blue Snapper, Yellowtail Snapper
     * - Disclaimer: Refers to the presence of the allergen in the product, as listed
     * in the regulations specified by an agency and specification or any local market
     * regulations.</p>
     */
    public static final Resource AllergenTypeCode_ADS = m.createResource(NS + "AllergenTypeCode-ADS");

    /**
     * <p>Refers to the presence of Sole and its derivatives in the product. - Family/Genus/Species:
     * Soleidae or Achiridae or Cynoglossidae or Pleuronectidae/(various) - Also
     * known as: American Sole, Butter Sole, C-O Sole, Curlfin Sole, Deepsea Sole,
     * Double-lined Tonguesole, Dover Sole, English Sole, Fantail Sole, Flathead
     * Sole, Hogchoker, Lemon Sole, Milky Spotted Sole, Mud Sole, Naked Sole, Narrowbanded
     * Sole, New Zealand Lemon Sole, Northern Rock Sole, Oriental Sole, Pacific Dover,
     * Petrale Sole, Rex Sole, Roughscale Sole, Sand Sole, Scrawled Sole, Senegalese
     * Sole, Slender Sole, Sole, Solenette, Southern Rock Sole, Thickback Sole, Toungue
     * Sole, Tounguefish, West Coast Sole, Yellowfin Sole - Disclaimer: Refers to
     * the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_ADT = m.createResource(NS + "AllergenTypeCode-ADT");

    /**
     * <p>Refers to the presence of Swordfish and its derivatives in the product. -
     * FFamily/Genus/Species: Xiphiidae/Xiphias/X. gladius - Also known as: Swordfish,
     * Broadbill - Disclaimer: Refers to the presence of the allergen in the product,
     * as listed in the regulations specified by an agency and specification or any
     * local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_ADU = m.createResource(NS + "AllergenTypeCode-ADU");

    /**
     * <p>Refers to the presence of Tilapia and its derivatives in the product. - Family/Genus/Species:
     * Cichlidae/Talapia or Coptodon or Oreochormis or Sarotherodon/(various) - Also
     * known as: Talapia, Mozambique Talapia, Nile Talapia, Blue Talapia - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_ADV = m.createResource(NS + "AllergenTypeCode-ADV");

    /**
     * <p>Refers to the presence of Trout and its derivatives in the product. - Family/Genus/Species:
     * Salmonida subfamily Salmoninae/Oncorhynchus or Salmo or Salvelinus- Also known
     * as: Adriatic Trout, Alvord Cutthroat Trout, Apache Trout, Aurora Trout, Baja
     * California Rainbow Trout, Beardslee Trout, Biwa Trout, Bonneville Cutthroat
     * Trout, Brook Trout, Brown Trout, Bull Trout, Coastal Cutthroat Trout, Coastal
     * Rainbow Trout (steelhead), Colorado River Cutthroat Trout, Columbia River
     * Redband Trout, Crescenti Trout, Cutthroat Trout, Dolly Varden, Dolly Varden
     * Trout, Eagle Lake Trout, Flathead Trout, Genus Oncorhynchus, Gila Trout, Golden
     * Trout, Great Basin Redband Trout, Greenback Cutthroat Trout, Humboldt Cutthroat
     * Trout, Inconnu, Kamchatkan Rainbow Trout, Kamloops Rainbow Trout, Kern River
     * Rainbow Trout, Lacustrine Trout, Lahontan Cutthroat Trout, Lake Trout, Little
     * Kern Golden Trout, Marble Trout, McCloud River Redband Trout, Mexican Golden
     * Trout, Nelson's Trout, Ohrid Trout, Paiute Cutthroat Trout, Rainbow Trout,
     * Rio Grande Cutthroat Trout, River Trout, Sacramento Golden Trout, San Pedro
     * Martir Trout, Sea Trout, Sevan Trout, Sheepheaven Creek Redband Trout, Silver
     * Trout, Snake River Fine-spotted Cutthroat Trout, Soca River Trout, SoÄa Trout,
     * Speckled Lake (Splake) Trout, Tiger Trout, Trout, Westslope Cutthroat Trout,
     * Whitehorse Basin Cutthroat Trout, Yellowstone Cutthroat Trout - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_ADW = m.createResource(NS + "AllergenTypeCode-ADW");

    /**
     * <p>Refers to the presence of eggs and its derivates in the product - Family/Genus/Species:
     * - Also known as: Ovum - Disclaimer: Refers to the presence of the allergen
     * in the product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_AE = m.createResource(NS + "AllergenTypeCode-AE");

    /**
     * <p>Refers to the presence of Fish and its derivates in the product. - Family/Genus/Species:
     * (various) - Also known as: (various) - Disclaimer: Refers to the presence
     * of the allergen in the product, as listed in the regulations specified by
     * an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_AF = m.createResource(NS + "AllergenTypeCode-AF");

    /**
     * <p>Refers to the presence of Anise Alcohol in the product. - CAS Registry Number:
     * 105-13-5 - Also known as: anisyl alcohol - Disclaimer: Refers to the presence
     * of the allergen in the product, as listed in the regulations specified by
     * an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_AH = m.createResource(NS + "AllergenTypeCode-AH");

    /**
     * <p>Refers to the presence of Alpha-Isomethyl Ionone in the product. - CAS Registry
     * Number: 127-51-5 - Also known as: 3 Methyl-4-(2,6,6-trimethyl-2-cyclohexen-1-yl)-3-buten-2-on
     * - Disclaimer: Refers to the presence of the allergen in the product, as listed
     * in the regulations specified by an agency and specification or any local market
     * regulations.</p>
     */
    public static final Resource AllergenTypeCode_AI = m.createResource(NS + "AllergenTypeCode-AI");

    /**
     * <p>Refers to the presence of Amberjack and its Derivatives in the product. -
     * Family/Genus/Species: Carangidae/Seriola/(various) - Also known as: Amberjack,
     * Buri, Greater amberjack, Lesser amberjack, Almaco jack, Yellowtail, Banded
     * rudderfish - Disclaimer: Refers to the presence of the allergen in the product,
     * as listed in the regulations specified by an agency and specification or any
     * local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_AJF = m.createResource(NS + "AllergenTypeCode-AJF");

    /**
     * <p>Refers to the presence of Amyl Cinnamal in the product. - CAS Registry Number:
     * 122-40-7 - Also known as: alpha-amyl cinnamic aldehyde - Disclaimer: Refers
     * to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_AL = m.createResource(NS + "AllergenTypeCode-AL");

    /**
     * <p>Refers to the presence of almond and almond products as listed in the regulations
     * specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_ALMONDS = m.createResource(NS + "AllergenTypeCode-ALMONDS");

    /**
     * <p>Refers to the presence of Alpha-Isomethyl Ionone as listed in the regulations
     * specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_ALPHA_ISOMETHYL_IONONE = m.createResource(NS + "AllergenTypeCode-ALPHA_ISOMETHYL_IONONE");

    /**
     * <p>Refers to the presence of milk and its derivatives in the product, as listed
     * in in the product. - Family/Genus/Species: - Also known as: - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_AM = m.createResource(NS + "AllergenTypeCode-AM");

    /**
     * <p>Refers to the presence of Amylcinnamyl Alcohol as listed in the regulations
     * specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_AMYLCINNAMYL_ALCOHOL = m.createResource(NS + "AllergenTypeCode-AMYLCINNAMYL_ALCOHOL");

    /**
     * <p>Refers to the presence of Amyl Cinnamal as listed in the regulations specified
     * in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_AMYL_CINNAMAL = m.createResource(NS + "AllergenTypeCode-AMYL_CINNAMAL");

    /**
     * <p>Refers to the presence of Tree nuts or nuts and its derivatives in the product.
     * - Family/Genus/Species: Fagales. - Also known as: Nuts - Disclaimer: Refers
     * to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_AN = m.createResource(NS + "AllergenTypeCode-AN");

    /**
     * <p>Refers to the presence of anchovies and their derivatives in the product,
     * as listed as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_ANCHOVY = m.createResource(NS + "AllergenTypeCode-ANCHOVY");

    /**
     * <p>Refers to the presence of Anise Alcohol as listed in the regulations specified
     * in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_ANISE_ALCOHOL = m.createResource(NS + "AllergenTypeCode-ANISE_ALCOHOL");

    /**
     * <p>Refers to the presence of Perch and its derivatives in the product. - Family/Genus/Species:
     * Percidae subfamily Percinae/Perca/(various) - Also known as: Acadian Redfish,
     * Argentinian Sandperch, Barred Surfperch, Black Surfperch, Blue Cod, Calico
     * Surfperch, Chilean Sandperch, Climbing Perch, Deepwater Redfish, Eurasian
     * Perch, Golden Perch, Golden Redfish, Grass Goby, Namorado Sandperch, Nile
     * Perch, Norway Redfish, Pacific Ocean Perch, Painted Comber, Pile Perch, Redtail
     * Surfperch, Rockfish, Rubberlip Seaperch, Sandperch, Sauger, Shiner Surfperch,
     * Silver Perch, Striped Surfperch, Thicktail Cardinalfish, Volga Pikeperch,
     * Walleye Surfperch, White Perch, Yellow Perch, Zander, Zebra Perch - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_ANO = m.createResource(NS + "AllergenTypeCode-ANO");

    /**
     * <p>Refers to the presence of Peanuts and its derivatives in the product. - Family/Genus/Species:
     * Arachis hypogaea. - Also known as: Groundnut, Goober, Pindar, Monkey nut.
     * - Disclaimer: Refers to the presence of the allergen in the product, as listed
     * in the regulations specified by an agency and specification or any local market
     * regulations.</p>
     */
    public static final Resource AllergenTypeCode_AP = m.createResource(NS + "AllergenTypeCode-AP");

    /**
     * <p>Refers to the presence of Apple and its derivatives in the product. - Family/Genus/Species:
     * Malus domestica. - Also known as: - Disclaimer: Refers to the presence of
     * the allergen in the product, as listed in the regulations specified by an
     * agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_APL = m.createResource(NS + "AllergenTypeCode-APL");

    /**
     * <p>Refers to the presence of Sesame seeds or its derivatives in the product,
     * as listed in in the product - Family/Genus/Species: Sesamum. - Also known
     * as: - Disclaimer: Refers to the presence of the allergen in the product, as
     * listed in the regulations specified by an agency and specification or any
     * local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_AS = m.createResource(NS + "AllergenTypeCode-AS");

    /**
     * <p>Refers to the presence of Aspartame and Aspartame-acesulfame salt in the product.
     * - CAS Registry Number: 22839-47-0 - Also known as: - Disclaimer: Refers to
     * the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_ASD = m.createResource(NS + "AllergenTypeCode-ASD");

    /**
     * <p>Refers to the presence of sulfur dioxide and sulfits in the product. - CAS
     * Registry Number: 7446-09-5 - Also known as: - Disclaimer: Refers to the presence
     * of the allergen in the product, as listed in the regulations specified by
     * an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_AU = m.createResource(NS + "AllergenTypeCode-AU");

    /**
     * <p>Refers to the presence of cereal grains containing gluten (protein) and their
     * derivatives in the product. Includes wheat grains, grains that have been demonstrated
     * capable of triggering celiac disease (such as common wheat, durum, spelt,
     * khorasan, emmer and einkorn), barley, rye and oats as well as any cross hybrids
     * of these grains (such as triticale). -Family/Genus/Species: Poaceae/Gramineae.
     * - Also known as: Grasses, Grains. - Disclaimer: Refers to the presence of
     * the allergen in the product, as listed in the regulations specified by an
     * agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_AW = m.createResource(NS + "AllergenTypeCode-AW");

    /**
     * <p>Refers to the presence of Whitefish and its derivatives in the product. -
     * Family/Genus/Species: (various) - Also known as: Humpback Whitefish, Lake
     * Whitefish, Round Whitefish, Whitefish - Disclaimer: Refers to the presence
     * of the allergen in the product, as listed in the regulations specified by
     * an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_AWF = m.createResource(NS + "AllergenTypeCode-AWF");

    /**
     * <p>Refers to the presence of Soybean and its derivatives in the product, as listed
     * in in the product. - Family/Genus/Species: Glycine max. - Also known as: Soya
     * bean - Disclaimer: Refers to the presence of the allergen in the product,
     * as listed in the regulations specified by an agency and specification or any
     * local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_AY = m.createResource(NS + "AllergenTypeCode-AY");

    /**
     * <p>Refers to the presence of Benzyl Alcohol in the product. - CAS Registry Number:
     * 100-51-6 - Also known as: - Disclaimer: Refers to the presence of the allergen
     * in the product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_BA = m.createResource(NS + "AllergenTypeCode-BA");

    /**
     * <p>Refers to the presence of Barley and barley products (gluten containing grain)
     * as listed in the regulations specified in AllergenSpecificationAgency and
     * AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_BARLEY = m.createResource(NS + "AllergenTypeCode-BARLEY");

    /**
     * <p>Refers to the presence of Barnacles and their derivatives in the product,
     * as listed as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_BARNACLE = m.createResource(NS + "AllergenTypeCode-BARNACLE");

    /**
     * <p>Refers to the presence of Basa and its derivates in the product. - Family/Genus/Species:
     * Pangasiidae/Pangasius/P. bocourti - Also known as: Basa, Basa Fish, Bocourti,
     * Pangasius, Panga, Pacific Dory, River Cobbler, Swai - Disclaimer: Refers to
     * the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_BAS = m.createResource(NS + "AllergenTypeCode-BAS");

    /**
     * <p>Refers to the presence of Basa and its derivatives in the product, as listed
     * in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_BASA = m.createResource(NS + "AllergenTypeCode-BASA");

    /**
     * <p>Refers to the presence of bass and their derivatives in the product, as listed
     * as listed in the regulations specified in AllergenSpecificationAgency and
     * AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_BASS = m.createResource(NS + "AllergenTypeCode-BASS");

    /**
     * <p>Refers to the presence of Benzyl Benzoate in the product. - CAS Registry Number:
     * 120-51-4 - Also known as: - Disclaimer: Refers to the presence of the allergen
     * in the product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_BB = m.createResource(NS + "AllergenTypeCode-BB");

    /**
     * <p>Refers to the presence of celery or its derivatives in the product, as listed
     * in in the product. - Family/Genus/Species: Apium graveolens. - Also known
     * as: - Disclaimer: Refers to the presence of the allergen in the product, as
     * listed in the regulations specified by an agency and specification or any
     * local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_BC = m.createResource(NS + "AllergenTypeCode-BC");

    /**
     * <p>Refers to the presence of 2 (4-tert-Butylbenzyl) in the product. - CAS Registry
     * Number: 80-54-6 - Also known as: Butylphenyl Methylpropional - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_BE = m.createResource(NS + "AllergenTypeCode-BE");

    /**
     * <p>Refers to the presence of Beech nuts [Fagus spp. (Fagaceae)] and their derivatives
     * in the product, as listed as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_BEECH_NUTS = m.createResource(NS + "AllergenTypeCode-BEECH_NUTS");

    /**
     * <p>Refers to the presence of beef and its derivative in the product, as listed
     * in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_BEEF = m.createResource(NS + "AllergenTypeCode-BEEF");

    /**
     * <p>Refers to the presence of Benzyl Alcohol as listed in the regulations specified
     * in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_BENZYL_ALCOHOL = m.createResource(NS + "AllergenTypeCode-BENZYL_ALCOHOL");

    /**
     * <p>Refers to the presence of Benzyl Benzoate as listed in the regulations specified
     * in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_BENZYL_BENZOATE = m.createResource(NS + "AllergenTypeCode-BENZYL_BENZOATE");

    /**
     * <p>Refers to the presence of Benzyl Cinnamate as listed in the regulations specified
     * in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_BENZYL_CINNAMATE = m.createResource(NS + "AllergenTypeCode-BENZYL_CINNAMATE");

    /**
     * <p>Refers to the presence of Benzyl Salicylate as listed in the regulations specified
     * in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_BENZYL_SALICYLATE = m.createResource(NS + "AllergenTypeCode-BENZYL_SALICYLATE");

    /**
     * <p>Refers to the presence of beef and its derivative in the product, in the product
     * - Family/Genus/Species: Bos taurus Linnaeus - Also known as: - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_BF = m.createResource(NS + "AllergenTypeCode-BF");

    /**
     * <p>Refers to the presence of Butterfish and its Derivatives in the product. -
     * Family/Genus/Species: Stromateidae/Pampus or Peprilus or Stromateus/(various)
     * - Also known as: Black Butterfish, Greenbone, Silver Pomfret, White Pomfret,
     * Gulf Butterfish, Harvestfish, Pacific Pompano, Butterfish, Southwest Atlantic
     * ButterfishCommon Name - Disclaimer: Refers to the presence of the allergen
     * in the product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_BFD = m.createResource(NS + "AllergenTypeCode-BFD");

    /**
     * <p>Refers to the presence of Bonito and its Derivatives in the product. - Family/Genus/Species:
     * Scombridae subfamily: Scombrinae/Cybiosarda or Gymnosarda Gill or Orcynopsis
     * Gill or Sarda/(various) - Also known as: Australian Bonito, Dogtooth Tuna,
     * Leaping Bonito, Pacific Bonito, Plain Bonito, Striped Bonito - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_BFH = m.createResource(NS + "AllergenTypeCode-BFH");

    /**
     * <p>Refers to the presence of Benzyl Cinnamate in the product. - CAS Registry
     * Number: 103-41-3 - Also known as: - Disclaimer: Refers to the presence of
     * the allergen in the product, as listed in the regulations specified by an
     * agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_BI = m.createResource(NS + "AllergenTypeCode-BI");

    /**
     * <p>Refers to the presence of Bluefish and its derivates in the product. - Family/Genus/Species:
     * Pomatomidae/Pomatomus/P. saltatrix - Also known as: Bluefish, Elf, Shad, Tailor,
     * Black Sea Bass, Shortfin Corvina, Opaleye, Rudderfish, Pollock - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_BLF = m.createResource(NS + "AllergenTypeCode-BLF");

    /**
     * <p>Refers to the presence of Bluefish and its derivatives in the product, as
     * listed in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_BLUEFISH = m.createResource(NS + "AllergenTypeCode-BLUEFISH");

    /**
     * <p>Refers to the presence of Mustard or its derivatives in the product, as listed
     * in in the product. - Family/Genus/Species: Brassicaceae. - Also known as:
     * - Disclaimer: Refers to the presence of the allergen in the product, as listed
     * in the regulations specified by an agency and specification or any local market
     * regulations.</p>
     */
    public static final Resource AllergenTypeCode_BM = m.createResource(NS + "AllergenTypeCode-BM");

    /**
     * <p>Refers to the presence of Isoeugenol in the product - CAS Registry Number:
     * 97-54-1 - Also known as: - Disclaimer: Refers to the presence of the allergen
     * in the product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_BN = m.createResource(NS + "AllergenTypeCode-BN");

    /**
     * <p>Refers to the presence of Banana and its derivatives in the product. - Family/Genus/Species:
     * Musa. - Also known as: - Disclaimer: Refers to the presence of the allergen
     * in the product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_BND = m.createResource(NS + "AllergenTypeCode-BND");

    /**
     * <p>Refers to the presence of d-Limonene in the product - CAS Registry Number:
     * 5989-27-5 - Also known as: - Disclaimer: Refers to the presence of the allergen
     * in the product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_BO = m.createResource(NS + "AllergenTypeCode-BO");

    /**
     * <p>Refers to the presence of Linalool in the product - CAS Registry Number: 78-70-6
     * - Also known as: - Disclaimer: Refers to the presence of the allergen in the
     * product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_BP = m.createResource(NS + "AllergenTypeCode-BP");

    /**
     * <p>Refers to the presence of Methyl 2-octynoate in the product - CAS Registry
     * Number: 111-12-6 - Also known as: 2-Octynoic acid, methyl ester, Folione,
     * Vert de violette, Methyl 2-octynate, Methyl pentylacetylenecarboxylate, NSC
     * 72098, Methyl Heptin Carbonate, Methyl oct-2-ynoate - Disclaimer: Refers to
     * the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_BQ = m.createResource(NS + "AllergenTypeCode-BQ");

    /**
     * <p>Refers to the presence of 1,3-Bis-(2,4-diaminophenoxy)propane in the product.
     * - CAS Registry Number: 81892-72-0 - Also known as: - Disclaimer: Refers to
     * the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_BR = m.createResource(NS + "AllergenTypeCode-BR");

    /**
     * <p>Refers to the presence of brazil nut and brazil nut products as listed in
     * the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_BRAZIL_NUTS = m.createResource(NS + "AllergenTypeCode-BRAZIL_NUTS");

    /**
     * <p>Refers to the presence of Barracuda and its Derivatives in the product. -
     * Family/Genus/Species: Sphyraenidae/Sphyraena/(various) - Also known as: Pacific
     * Barracuda, California Barracuda, Cuda, Barracouta, Barracuda, Great Barracuda,
     * Short Barracuda, Picuda, Japanese Barracuda, Pickhandle Barracuda - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_BRC = m.createResource(NS + "AllergenTypeCode-BRC");

    /**
     * <p>Refers to the presence of Bream and its derivatives in the product, as listed
     * in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_BREAM = m.createResource(NS + "AllergenTypeCode-BREAM");

    /**
     * <p>Refers to the presence of Bream and its derivates in the product. - Family/Genus/Species:
     * Cyprinidae sub. Leuciscinae/(various) - Also known as: Antarctic Butterfish,
     * Black Sweetlips, Bloodred Snapper, Bluegill, Blue-lined Large-eye Bream, Bogue,
     * Bream, Bronze Bream, Carp Bream, Common Bream, Common Pandora, Delagoa Threadfin
     * Bream, Fork-tailed Threadfin Bream, Freshwater Bream, Gilthead Bream, Golden
     * Redfish, Golden Tai, Golden Threadfin Bream, Humpnose Big-eye Bream, Japanese
     * Threadfin Bream, Longfin Tilapia, Long-spined Red Bream, Lowfinned Drummer,
     * Madai, Malabar Snapper, Margate, Mauvelip Threadfin Bream, Mozambique Large-eye
     * Bream, Pacific Pomfret, Pinfish, Pumpkinseed, Puntazzo, Red Bream, Red Porgy,
     * Redbreast Tilapia, Redear Sunfish, River Bream, Rock Flagtail, Sea Bream,
     * Southern Rays Bream, Squirefish, Taiwan Tai, Tarakihi, Threadfin Bream, Warmouth,
     * Western Australian Gizzard Shad - Disclaimer: Refers to the presence of the
     * allergen in the product, as listed in the regulations specified by an agency
     * and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_BRM = m.createResource(NS + "AllergenTypeCode-BRM");

    /**
     * <p>Refers to the presence of Benzyl Salicylate in the product. - CAS Registry
     * Number: 118-58-1 - Also known as: benzyl 2-hydroxybenzoate - Disclaimer: Refers
     * to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_BS = m.createResource(NS + "AllergenTypeCode-BS");

    /**
     * <p>Refers to the presence of Butternuts [Juglans cinerea (Juglandaceae)] and
     * their derivatives in the product, as listed as listed in the regulations specified
     * in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_BUTTERNUTS = m.createResource(NS + "AllergenTypeCode-BUTTERNUTS");

    /**
     * <p>Refers to the presence of Butylphenyl Methylpropionate as listed in the regulations
     * specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_BUTYLPHENYL_METHYLPROPIONATE = m.createResource(NS + "AllergenTypeCode-BUTYLPHENYL_METHYLPROPIONATE");

    /**
     * <p>Refers to the presence of buckwheat and its derivatives in the product. -
     * Family/Genus/Species: Fagopyrum. - Also known as: Common buckwheat, Tartary
     * buckwheat, Green buckwheat and Bitter buckwheat. - Disclaimer: Refers to the
     * presence of the allergen in the product, as listed in the regulations specified
     * by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_BWD = m.createResource(NS + "AllergenTypeCode-BWD");

    /**
     * <p>Refers to the presence of Cinnamyl Alcohol in the product. - CAS Registry
     * Number: 104-54-1 - Also known as: - Disclaimer: Refers to the presence of
     * the allergen in the product, as listed in the regulations specified by an
     * agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_CA = m.createResource(NS + "AllergenTypeCode-CA");

    /**
     * <p>Refers to the presence of Carp and their derivatives in the product, as listed
     * as listed in the regulations specified in AllergenSpecificationAgency and
     * AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_CARP = m.createResource(NS + "AllergenTypeCode-CARP");

    /**
     * <p>Refers to the presence of carrot and their derivatives in the product, as
     * listed in as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName</p>
     */
    public static final Resource AllergenTypeCode_CARROTS = m.createResource(NS + "AllergenTypeCode-CARROTS");

    /**
     * <p>Refers to the presence of cashew and cashew products as listed in the regulations
     * specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_CASHEW_NUTS = m.createResource(NS + "AllergenTypeCode-CASHEW_NUTS");

    /**
     * <p>Refers to the presence of catfish and their derivatives in the product, as
     * listed as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_CATFISH = m.createResource(NS + "AllergenTypeCode-CATFISH");

    /**
     * <p>Refers to the presence of celery or their derivatives in the product, as listed
     * in as listed in the regulations specified in AllergenSpecificationAgency and
     * AllergenSpecificationName</p>
     */
    public static final Resource AllergenTypeCode_CELERY = m.createResource(NS + "AllergenTypeCode-CELERY");

    /**
     * <p>Refers to the presence of Cereals containing gluten and their derivatives
     * in the product, as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName</p>
     */
    public static final Resource AllergenTypeCode_CEREALS_CONTAINING_GLUTEN = m.createResource(NS + "AllergenTypeCode-CEREALS_CONTAINING_GLUTEN");

    /**
     * <p>Refers to the presence of Cutlassfish and its Derivatives in the product.
     * - Family/Genus/Species: Trichiuridae/(various) - Also known as: Black Scabbardfish,
     * Silver Scabbardfish, Smallhead Hairtail, Atlantic Cutlassfish - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_CFD = m.createResource(NS + "AllergenTypeCode-CFD");

    /**
     * <p>Refers to the presence of Croaker and its Derivatives in the product. - Family/Genus/Species:
     * Sciaenidae/(various) - Also known as: Argentine Croaker, Atlantic Croaker,
     * Bearded Jewfish, Belanger's Croaker, Bigtooth Corvina, Black Croaker, Blackmouth
     * Croaker, Blackspotted Croaker, Blue Croaker, Bronze Croaker, Captainfish,
     * Cob, Croceine Croaker, Donkey Croaker, Flathead Captainfish, Giant Captainfish,
     * Gulf Corvina, Japanese Croaker, Meagre, Miiuy Croaker, Pama Croaker, Peruvian
     * Croaker, Redlip Croaker, Reef Croaker, Shortfin Corvina, Shortfin Weakfish,
     * Silver Croaker, Silver Croaker, Smalleye Croaker, Spotfin Croaker, Striped
     * Croaker, Tigertooth Croaker, White Croaker, Whitemouth Drummer, Yellowfin
     * Croaker, Donkey Croaker, Flathead Captainfish, Giant Captainfish, Gulf Corvina,
     * Japanese Croaker, Meagre, Miiuy Croaker, Pama Croaker, Peruvian Croaker, Redlip
     * Croaker, Reef Croaker, Shortfin Corvina, Shortfin Weakfish, Silver Croaker,
     * Silver Croaker, Smalleye Croaker, Spotfin Croaker, Striped Croaker, Tigertooth
     * Croaker, White Croaker, Whitemouth Drummer, Yellowfin Croaker - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_CFH = m.createResource(NS + "AllergenTypeCode-CFH");

    /**
     * <p>Refers to the presence of Char and its derivatives in the product, as listed
     * in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_CHAR = m.createResource(NS + "AllergenTypeCode-CHAR");

    /**
     * <p>Refers to the presence of Chub and its derivates in the product. - Family/Genus/Species:
     * Cyprinidae or Kyphosidae/(various) - Also known as: Atlantic Chub Mackerel,
     * Bermuda Chub, Bigeye chub, Chum Salmon, Creek Chub, European chub, Fallfish,
     * Flame chub, Flathead chub, Hornyhead chub, Kiyi, Lake chub, Largemouth Bass,
     * Least chub, Leatherside chub, Oregon chub, Pacific Chub Mackerel, Ponto-Caspian
     * chub, Rudderfish, Sea Chub, Slender chub, Spotted Chub Mackerel, Western chub,
     * Yellow Chub - Disclaimer: Refers to the presence of the allergen in the product,
     * as listed in the regulations specified by an agency and specification or any
     * local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_CHB = m.createResource(NS + "AllergenTypeCode-CHB");

    /**
     * <p>Refers to the presence of Chestnuts [Castanea spp. (Fagaceae)] and their derivatives
     * in the product, as listed as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_CHESTNUTS = m.createResource(NS + "AllergenTypeCode-CHESTNUTS");

    /**
     * <p>Refers to the presence of chicken meat and its derivative in the product,
     * as listed in the regulations specified in AllergenSpecificationAgency and
     * AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_CHICKEN_MEAT = m.createResource(NS + "AllergenTypeCode-CHICKEN_MEAT");

    /**
     * <p>Refers to the presence of Chinquapins [Castanea pumila (Fagaceae)] and their
     * derivatives in the product, as listed as listed in the regulations specified
     * in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_CHINQUAPINS = m.createResource(NS + "AllergenTypeCode-CHINQUAPINS");

    /**
     * <p>Refers to the presence of Char and its derivates in the product. - Family/Genus/Species:
     * Salmonidae/Salmoninae/Salvelinus - Also known as: Char, Charr, Artic Char,
     * Lake Char, Golden Char, Cole's Char, Coomsaharn Char, Gray's Char, Blunt-snouted
     * Irish Char, Bear Island Char, Alsatian Char, Angayukaksurak Char, Boganida
     * Char, Cherskii's Char, Chukot Char, Dryagin's Char, Kirikuchi Char, Lake Yessey
     * Char, Long-finned Char, Sakhalinian Char, Small-mouth Char, Southern Dolly
     * Varden Char, Taranets Char, White Char, Whitespotted Char, Yakutian Char -
     * Disclaimer: Refers to the presence of the allergen in the product, as listed
     * in the regulations specified by an agency and specification or any local market
     * regulations.</p>
     */
    public static final Resource AllergenTypeCode_CHR = m.createResource(NS + "AllergenTypeCode-CHR");

    /**
     * <p>Refers to the presence of Chub and its derivatives in the product, as listed
     * in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_CHUB = m.createResource(NS + "AllergenTypeCode-CHUB");

    /**
     * <p>Refers to the presence of Cinnamal as listed in the regulations specified
     * in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_CINNAMAL = m.createResource(NS + "AllergenTypeCode-CINNAMAL");

    /**
     * <p>Refers to the presence of Cinnamyl Alcohol as listed in the regulations specified
     * in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_CINNAMYL_ALCOHOL = m.createResource(NS + "AllergenTypeCode-CINNAMYL_ALCOHOL");

    /**
     * <p>Refers to the presence of Cisco and its derivatives in the product, as listed
     * in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_CISCO = m.createResource(NS + "AllergenTypeCode-CISCO");

    /**
     * <p>Refers to the presence of Citral as listed in the regulations specified in
     * AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_CITRAL = m.createResource(NS + "AllergenTypeCode-CITRAL");

    /**
     * <p>Refers to the presence of Citronellol as listed in the regulations specified
     * in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_CITRONELLOL = m.createResource(NS + "AllergenTypeCode-CITRONELLOL");

    /**
     * <p>Refers to the presence of Cusk and its Derivatives in the product. - Family/Genus/Species:
     * Lotidae/Brosme/brosme - Also known as: Cusk, Tusk, Torsk, European Cusk, Brosmius
     * - Disclaimer: Refers to the presence of the allergen in the product, as listed
     * in the regulations specified by an agency and specification or any local market
     * regulations.</p>
     */
    public static final Resource AllergenTypeCode_CKF = m.createResource(NS + "AllergenTypeCode-CKF");

    /**
     * <p>Refers to the presence of Cinnamal in the product. - CAS Registry Number:
     * 104-55-2 - Also known as: cinnamaldehyde - Disclaimer: Refers to the presence
     * of the allergen in the product, as listed in the regulations specified by
     * an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_CL = m.createResource(NS + "AllergenTypeCode-CL");

    /**
     * <p>Refers to the presence of Clam and its derivatives in the product, as listed
     * in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_CLAM = m.createResource(NS + "AllergenTypeCode-CLAM");

    /**
     * <p>Refers to the presence of Clam and its derivates in the product. - Family/Genus/Species:
     * (various) - Also known as: Alaska Razor, Arctic Surfclam, Asian Clam, Atlantic
     * Geoduck, Atlantic Jackknife, Atlantic Razor, Atlantic Sanguin, Atlantic Surfclam,
     * Banded Carpet Shell, Bent Surfclam, Bentnose Macoma, Butter Clam, Calico Clam,
     * California Surfclam, California Tagelus, California Venus, Caribbean Winged
     * Surfclam, Dish Surfclam, Fat Gaper, Flat Surfclam, Fragile Surfclam, Freshwater
     * Clam, Frilled Venus, Golden Carpet Shell, Grand Razor Shell, Green Jackknife,
     * Grooved Carpet Shell, Grooved Razor, Hard Clam, Hardshell Clam, Hatchet Surfclam,
     * Hemphill Surfclam, Hen Clam, Hooked Surfclam, Jackknife Clam, Japanese Littleneck
     * Clam, Littleneck Clam, Lyrate Hard Clam, Mogai Clam, New Zealand Wedge Clam,
     * Northern Razor, Pacific Gaper, Pacific Geoduck, Pacific Littleneck Clam, Pipi
     * Clam, Pismo Clam, Pod Razor, Razor Shell Clam, Rosy Jackknife, Shortneck Clam,
     * Smooth Venus, Softshell Clam, Solid Sanguin Clam, Stout Tagelus, Sunray Venus,
     * Sword Razor, Thin-shell Littleneck Clam, Washington Clam - Disclaimer: Refers
     * to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_CLM = m.createResource(NS + "AllergenTypeCode-CLM");

    /**
     * <p>Refers to the presence of chicken meat and its derivative in the product,
     * in the product - Family/Genus/Species: Gallus domesticus - Also known as:
     * - Disclaimer: Refers to the presence of the allergen in the product, as listed
     * in the regulations specified by an agency and specification or any local market
     * regulations.</p>
     */
    public static final Resource AllergenTypeCode_CM = m.createResource(NS + "AllergenTypeCode-CM");

    /**
     * <p>Refers to the presence of Citronellol in the product. - Family/Genus/Species:
     * - Also known as: - Disclaimer: Refers to the presence of the allergen in the
     * product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_CN = m.createResource(NS + "AllergenTypeCode-CN");

    /**
     * <p>Refers to the presence of Coumarin in the product. - Family/Genus/Species:
     * - Also known as: - Disclaimer: Refers to the presence of the allergen in the
     * product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_CO = m.createResource(NS + "AllergenTypeCode-CO");

    /**
     * <p>Refers to the presence of Cockle and its derivatives in the product, as listed
     * in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_COCKLE = m.createResource(NS + "AllergenTypeCode-COCKLE");

    /**
     * <p>Refers to the presence of cocoa and their derivatives in the product, as listed
     * in as listed in the regulations specified in AllergenSpecificationAgency and
     * AllergenSpecificationName</p>
     */
    public static final Resource AllergenTypeCode_COCOA = m.createResource(NS + "AllergenTypeCode-COCOA");

    /**
     * <p>Refers to the presence of Coconuts [Cocos (Arecaceae)] and their derivatives
     * in the product, as listed as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_COCONUTS = m.createResource(NS + "AllergenTypeCode-COCONUTS");

    /**
     * <p>Refers to the presence of Cod and their derivatives in the product, as listed
     * as listed in the regulations specified in AllergenSpecificationAgency and
     * AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_COD = m.createResource(NS + "AllergenTypeCode-COD");

    /**
     * <p>Refers to the presence of Cockle and its derivates in the product. - Family/Genus/Species:
     * Cardiidae/(various) - Also known as: Atlantic Giant Cockle, Bittersweet, Blood
     * Cockle, California Cockle, Common Cockle, Decussate Bittersweet, Dock Cockle,
     * Greenland Cockle, Knotted Cockle, New Zealand Cockle, Spiny Cockle, Violet
     * Bittersweet - Disclaimer: Refers to the presence of the allergen in the product,
     * as listed in the regulations specified by an agency and specification or any
     * local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_COK = m.createResource(NS + "AllergenTypeCode-COK");

    /**
     * <p>Refers to the presence of Conch and its derivates in the product. - Family/Genus/Species:
     * Strombidae/(various) - Also known as: Conch, Florida Fighting Conch, Horse
     * Conch, Milk Conch, Queen Conch, Spider Conch, West Indian Fighting Conch -
     * Disclaimer: Refers to the presence of the allergen in the product, as listed
     * in the regulations specified by an agency and specification or any local market
     * regulations.</p>
     */
    public static final Resource AllergenTypeCode_CON = m.createResource(NS + "AllergenTypeCode-CON");

    /**
     * <p>Refers to the presence of Conch and its derivatives in the product, as listed
     * in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_CONCH = m.createResource(NS + "AllergenTypeCode-CONCH");

    /**
     * <p>Refers to the presence of coriander and their derivatives in the product,
     * as listed in as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName</p>
     */
    public static final Resource AllergenTypeCode_CORIANDER = m.createResource(NS + "AllergenTypeCode-CORIANDER");

    /**
     * <p>Refers to the presence of corn and their derivatives in the product, as listed
     * in as listed in the regulations specified in AllergenSpecificationAgency and
     * AllergenSpecificationName</p>
     */
    public static final Resource AllergenTypeCode_CORN = m.createResource(NS + "AllergenTypeCode-CORN");

    /**
     * <p>Refers to the presence of Cotton Seeds or their derivatives in the product
     * as listed in the regulations specified in AllergenSpecificationAgency and
     * AllergenSpecificationName</p>
     */
    public static final Resource AllergenTypeCode_COTTON_SEEDS = m.createResource(NS + "AllergenTypeCode-COTTON_SEEDS");

    /**
     * <p>Refers to the presence of Coumarin as listed in the regulations specified
     * in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_COUMARIN = m.createResource(NS + "AllergenTypeCode-COUMARIN");

    /**
     * <p>Refers to the presence of Crab and their derivatives in the product, as listed
     * as listed in the regulations specified in AllergenSpecificationAgency and
     * AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_CRAB = m.createResource(NS + "AllergenTypeCode-CRAB");

    /**
     * <p>Refers to the presence of Crawfish and their derivatives in the product, as
     * listed as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_CRAWFISH = m.createResource(NS + "AllergenTypeCode-CRAWFISH");

    /**
     * <p>Refers to the presence of Crustaceans and their derivatives in the product,
     * as listed as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName</p>
     */
    public static final Resource AllergenTypeCode_CRUSTACEANS = m.createResource(NS + "AllergenTypeCode-CRUSTACEANS");

    /**
     * <p>Refers to the presence of Cotton Seeds or its derivatives in the product in
     * the product - Family/Genus/Species: Gossypium. - Also known as: - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_CS = m.createResource(NS + "AllergenTypeCode-CS");

    /**
     * <p>Refers to the presence of Cisco and its derivates in the product. - Family/Genus/Species:
     * Salmonidae/Coregonus/(various) - Also known as: Arctic Cisco, Bering Cisco,
     * Blackfin Cisco, Bloater, Cisco, Deepwater Cisco, European Cisco, Irish pollan,
     * Kiyi, Lake Cisco, Lake Herring, Least Cisco, Longjaw Cisco, Northern Cisco,
     * Peled, Sardine Cisco, Shortjaw Cisco, Shortnose Cisco, Stechlin Cisco - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_CSC = m.createResource(NS + "AllergenTypeCode-CSC");

    /**
     * <p>Refers to the presence of Citral in the product. - CAS Registry Number: 5392-40-5
     * - Also known as: - Disclaimer: Refers to the presence of the allergen in the
     * product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_CT = m.createResource(NS + "AllergenTypeCode-CT");

    /**
     * <p>Refers to the presence of d-Limonene as listed in the regulations specified
     * in AllergenSpecificationAgency and AllergenSpecificationName</p>
     */
    public static final Resource AllergenTypeCode_D_LIMONENE = m.createResource(NS + "AllergenTypeCode-D-LIMONENE");

    /**
     * <p>Refers to the presence of 2,6-Dimethoxy-3,5-pyridine diamine HCl in the product.
     * - CAS Registry Number: 56216-28-5 - Also known as: - Disclaimer: Refers to
     * the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_DA = m.createResource(NS + "AllergenTypeCode-DA");

    /**
     * <p>Refers to the presence of Diaminophenols as listed in the regulations specified
     * in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_DIAMINOPHENOLS = m.createResource(NS + "AllergenTypeCode-DIAMINOPHENOLS");

    /**
     * <p>Refers to the presence of Drum and its Derivatives in the product. - Family/Genus/Species:
     * Sciaenidae/(various) - Also known as: Banded Drum, Black Drum, Corb, Cubbyu,
     * Freshwater Drum, Queenfish, Red Drum, Sand Drum, Spotted Drum, Star Drum,
     * Totoaba - Disclaimer: Refers to the presence of the allergen in the product,
     * as listed in the regulations specified by an agency and specification or any
     * local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_DMF = m.createResource(NS + "AllergenTypeCode-DMF");

    /**
     * <p>Refers to the presence of Diaminophenol in the product. - CAS Registry Number:
     * - Also known as: 137-09-7 - Disclaimer: Refers to the presence of the allergen
     * in the product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_DP = m.createResource(NS + "AllergenTypeCode-DP");

    /**
     * <p>Refers to the presence of Dory and its Derivatives in the product. - Family/Genus/Species:
     * (various) - Also known as: Black Oreo Dory, Buckler Dory, John Dory, Mirror
     * Dory, Oreo, Silver Dory, Smooth Oreo Dory - Disclaimer: Refers to the presence
     * of the allergen in the product, as listed in the regulations specified by
     * an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_DYF = m.createResource(NS + "AllergenTypeCode-DYF");

    /**
     * <p>Refers to the presence of Eel and its derivates in the product. - Family/Genus/Species:
     * (various) - Also known as: American Eel, Bandtooth Conger, Blackedge Cusk-eel,
     * Blacktail Moray, Blacktail Pike-conger, Broadbanded Moray, Brown Moray, Conger
     * Eel, Daggertooth Pike Conger, European Eel, Fangtooth Moray, Fawn Cusk-eel,
     * Freckled Pike-conger, Giant Moray, Giant Snake Eel, Goldentail Moray, Green
     * Moray, Hardtail Conger, Honey Comb Moray, Japanese Eel, Lesser Spiny Eel,
     * Longfin Conger, Long-finned Eel, Manytooth Conger, Margintail Conger, Mottled
     * Cusk-eel, Murray, Pebbletooth Moray, Reticulate Moray, Sea Eel, Short-finned
     * Eel, Spiny Eel, Spotjaw Moray, Spotted Pike-conger, Stout Moray, Tiretrack
     * Eel, Whiptail Conger, White Eel, Yellow Conger - Disclaimer: Refers to the
     * presence of the allergen in the product, as listed in the regulations specified
     * by an agency and specification or any local market regulations.Refers to the
     * presence of Eel and its derivatives in the product, as listed in the regulations
     * specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_EEL = m.createResource(NS + "AllergenTypeCode-EEL");

    /**
     * <p>Refers to the presence of Eugenol in the product. - CAS Registry Number: 97-53-0
     * - Also known as: clove oil - Disclaimer: Refers to the presence of the allergen
     * in the product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_EG = m.createResource(NS + "AllergenTypeCode-EG");

    /**
     * <p>Refers to the presence of eggs and their derivatives in the product, as listed
     * as listed in the regulations specified in AllergenSpecificationAgency and
     * AllergenSpecificationName</p>
     */
    public static final Resource AllergenTypeCode_EGGS = m.createResource(NS + "AllergenTypeCode-EGGS");

    /**
     * <p>Refers to the presence of Escolar and its Derivatives in the product. - Family/Genus/Species:
     * Gempylidae/Lepidocybium/flavobrunneum - Also known as: Escolar - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_EOD = m.createResource(NS + "AllergenTypeCode-EOD");

    /**
     * <p>Refers to the presence of Oakmoss extract in the product. - Family/Genus/Species:
     * Evernia prunastri. - CAS Registry Number: 90028-68-5 - Also known as: - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_EP = m.createResource(NS + "AllergenTypeCode-EP");

    /**
     * <p>Refers to the presence of Eugenol as listed in the regulations specified in
     * AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_EUGENOL = m.createResource(NS + "AllergenTypeCode-EUGENOL");

    /**
     * <p>Refers to the presence of Treemoss extract in the product - Family/Genus/Species:
     * Evernia Furfuracea - CAS Registry Number: 90028-67-4 - Also known as: - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_EV = m.createResource(NS + "AllergenTypeCode-EV");

    /**
     * <p>Refers to the presence of Evernia Furfuracea as listed in the regulations
     * specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_EVERNIA_FURFURACEA = m.createResource(NS + "AllergenTypeCode-EVERNIA_FURFURACEA");

    /**
     * <p>Refers to the presence of Evernia Prunastri as listed in the regulations specified
     * in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_EVERNIA_PRUNASTRI = m.createResource(NS + "AllergenTypeCode-EVERNIA_PRUNASTRI");

    /**
     * <p>Refers to the presence of Farnesol in the product. - CAS Registry Number:
     * 4602-84-0 - Also known as: - Disclaimer: Refers to the presence of the allergen
     * in the product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_FA = m.createResource(NS + "AllergenTypeCode-FA");

    /**
     * <p>Refers to the presence of Farnesol as listed in the regulations specified
     * in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_FARNESOL = m.createResource(NS + "AllergenTypeCode-FARNESOL");

    /**
     * <p>Refers to the presence of 4-Hydroxy-propyl amino-3-nitrophenol in the product.
     * - CAS Registry Number: 92952-81-3 - Also known as: - Disclaimer: Refers to
     * the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_FH = m.createResource(NS + "AllergenTypeCode-FH");

    /**
     * <p>Refers to the presence of Fish and their derivatives in the product, as listed
     * in as listed in the regulations specified in AllergenSpecificationAgency and
     * AllergenSpecificationName</p>
     */
    public static final Resource AllergenTypeCode_FISH = m.createResource(NS + "AllergenTypeCode-FISH");

    /**
     * <p>Refers to the presence of Flounder and their derivatives in the product, as
     * listed as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_FLOUNDER = m.createResource(NS + "AllergenTypeCode-FLOUNDER");

    /**
     * <p>Refers to the presence of 4-Amino-3-nitrophenol in the product. - CAS Registry
     * Number: 610-81-1 - Also known as: - Disclaimer: Refers to the presence of
     * the allergen in the product, as listed in the regulations specified by an
     * agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_FT = m.createResource(NS + "AllergenTypeCode-FT");

    /**
     * <p>Refers to the presence of barley and its derivatives in the product. - Family/Genus/Species:
     * Hordeum vulgare. - Also known as: - Disclaimer: Refers to the presence of
     * the allergen in the product, as listed in the regulations specified by an
     * agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_GB = m.createResource(NS + "AllergenTypeCode-GB");

    /**
     * <p>Refers to the presence of Geraniol in the product. - CAS Registry Number:
     * 106-24-1 - Also known as: - Disclaimer: Refers to the presence of the allergen
     * in the product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_GE = m.createResource(NS + "AllergenTypeCode-GE");

    /**
     * <p>Refers to the presence of Geraniol as listed in the regulations specified
     * in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_GERANIOL = m.createResource(NS + "AllergenTypeCode-GERANIOL");

    /**
     * <p>Refers to the presence of Ginkgo nuts [Ginkgo biloba L. (Ginkgoaceae)] and
     * their derivatives in the product, as listed as listed in the regulations specified
     * in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_GINKGO_NUTS = m.createResource(NS + "AllergenTypeCode-GINKGO_NUTS");

    /**
     * <p>Refers to the presence of kamut and its derivatives in the product. - Family/Genus/Species:
     * Triticum turanicum. - Also known as: Khorasan wheat, Oriental wheat. - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_GK = m.createResource(NS + "AllergenTypeCode-GK");

    /**
     * <p>Refers to the presence of Glutamate and its derivatives in the product. -
     * Family/Genus/Species: - Also known as: Glutamic acid. - Disclaimer: Refers
     * to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_GL = m.createResource(NS + "AllergenTypeCode-GL");

    /**
     * <p>Refers to the presence of glutamate and its derivative in the product, as
     * listed in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_GLUTAMATE = m.createResource(NS + "AllergenTypeCode-GLUTAMATE");

    /**
     * <p>Refers to the presense of other gluten containing grain and gluten containing
     * grain products as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_GLUTEN = m.createResource(NS + "AllergenTypeCode-GLUTEN");

    /**
     * <p>Refers to the presence of Oat and its derivatives in the product. - Family/Genus/Species:
     * Avena sativa. - Also known as: Common oat. - Disclaimer: Refers to the presence
     * of the allergen in the product, as listed in the regulations specified by
     * an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_GO = m.createResource(NS + "AllergenTypeCode-GO");

    /**
     * <p>Refers to the presence of Goat milk and its derivatives in the product, as
     * listed in in the product. - Family/Genus/Species: Capra - Also known as: -
     * Disclaimer: Refers to the presence of the allergen in the product, as listed
     * in the regulations specified by an agency and specification or any local market
     * regulations.</p>
     */
    public static final Resource AllergenTypeCode_GOM = m.createResource(NS + "AllergenTypeCode-GOM");

    /**
     * <p>Refers to the presence of Grouper and their derivatives in the product, as
     * listed as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_GROUPER = m.createResource(NS + "AllergenTypeCode-GROUPER");

    /**
     * <p>Refers to the presence of Spelt and its derivatives in the product. - Family/Genus/Species:
     * Pooideae/Triticum/T. spelta - Also known as: Spelt, Dinkel Wheat, Hulled Wheat
     * - Disclaimer: Refers to the presence of the allergen in the product, as listed
     * in the regulations specified by an agency and specification or any local market
     * regulations.</p>
     */
    public static final Resource AllergenTypeCode_GS = m.createResource(NS + "AllergenTypeCode-GS");

    /**
     * <p>Refers to the presence of Gelatine in the product. - CAS Registry Number:
     * 9000-70-8 - Also known as: Gelatin - Disclaimer: Refers to the presence of
     * the allergen in the product, as listed in the regulations specified by an
     * agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_GTD = m.createResource(NS + "AllergenTypeCode-GTD");

    /**
     * <p>Refers to the presence of Haddock and their derivatives in the product, as
     * listed as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_HADDOCK = m.createResource(NS + "AllergenTypeCode-HADDOCK");

    /**
     * <p>Refers to the presence of Hake and their derivatives in the product, as listed
     * as listed in the regulations specified in AllergenSpecificationAgency and
     * AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_HAKE = m.createResource(NS + "AllergenTypeCode-HAKE");

    /**
     * <p>Refers to the presence of Halibut and their derivatives in the product, as
     * listed as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_HALIBUT = m.createResource(NS + "AllergenTypeCode-HALIBUT");

    /**
     * <p>Refers to the presence of hazelnut and hazelnut products as listed in the
     * regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_HAZELNUTS = m.createResource(NS + "AllergenTypeCode-HAZELNUTS");

    /**
     * <p>Refers to the presence of HC Blue No 12 in the product. - CAS Registry Number:
     * 132885-85-9 - Also known as: 1-(alpha-hydroxyethyl)amino-2-nitro-4,N-ethyl-N-(alpha-â€‹hydroxyethyl)aminobenzene
     * - Disclaimer: Refers to the presence of the allergen in the product, as listed
     * in the regulations specified by an agency and specification or any local market
     * regulations.</p>
     */
    public static final Resource AllergenTypeCode_HB = m.createResource(NS + "AllergenTypeCode-HB");

    /**
     * <p>Refers to the presence of Hydroxyisohexyl 3-Cyclohexene Carboxaldehyde in
     * the product. - CAS Registry Number: 31906-04-4 - Also known as: Hydroxy-methylpentylcyclohexenecarboxaldehyde
     * - Disclaimer: Refers to the presence of the allergen in the product, as listed
     * in the regulations specified by an agency and specification or any local market
     * regulations.</p>
     */
    public static final Resource AllergenTypeCode_HC = m.createResource(NS + "AllergenTypeCode-HC");

    /**
     * <p>Refers to the presence of HC Blue No 11 as listed in the regulations specified
     * in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_HC_BLUE_NO_11 = m.createResource(NS + "AllergenTypeCode-HC_BLUE_NO_11");

    /**
     * <p>Refers to the presence of HC Blue No 12 as listed in the regulations specified
     * in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_HC_BLUE_NO_12 = m.createResource(NS + "AllergenTypeCode-HC_BLUE_NO_12");

    /**
     * <p>Refers to the presence of HC Blue No 11 in the product. - CAS Registry Number:
     * 23920-15-2 - Also known as: 2,2'-((4-((2-methoxyethyl)amino)-3-nitrophenyl)imino)diethanol
     * - Disclaimer: Refers to the presence of the allergen in the product, as listed
     * in the regulations specified by an agency and specification or any local market
     * regulations.</p>
     */
    public static final Resource AllergenTypeCode_HD = m.createResource(NS + "AllergenTypeCode-HD");

    /**
     * <p>Refers to the presence of Hydroxybenzomorpholine in the product. - CAS Registry
     * Number: 26021-57-8 - Also known as: 6-Hydroxybenzomorpholine - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_HE = m.createResource(NS + "AllergenTypeCode-HE");

    /**
     * <p>Refers to the presence of Herring and their derivatives in the product, as
     * listed as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_HERRING = m.createResource(NS + "AllergenTypeCode-HERRING");

    /**
     * <p>Refers to the presence of Hexyl Cinnamal as listed in the regulations specified
     * in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_HEXYL_CINNAMAL = m.createResource(NS + "AllergenTypeCode-HEXYL_CINNAMAL");

    /**
     * <p>Refers to the presence of Hydroxypropyl bis(N-hydroxyethyl-p-phenylenediamine)
     * HCl in the product. - CAS Registry Number: 128729-28-2 - Also known as: -
     * Disclaimer: Refers to the presence of the allergen in the product, as listed
     * in the regulations specified by an agency and specification or any local market
     * regulations.</p>
     */
    public static final Resource AllergenTypeCode_HH = m.createResource(NS + "AllergenTypeCode-HH");

    /**
     * <p>Refers to the presence of hickory nuts [Carya spp. (Junglandacease)] and their
     * derivatives in the product, as listed as listed in the regulations specified
     * in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_HICKORY_NUTS = m.createResource(NS + "AllergenTypeCode-HICKORY_NUTS");

    /**
     * <p>Refers to the presence of Hydroxyethyl-2-nitro-p-toluidine in the product.
     * - CAS Registry Number: 100418-33-5 - Also known as: - Disclaimer: Refers to
     * the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_HN = m.createResource(NS + "AllergenTypeCode-HN");

    /**
     * <p>Refers to the presence of 2-Hydroxyethyl-picramic acid in the product. - CAS
     * Registry Number: 99610-72-7 - Also known as: - Disclaimer: Refers to the presence
     * of the allergen in the product, as listed in the regulations specified by
     * an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_HP = m.createResource(NS + "AllergenTypeCode-HP");

    /**
     * <p>Refers to the presence of Hexyl Cinnamaldehyde in the product. - CAS Registry
     * Number: 101-86-0 - Also known as: hexyl cinnamal - Disclaimer: Refers to the
     * presence of the allergen in the product, as listed in the regulations specified
     * by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_HX = m.createResource(NS + "AllergenTypeCode-HX");

    /**
     * <p>Refers to the presence of Hydroxycitronellal in the product. - CAS Registry
     * Number: 107-75-5 - Also known as: - Disclaimer: Refers to the presence of
     * the allergen in the product, as listed in the regulations specified by an
     * agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_HY = m.createResource(NS + "AllergenTypeCode-HY");

    /**
     * <p>Refers to the presence of Hydroxybenzomorpholine as listed in the regulations
     * specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_HYDROXYBENZOMORPHOLINE = m.createResource(NS + "AllergenTypeCode-HYDROXYBENZOMORPHOLINE");

    /**
     * <p>Refers to the presence of Hydroxycitronellal as listed in the regulations
     * specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_HYDROXYCITRONELLAL = m.createResource(NS + "AllergenTypeCode-HYDROXYCITRONELLAL");

    /**
     * <p>Refers to the presence of Hydroxyethyl-2-nitro-p-toluidine as listed in the
     * regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_HYDROXYETHYL_2_NITRO_P_TOLUIDINE = m.createResource(NS + "AllergenTypeCode-HYDROXYETHYL-2-NITRO-P-TOLUIDINE");

    /**
     * <p>Refers to the presence of Hydroxyisohexyl 3-Cyclohexene Carboxaldehyde Isoeugenol
     * Limonene Linal as listed in the regulations specified in AllergenSpecificationAgency
     * and llergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_HYDROXYISOHEXYL_3_CYCLOHEXENE_CARBOXALDEHYDE_ISOEUGENOL_LIMONENE_LINAL = m.createResource(NS + "AllergenTypeCode-HYDROXYISOHEXYL_3-CYCLOHEXENE_CARBOXALDEHYDE_ISOEUGENOL_LIMONENE_LINAL");

    /**
     * <p>Refers to the presence of Hydroxypropyl bis(N-hydroxyethyl-p-phenyldiamine)
     * HCl as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName.</p>
     */
    public static final Resource _HCL = m.createResource(NS + "AllergenTypeCode-HYDROXYPROPYL_BIS%28N-HYDROXYETHYL-P-PHENYLDIAMINE%29_HCL");

    /**
     * <p>Refers to the presence of Isoeugenol as listed in the regulations specified
     * in AllergenSpecificationAgency and AllergenSpecificationName</p>
     */
    public static final Resource AllergenTypeCode_ISOEUGENOL = m.createResource(NS + "AllergenTypeCode-ISOEUGENOL");

    /**
     * <p>Refers to the presence of Japanese horse chestnuts and its derivatives in
     * the product. - Family/Genus/Species: Aesculus turbinata. - Also known as:
     * - Disclaimer: Refers to the presence of the allergen in the product, as listed
     * in the regulations specified by an agency and specification or any local market
     * regulations.</p>
     */
    public static final Resource AllergenTypeCode_JCH = m.createResource(NS + "AllergenTypeCode-JCH");

    /**
     * <p>Refers to the presence of Jack and its Derivatives in the product. - Family/Genus/Species:
     * (various) - Also known as: (Mix of fish in the 'jack' families) - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_JFD = m.createResource(NS + "AllergenTypeCode-JFD");

    /**
     * <p>Refers to the presence of kamut and kamut products (glutencontaining grain)
     * as listed in the regulations specified in AllergenSpecificationAgency and
     * AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_KAMUT = m.createResource(NS + "AllergenTypeCode-KAMUT");

    /**
     * <p>Refers to the presence of Krill and their derivatives in the product, as listed
     * as listed in the regulations specified in AllergenSpecificationAgency and
     * AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_KRILL = m.createResource(NS + "AllergenTypeCode-KRILL");

    /**
     * <p>Refers to the presence of Kiwi and its derivatives in the product. - Family/Genus/Species:
     * Actinidia. - Also known as: Chinese Gooseberry. - Disclaimer: Refers to the
     * presence of the allergen in the product, as listed in the regulations specified
     * by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_KWD = m.createResource(NS + "AllergenTypeCode-KWD");

    /**
     * <p>Refers to the presence of lactose as listed in the regulations specified in
     * AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_LACTOSE = m.createResource(NS + "AllergenTypeCode-LACTOSE");

    /**
     * <p>Refers to the presence of Land and sea snails (Escargot) and its derivatives
     * in the product, as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_LAND = m.createResource(NS + "AllergenTypeCode-LAND");

    /**
     * <p>Refers to the presence of Lingcod and its Derivatives in the product. - Family/Genus/Species:
     * Hexagrammidae/Ophiodon/elongatus - Also known as: Lingcod, Ling Cod, Buffalo
     * cod, Cultus cod - Disclaimer: Refers to the presence of the allergen in the
     * product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_LGD = m.createResource(NS + "AllergenTypeCode-LGD");

    /**
     * <p>Refers to the presence of Lichee nuts [Litchi chinensis Sonn. (Sapindaceae)]
     * and their derivatives in the product, as listed as listed in the regulations
     * specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_LICHEE_NUTS = m.createResource(NS + "AllergenTypeCode-LICHEE_NUTS");

    /**
     * <p>Refers to the presence of Limpets and its derivatives in the product, as listed
     * in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_LIMPETS = m.createResource(NS + "AllergenTypeCode-LIMPETS");

    /**
     * <p>Refers to the presence of Linalool as listed in the regulations specified
     * in AllergenSpecificationAgency and AllergenSpecificationName</p>
     */
    public static final Resource AllergenTypeCode_LINALOOL = m.createResource(NS + "AllergenTypeCode-LINALOOL");

    /**
     * <p>Refers to the presence of Limpets and its derivates in the product. - Family/Genus/Species:
     * Patellogastropoda (various) - Also known as: Hoof Snail, Keyhole Limpet, Keyhole
     * Limpte, Lake Limpet, Limpet, Limpets, Owl Limpet, Plant Limpet, Purple Keyhole
     * Limpet, Rayed Mediterranean Limpet, Rough Keyhole Limpet, Rver Limpet, Slipper
     * Snail, Slit Limpet, Umbrella Slugs - Disclaimer: Refers to the presence of
     * the allergen in the product, as listed in the regulations specified by an
     * agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_LMT = m.createResource(NS + "AllergenTypeCode-LMT");

    /**
     * <p>Refers to the presence of Lobster and their derivatives in the product, as
     * listed as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_LOBSTER = m.createResource(NS + "AllergenTypeCode-LOBSTER");

    /**
     * <p>Refers to the presence of Land and sea snails (Escargot) and its derivates
     * in the product. - Family/Genus/Species: Gastropoda (various) - Also known
     * as: (various) - Disclaimer: Refers to the presence of the allergen in the
     * product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_LSN = m.createResource(NS + "AllergenTypeCode-LSN");

    /**
     * <p>Refers to the presence of Lupine and their derivatives in the product, as
     * listed in as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName</p>
     */
    public static final Resource AllergenTypeCode_LUPINE = m.createResource(NS + "AllergenTypeCode-LUPINE");

    /**
     * <p>Refers to the presence of latex in the product. - CAS Registry Number: 9006-04-6
     * - Also known as: - Disclaimer: Refers to the presence of the allergen in the
     * product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_LX = m.createResource(NS + "AllergenTypeCode-LX");

    /**
     * <p>Refers to the presence of Mackerel and its derivates in the product. - Family/Genus/Species:
     * Acanthocybium or Grammatorcynus or Rastrelliger or Scombridae or Scomberomorus/(various)
     * - Also known as: Atka Mackerel, Atlantic Mackerel, Atlantic Sierra, Atlantic
     * Spanish Mackerel, Australian Spotted Mackerel, Blue Mackerel, Broadbarred
     * King Mackerel, Butterfly Mackerel, Cero, Cero Mackerel, Chinese Mackerel,
     * Double-lined Mackerel, Gulf Sierra, Indian Mackerel, Indo-Pacific king Mackerel,
     * Island Mackerel, Japanese Seer, Japanese Spanish Mackerel, King Mackerel,
     * Korean Mackerel, Monterey Spanish Mackerel, Narrow-barred Mackerel, Narrow-barred
     * Spanish Mackerel, Pacific Sierra, Papuan Spanish Mackerel, Queen Mackerel,
     * Queensland School Mackerel, Serra Spanish Mackerel, Shark Mackerel, Short
     * Mackerel, Spanish Mackerel, Spotted Seerfish - Disclaimer: Refers to the presence
     * of the allergen in the product, as listed in the regulations specified by
     * an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_MAC = m.createResource(NS + "AllergenTypeCode-MAC");

    /**
     * <p>Refers to the presence of macadamia nut and macadamia nut products as listed
     * in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName</p>
     */
    public static final Resource AllergenTypeCode_MACADAMIA_NUTS = m.createResource(NS + "AllergenTypeCode-MACADAMIA_NUTS");

    /**
     * <p>Refers to the presence of Mackerel and its derivatives in the product, as
     * listed in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_MACKEREL = m.createResource(NS + "AllergenTypeCode-MACKEREL");

    /**
     * <p>Refers to the presence of Mahi Mahi and their derivatives in the product,
     * as listed as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_MAHI_MAHI = m.createResource(NS + "AllergenTypeCode-MAHI_MAHI");

    /**
     * <p>Refers to the presence of Marlin and its derivates in the product. - Family/Genus/Species:
     * Istiophoridae/(various) - Also known as: Atlantic Blue Marlin, Atlantic Sailfish,
     * Black Marlin, Indo-Pacific Blue Marlin, Indo-Pacific Sailfish, Longbill Spearfish,
     * Mediterranean Spearfish, Roundscale Spearfish, Shortbill Spearfish, Striped
     * Marlin, White Marlin - Disclaimer: Refers to the presence of the allergen
     * in the product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_MAL = m.createResource(NS + "AllergenTypeCode-MAL");

    /**
     * <p>Refers to the presence of Marlin and its derivatives in the product, as listed
     * in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_MARLIN = m.createResource(NS + "AllergenTypeCode-MARLIN");

    /**
     * <p>Refers to the presence of Melatonin, a hormone secreted by the pineal gland
     * that inhibits melanin formation and is thought to be concerned with regulating
     * the reproductive cycle.</p>
     */
    public static final Resource AllergenTypeCode_MELATONIN = m.createResource(NS + "AllergenTypeCode-MELATONIN");

    /**
     * <p>Refers to the presence of Methyl 2-Octynoate as listed in the regulations
     * specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_METHYL_2_OCTYNOATE = m.createResource(NS + "AllergenTypeCode-METHYL_2_OCTYNOATE");

    /**
     * <p>Refers to the presence of Methyl heptin carbonate as listed in the regulations
     * specified in AllergenSpecificationAgency and AllergenSpecificationName</p>
     */
    public static final Resource AllergenTypeCode_METHYL_HEPTIN_CARBONATE = m.createResource(NS + "AllergenTypeCode-METHYL_HEPTIN_CARBONATE");

    /**
     * <p>Refers to the presence of Milkfish and its Derivatives in the product. - Family/Genus/Species:
     * Chanidae/Chanos/chanos - Also known as: False Trevalliesm Milkfish - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_MFD = m.createResource(NS + "AllergenTypeCode-MFD");

    /**
     * <p>Refers to the presence of 2-Methyl-5-hydroxyethylaminophenol in the product.
     * - CAS Registry Number: 55302-96-0 - Also known as: - Disclaimer: Refers to
     * the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_MH = m.createResource(NS + "AllergenTypeCode-MH");

    /**
     * <p>Refers to the presence of milk and their derivatives in the product, as listed
     * in as listed in the regulations specified in AllergenSpecificationAgency and
     * AllergenSpecificationName</p>
     */
    public static final Resource AllergenTypeCode_MILK = m.createResource(NS + "AllergenTypeCode-MILK");

    /**
     * <p>Refers to the presence of Monkfish (Anglerfish, Lotte) and its derivates in
     * the product. - Family/Genus/Species: Lophiidae/Lophius/(various) - Also known
     * as: American Angler, Angler, Anglerfish, Blackbellied Angelr, Blackfin Goosefish,
     * Blackfin Monkfish, Devil Angelfish, Fishing-Frogs, Frog-Fish, Goosefish, Monkfish,
     * Sea-Devils, Shortspine African Angelr, Yellow Goosefish, Yellow Goosfish -
     * Disclaimer: Refers to the presence of the allergen in the product, as listed
     * in the regulations specified by an agency and specification or any local market
     * regulations.</p>
     */
    public static final Resource AllergenTypeCode_MKF = m.createResource(NS + "AllergenTypeCode-MKF");

    /**
     * <p>Refers to the presence of lactose in the product. - Family/Genus/Species:
     * - Also known as: Milk sugar, Lactobiose, 4-O-Î²-D-Galactopyranosyl-D-glucose
     * - Disclaimer: Refers to the presence of the allergen in the product, as listed
     * in the regulations specified by an agency and specification or any local market
     * regulations.</p>
     */
    public static final Resource AllergenTypeCode_ML = m.createResource(NS + "AllergenTypeCode-ML");

    /**
     * <p>Refers to the presence of Melatonin, a hormone secreted by the pineal gland
     * that inhibits melanin formation and is thought to be concerned with regulating
     * the reproductive cycle. - CAS Registry Number: 73-31-4 - Also known as: N-acetyl-5-methoxy
     * tryptamine - Disclaimer: Refers to the presence of the allergen in the product,
     * as listed in the regulations specified by an agency and specification or any
     * local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_MM = m.createResource(NS + "AllergenTypeCode-MM");

    /**
     * <p>Refers to the presence of Matsutake mushroom and its derivatives in the product.
     * - Family/Genus/Species: Tricholoma matsutake. - Also known as: - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_MMD = m.createResource(NS + "AllergenTypeCode-MMD");

    /**
     * <p>Refers to the presence of Mango and its derivatives in the product. - Family/Genus/Species:
     * Mangifera. - Also known as: - Disclaimer: Refers to the presence of the allergen
     * in the product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_MOD = m.createResource(NS + "AllergenTypeCode-MOD");

    /**
     * <p>Refers to the presence of molluscs and their derivatives in the product, as
     * listed in as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName</p>
     */
    public static final Resource AllergenTypeCode_MOLLUSCS = m.createResource(NS + "AllergenTypeCode-MOLLUSCS");

    /**
     * <p>Refers to the presence of Monkfish (Anglerfish, Lotte) and its derivatives
     * in the product, as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName.</p>
     */
    public static final Resource ___INSTANCE = m.createResource(NS + "AllergenTypeCode-MONKFISH_%28ANGLERFISH%2C_LOTTE%29");

    /**
     * <p>Refers to the presence of Mussels and its derivates in the product. - Family/Genus/Species:
     * (various) - Also known as: American Angler, Bearded Horse Mussel, Blue Mussel,
     * California Mussel, Chilean Mussel, Cholga Mussel, Mediterranean Mussel, Mussel,
     * New Zealand Green Mussel, Northern Horse Mussel - Disclaimer: Refers to the
     * presence of the allergen in the product, as listed in the regulations specified
     * by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_MSS = m.createResource(NS + "AllergenTypeCode-MSS");

    /**
     * <p>Refers to the presence of Mussels and its derivatives in the product, as listed
     * in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_MUSSELS = m.createResource(NS + "AllergenTypeCode-MUSSELS");

    /**
     * <p>Refers to the presence of mustard or their derivatives in the product, as
     * listed in as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName</p>
     */
    public static final Resource AllergenTypeCode_MUSTARD = m.createResource(NS + "AllergenTypeCode-MUSTARD");

    /**
     * <p>Refers to the presence of cocoa and its derivatives in the product, as listed
     * in in the product. - Family/Genus/Species: Theobroma cacao. - Also known as:
     * Cacao. - Disclaimer: Refers to the presence of the allergen in the product,
     * as listed in the regulations specified by an agency and specification or any
     * local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_NC = m.createResource(NS + "AllergenTypeCode-NC");

    /**
     * <p>Refers to the presence of Peas and its derivatives in the product. - Family/Genus/Species:
     * Pisum sativum. - Also known as: - Disclaimer: Refers to the presence of the
     * allergen in the product, as listed in the regulations specified by an agency
     * and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_NE = m.createResource(NS + "AllergenTypeCode-NE");

    /**
     * <p>Refers to the presence of coriander and its derivatives in the product, as
     * listed in in the product. - Family/Genus/Species: Coriandrum sativum. - Also
     * known as: Chinese parsley, Dhania and Cilantro. - Disclaimer: Refers to the
     * presence of the allergen in the product, as listed in the regulations specified
     * by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_NK = m.createResource(NS + "AllergenTypeCode-NK");

    /**
     * <p>Refers to the presence of Lupine and its derivatives in the product, as listed
     * in in the product. - Family/Genus/Species: Lupinus. - Also known as: Lupin
     * and Bluebonnet. - Disclaimer: Refers to the presence of the allergen in the
     * product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_NL = m.createResource(NS + "AllergenTypeCode-NL");

    /**
     * <p>Refers to the presence of corn and its derivatives in the product. - Family/Genus/Species:
     * Zea mays. - Also known as: Maize. - Disclaimer: Refers to the presence of
     * the allergen in the product, as listed in the regulations specified by an
     * agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_NM = m.createResource(NS + "AllergenTypeCode-NM");

    /**
     * <p>Does not contain declaration obligatory allergens as listed in the regulations
     * specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_NO_DECLARED_ALLERGENS = m.createResource(NS + "AllergenTypeCode-NO_DECLARED_ALLERGENS");

    /**
     * <p>Refers to the presence of Pod fruits and its derivates in the product. - Family/Genus/Species:
     * Fabaceae - Also known as: Legume. - Disclaimer: Refers to the presence of
     * the allergen in the product, as listed in the regulations specified by an
     * agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_NP = m.createResource(NS + "AllergenTypeCode-NP");

    /**
     * <p>Refers to the presence of Rye and its derivatives in the product. - Family/Genus/Species:
     * Secale cereale. - Also known as: - Disclaimer: Refers to the presence of the
     * allergen in the product, as listed in the regulations specified by an agency
     * and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_NR = m.createResource(NS + "AllergenTypeCode-NR");

    /**
     * <p>Refers to the presence of carrot and its derivates in the product. - Family/Genus/Species:
     * Daucus carota subsp. sativus. - Also known as: - Disclaimer: Refers to the
     * presence of the allergen in the product, as listed in the regulations specified
     * by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_NW = m.createResource(NS + "AllergenTypeCode-NW");

    /**
     * <p>Refers to the presence of oat and oat products (gluten containing grain) as
     * listed in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_OAT = m.createResource(NS + "AllergenTypeCode-OAT");

    /**
     * <p>Refers to the presence of Octopus and its derivates in the product. - Family/Genus/Species:
     * Octopus - Also known as: Octopus, Giant Octopus, Veined Octopus, Common Octopus
     * - Disclaimer: Refers to the presence of the allergen in the product, as listed
     * in the regulations specified by an agency and specification or any local market
     * regulations.</p>
     */
    public static final Resource AllergenTypeCode_OCT = m.createResource(NS + "AllergenTypeCode-OCT");

    /**
     * <p>Refers to the presence of Octopus and its derivatives in the product, as listed
     * in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_OCTOPUS = m.createResource(NS + "AllergenTypeCode-OCTOPUS");

    /**
     * <p>Refers to the presence of Oilfish and its Derivatives in the product. - Family/Genus/Species:
     * Gempylidae/Ruvettus/pretiosus - Also known as: Oilfish - Disclaimer: Refers
     * to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_OFD = m.createResource(NS + "AllergenTypeCode-OFD");

    /**
     * <p>Refers to the presence of Orange and its derivatives in the product. - Family/Genus/Species:
     * Rutaceae. - Also known as: - Disclaimer: Refers to the presence of the allergen
     * in the product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_OGD = m.createResource(NS + "AllergenTypeCode-OGD");

    /**
     * <p>Refers to the presence of 1-Naphthol in the product. - CAS Registry Number:
     * 90-15-3 - Also known as: Î±-naphthol - Disclaimer: Refers to the presence
     * of the allergen in the product, as listed in the regulations specified by
     * an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_ON = m.createResource(NS + "AllergenTypeCode-ON");

    /**
     * <p>Refers to the presence of Orange roughy and its derivatives in the product,
     * as listed in the regulations specified in AllergenSpecificationAgency and
     * AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_ORANGE_ROUGHY = m.createResource(NS + "AllergenTypeCode-ORANGE_ROUGHY");

    /**
     * <p>Refers to the presence of Orange roughy and its derivates in the product.
     * - Family/Genus/Species: Trachichthyidae/Hoplostethus/H. atlanticus - Also
     * known as: Orange Roughy, Red Roughy, Alimehead, Deep Sea Perch - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_ORR = m.createResource(NS + "AllergenTypeCode-ORR");

    /**
     * <p>Refers to the presence Oysters and its derivates in the product. - Family/Genus/Species:
     * Ostreidae or Pteriidae/(various) - Also known as: Chilean Oyster, Eastern
     * Oyster, Edible Oyster, European Flat Oyster, Kumamoto Oyster, New Zealand
     * Dredge Oyster, New Zealand Rock Oyster, Olympia Oyster, Pacific Oyster, Portuguese
     * Oyster, Sydney Rock Oyster, Tautog - Disclaimer: Refers to the presence of
     * the allergen in the product, as listed in the regulations specified by an
     * agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_OYS = m.createResource(NS + "AllergenTypeCode-OYS");

    /**
     * <p>Refers to the presence Oysters and its derivatives in the product, as listed
     * in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_OYSTERS = m.createResource(NS + "AllergenTypeCode-OYSTERS");

    /**
     * <p>Refers to the presence of p-Methylaminophenol as listed in the regulations
     * specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_P_METHYLAMINOPHENOL = m.createResource(NS + "AllergenTypeCode-P-METHYLAMINOPHENOL");

    /**
     * <p>Refers to the presence of p-Phenylenediamine in the product as listed in the
     * regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_P_PHENYLENEDIAMINE = m.createResource(NS + "AllergenTypeCode-P-PHENYLENEDIAMINE");

    /**
     * <p>Refers to the presence of peanuts and their derivatives in the product, as
     * listed in as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName</p>
     */
    public static final Resource AllergenTypeCode_PEANUTS = m.createResource(NS + "AllergenTypeCode-PEANUTS");

    /**
     * <p>Refers to the presence of peas and pea products as listed in the regulations
     * specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_PEAS = m.createResource(NS + "AllergenTypeCode-PEAS");

    /**
     * <p>Refers to the presence of pecan nut and pecan nut products as listed in the
     * regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_PECAN_NUTS = m.createResource(NS + "AllergenTypeCode-PECAN_NUTS");

    /**
     * <p>Refers to the presence of Periwinkle and its derivates in the product. - Family/Genus/Species:
     * Littorina. - Also known as: - Disclaimer: Refers to the presence of the allergen
     * in the product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_PER = m.createResource(NS + "AllergenTypeCode-PER");

    /**
     * <p>Refers to the presence of Perch and their derivatives in the product, as listed
     * as listed in the regulations specified in AllergenSpecificationAgency and
     * AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_PERCH = m.createResource(NS + "AllergenTypeCode-PERCH");

    /**
     * <p>Refers to the presence of Periwinkle and its derivatives in the product, as
     * listed in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_PERIWINKLE = m.createResource(NS + "AllergenTypeCode-PERIWINKLE");

    /**
     * <p>Refers to the presence of Puffer and its Derivatives in the product. - Family/Genus/Species:
     * Tetraodontidae/(various) - Also known as: Balloonfish, Bandtail Puffer, Blowfish,
     * Blowies, Blunthead Puffer, Bubblefish, Bullseye Puffer, Checkered Puffer,
     * Common Puffers, Globefish, Honey toads, Least Puffer, Longnose Puffer, Marbled
     * Puffer, Moontail Blassop, Northern Puffer, Oceanic Puffer, Pufferfish, Puffers,
     * Sea squab, Sharpnosed Puffers, Smooth Puffer, Southern Puffer, Sugar toads,
     * Swellfish, Toadfish, Toadies - Disclaimer: Refers to the presence of the allergen
     * in the product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_PFD = m.createResource(NS + "AllergenTypeCode-PFD");

    /**
     * <p>Refers to the presence of Patagonian Toothfish and its Derivatives in the
     * product. - Family/Genus/Species: Nototheniidae/Dissostichus/eleginoides -
     * Also known as: Patagonian Toothfish - Disclaimer: Refers to the presence of
     * the allergen in the product, as listed in the regulations specified by an
     * agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_PGT = m.createResource(NS + "AllergenTypeCode-PGT");

    /**
     * <p>Refers to the presence of Peach and its derivatives in the product. - Family/Genus/Species:
     * Prunus persica. - Also known as: - Disclaimer: Refers to the presence of the
     * allergen in the product, as listed in the regulations specified by an agency
     * and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_PHD = m.createResource(NS + "AllergenTypeCode-PHD");

    /**
     * <p>Refers to the presence of Pike and their derivatives in the product, as listed
     * as listed in the regulations specified in AllergenSpecificationAgency and
     * AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_PIKE = m.createResource(NS + "AllergenTypeCode-PIKE");

    /**
     * <p>Refers to the presence of Pili nuts [Canarium ovatum (Burseraceae)] and their
     * derivatives in the product, as listed as listed in the regulations specified
     * in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_PILI_NUTS = m.createResource(NS + "AllergenTypeCode-PILI_NUTS");

    /**
     * <p>Refers to the presence of Pine Nuts and their derivatives as listed in the
     * regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_PINE_NUTS = m.createResource(NS + "AllergenTypeCode-PINE_NUTS");

    /**
     * <p>Refers to the presence of pistachio and pistachio products as listed in the
     * regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_PISTACHIOS = m.createResource(NS + "AllergenTypeCode-PISTACHIOS");

    /**
     * <p>Refers to the presence of Plaice and its derivatives in the product, as listed
     * in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_PLAICE = m.createResource(NS + "AllergenTypeCode-PLAICE");

    /**
     * <p>Refers to the presence of Plaice and its derivates in the product. - Family/Genus/Species:
     * Pleuronectidae/(various) - Also known as: American Plaice, Alaskan Plaice,
     * European Plaice, Scale-eye Plaice, Summer Plaice - Disclaimer: Refers to the
     * presence of the allergen in the product, as listed in the regulations specified
     * by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_PLC = m.createResource(NS + "AllergenTypeCode-PLC");

    /**
     * <p>Refers to the presence of p-Methylaminophenol in the product. - CAS Registry
     * Number: 55-55-0 - Also known as: - Disclaimer: Refers to the presence of the
     * allergen in the product, as listed in the regulations specified by an agency
     * and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_PM = m.createResource(NS + "AllergenTypeCode-PM");

    /**
     * <p>Refers to the presence of Pine nuts and its derivatives in the product. -
     * Family/Genus/Species: Pinus. - Also known as: Pine seeds. - Disclaimer: Refers
     * to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_PN = m.createResource(NS + "AllergenTypeCode-PN");

    /**
     * <p>Refers to the presence of Pork and its derivative in the product, in the product
     * - Family/Genus/Species: - Also known as: - Disclaimer: Refers to the presence
     * of the allergen in the product, as listed in the regulations specified by
     * an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_PO = m.createResource(NS + "AllergenTypeCode-PO");

    /**
     * <p>Refers to the presence of pod fruits and their derivatives in the product,
     * as listed in as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName</p>
     */
    public static final Resource AllergenTypeCode_POD_FRUITS = m.createResource(NS + "AllergenTypeCode-POD_FRUITS");

    /**
     * <p>Refers to the presence of Pollock and their derivatives in the product, as
     * listed as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_POLLOCK = m.createResource(NS + "AllergenTypeCode-POLLOCK");

    /**
     * <p>Refers to the presence of Pompano and its derivates in the product. - Family/Genus/Species:
     * Carangidae subfamily Trachinotinae/Trachinotus/(various) - Also known as:
     * African Pompano, Blackblotch Pompano, Cayenne Pompano, Derbio, Florida Pompano,
     * Florida Pompano, Gafftopsail Pompano, Gafftopsail Pompano, Guinean Pompano,
     * Indian Pompano, Largespotted Dart, Longfin Pompano, Marquesas Dart, Oyster
     * Pompano, Paloma Pompano, Paloma Pompano, Palometa, Palometa, Palometta Permit,
     * Permit, Permit, Plata Pompano, Pompano, Shortfin Pompano, Smallspotted Dart,
     * Snubnose Pompano, Snubnose Pompano, Southern Pompano, Steel Pompano, Swallowtail
     * Dart - Disclaimer: Refers to the presence of the allergen in the product,
     * as listed in the regulations specified by an agency and specification or any
     * local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_POM = m.createResource(NS + "AllergenTypeCode-POM");

    /**
     * <p>Refers to the presence of Pompano and its derivatives in the product, as listed
     * in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_POMPANO = m.createResource(NS + "AllergenTypeCode-POMPANO");

    /**
     * <p>Refers to the presence of Poppy Seeds or their derivatives in the product
     * as listed in the regulations specified in AllergenSpecificationAgency and
     * AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_POPPY_SEEDS = m.createResource(NS + "AllergenTypeCode-POPPY_SEEDS");

    /**
     * <p>Refers to the presence of Porgy and its derivatives in the product, as listed
     * in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_PORGY = m.createResource(NS + "AllergenTypeCode-PORGY");

    /**
     * <p>Refers to the presence of pork and its derivative in the product, as listed
     * in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_PORK = m.createResource(NS + "AllergenTypeCode-PORK");

    /**
     * <p>Refers to the presence of p-Phenylenediamine in the product in the product.
     * - CAS Registry Number: 106-50-3 - Also known as: - Disclaimer: Refers to the
     * presence of the allergen in the product, as listed in the regulations specified
     * by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_PP = m.createResource(NS + "AllergenTypeCode-PP");

    /**
     * <p>Refers to the presence of Prawns and their derivatives in the product, as
     * listed as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_PRAWNS = m.createResource(NS + "AllergenTypeCode-PRAWNS");

    /**
     * <p>Refers to the presence of Porgy and its derivates in the product. - Family/Genus/Species:
     * Sparidae/(various) - Also known as: Dentex, Grass Porgy, Longspine Porgy,
     * Madai, Panga, Pinfish, Porgy, Puntazzo, Red Porgy, River Bream, Scup, Sea
     * Bream, Sheepshead, Silver Porgy, Spotted Pinfish, Squirefish, Whitebone Porgy
     * - Disclaimer: Refers to the presence of the allergen in the product, as listed
     * in the regulations specified by an agency and specification or any local market
     * regulations.</p>
     */
    public static final Resource AllergenTypeCode_PRG = m.createResource(NS + "AllergenTypeCode-PRG");

    /**
     * <p>Refers to the presence of Poppy seeds or its derivatives in the product in
     * the product. - Family/Genus/Species: Papaver somniferum. - Also known as:
     * - Disclaimer: Refers to the presence of the allergen in the product, as listed
     * in the regulations specified by an agency and specification or any local market
     * regulations.</p>
     */
    public static final Resource AllergenTypeCode_PS = m.createResource(NS + "AllergenTypeCode-PS");

    /**
     * <p>Refers to the presence of pulses. An annual leguminous crop yielding from
     * one to twelve seeds of variable size, shape, and colour within a pod. Pulses
     * are used for food and animal feed. The term 'pulse', as used by the Food and
     * Agricultural Organization (FAO), is reserved for crops harvested solely for
     * the dry seed. This excludes green beans and green peas, which are considered
     * vegetable crops. Also excluded are crops that are mainly grown for oil extraction</p>
     */
    public static final Resource AllergenTypeCode_PULSES = m.createResource(NS + "AllergenTypeCode-PULSES");

    /**
     * <p>Refers to the presence of Quahaugs and its derivates in the product. - Family/Genus/Species:
     * Veneridae/Mercenaria/M. mercenaria - Also known as: Cherrystones, Chowder
     * Clams, Countnecks, Quahog, Quahaug, Hard-shell Clam, Ocean Quahog, Peanut
     * Clam, Round Clam, Topnecks, Southern Quahog - Disclaimer: Refers to the presence
     * of the allergen in the product, as listed in the regulations specified by
     * an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_QUA = m.createResource(NS + "AllergenTypeCode-QUA");

    /**
     * <p>Refers to the presence of Quahaugs and its derivatives in the product, listed
     * as listed in the regulations specified in AllergenSpecificationAgency and
     * AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_QUAHAUGS = m.createResource(NS + "AllergenTypeCode-QUAHAUGS");

    /**
     * <p>Refers to the presence of queensland nut and queensland nut products as listed
     * in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_QUEENSLAND_NUTS = m.createResource(NS + "AllergenTypeCode-QUEENSLAND_NUTS");

    /**
     * <p>Refers to the presence of Rockfish and its derivatives in the product, as
     * listed in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_ROCKFISH = m.createResource(NS + "AllergenTypeCode-ROCKFISH");

    /**
     * <p>Refers to the presence of Rockfish and its derivates in the product. Rockfish
     * is a common term for several species of fish, referring to their tendency
     * to hide among rocks. - Family/Genus/Species: (various) - Also known as: Aurora
     * Rockfish, Bank Rockfish, Black &amp; Yellow Rockfish, Black Rockfish, Blackgill
     * Rockfish, Blue Rockfish, Bocaccio, Bronzespotted Rockfish, Brown Rockfish,
     * Calico Rockfish, Canary Rockfish, Chameleon Rockfish, Chilipepper (Fish),
     * China Rockfish, Copper Rockfish, Cowcod, Darkblotched Rockfish, Dusky Rockfish,
     * Dwarf-red Rockfish, Flag Rockfish, Freckled Rockfish, Gopher Rockfish, Grass
     * Rockfish, Greenblotched Rockfish, Greenspotted Rockfish, Greenstriped Rockfish,
     * Halfbanded Rockfish, Harlequin Rockfish, Honeycomb Rockfish, Kelp Rockfish,
     * Mexican Rockfish, Northern Rockfish, Olive Rockfish, Pink Rockfish, Pinkrose
     * Rockfish, Puget Sound Rockfish, Pygmy Rockfish, Quillback Rockfish, Red Rockfish,
     * Redbanded Rockfish, Redstripe Rockfish, Rockfish, Rosethorn Rockfish, Rosy
     * Rockfish, Rougheye Rockfish, Semaphore Rockfish, Sharpchin Rockfish, Shortbelly
     * Rockfish, Shortraker Rockfish, Silvergray Rockfish, Speckled Rockfish, Splitnose
     * Rockfish, Squarespot Rockfish, Starry Rockfish, Stripetail Rockfish, Swordspine
     * Rockfish, Tiger Rockfish, Treefish, Vermilion Rockfish, Widow Rockfish, Yelloweye
     * Rockfish, Yellowmouth Rockfish, Yellowtail Rockfish - Disclaimer: Refers to
     * the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_ROF = m.createResource(NS + "AllergenTypeCode-ROF");

    /**
     * <p>Refers to the presence of rye and their derivatives in the product, as listed
     * in as listed in the regulations specified in AllergenSpecificationAgency and
     * AllergenSpecificationName</p>
     */
    public static final Resource AllergenTypeCode_RYE = m.createResource(NS + "AllergenTypeCode-RYE");

    /**
     * <p>Refers to the presence of almonds and its derivatives in the product. - Family/Genus/Species:
     * Prunus dulcis. - Also known as: - Disclaimer: Refers to the presence of the
     * allergen in the product, as listed in the regulations specified by an agency
     * and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_SA = m.createResource(NS + "AllergenTypeCode-SA");

    /**
     * <p>Refers to the presence of Sapucaia nuts and its derivatives in the product.
     * - Family/Genus/Species: Lecythis zabucajo. - Also known as: paradise nut.
     * - Disclaimer: Refers to the presence of the allergen in the product, as listed
     * in the regulations specified by an agency and specification or any local market
     * regulations.</p>
     */
    public static final Resource AllergenTypeCode_SAD = m.createResource(NS + "AllergenTypeCode-SAD");

    /**
     * <p>Refers to the presence of Salicylate, a salt or ester of salicylic acid.</p>
     */
    public static final Resource AllergenTypeCode_SALICYLATE = m.createResource(NS + "AllergenTypeCode-SALICYLATE");

    /**
     * <p>Refers to the presence of Salmon and their derivatives in the product, as
     * listed as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_SALMON = m.createResource(NS + "AllergenTypeCode-SALMON");

    /**
     * <p>Refers to the presence of Sardine and its derivates in the product. - Family/Genus/Species:
     * Clupeidae/(various) - Also known as: Australian Pilchard, European Pilchard,
     * Japanese Pilchard, Pacific Sardine, South African Pilchard, False Pilchard,
     * Fringescale Sardinella, Japanese Scaled Sardine, Oil Sardine, Orangespot Sardine,
     * Perforated-scale Sardine, Redear Sardine, Scaled Sardine, Spanish Sardine,
     * White Sardine - Disclaimer: Refers to the presence of the allergen in the
     * product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_SAR = m.createResource(NS + "AllergenTypeCode-SAR");

    /**
     * <p>Refers to the presence of Sardine and its derivatives in the product, as listed
     * in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_SARDINE = m.createResource(NS + "AllergenTypeCode-SARDINE");

    /**
     * <p>Refers to the presence of Seed products and its derivatives in the product
     * - Family/Genus/Species: - Also known as: - Disclaimer: Refers to the presence
     * of the allergen in the product, as listed in the regulations specified by
     * an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_SB = m.createResource(NS + "AllergenTypeCode-SB");

    /**
     * <p>Refers to the presence of Cashews and its derivatives in the product. - Family/Genus/Species:
     * Anacardium occidentale. - Also known as: Cashew nut. - Disclaimer: Refers
     * to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_SC = m.createResource(NS + "AllergenTypeCode-SC");

    /**
     * <p>Refers to the presence of Scallops and its derivates in the product. - Family/Genus/Species:
     * Pectinidae/Pecten/(various) - Also known as: Atlantic Calico Scallop, Atlantic
     * Scallop, Australian Scallop, Bay Scallop, Common Japanese Scallop, Farrer's
     * Scallop, Giant Scallop, Great Scallop, Iceland Scallop, Lined Scallop, New
     * Zealand Commercial Scallop, Nucleus Scallop, Pacific Calico Scallop, Paper
     * Scallop, Patagonian Scallop, Peruvian Calico Scallop, Peruvian Scallop, Queen
     * Scallop, Reddish Scallop, Red-ribbed Scallop, San Diego Scallop, Scallop,
     * Scallop Saucer, Sea Scallop, Southern Queen Scallop, Southern Scallop, Spiny
     * Scallop, Thailand Moon scallop, Weathervane Scallop, White Scallop, Zigzag
     * Scallop - Disclaimer: Refers to the presence of the allergen in the product,
     * as listed in the regulations specified by an agency and specification or any
     * local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_SCA = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SCA");

    /**
     * <p>Refers to the presence of Scallops and its derivatives in the product, as
     * listed in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_SCALLOPS = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SCALLOPS");

    /**
     * <p>Refers to the presence of beech nuts and its derivatives in the product. -
     * Family/Genus/Species: Fagus. - Also known as: Beech mast. - Disclaimer: Refers
     * to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_SD = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SD");

    /**
     * <p>Refers to the presence of Scad fish and its derivatives in the product. -
     * Family/Genus/Species: Carangidae (order Perciformes) - Also known as: Mackerel
     * Scad, Amberjack Scad, Jack Scad..etc.- Disclaimer: Refers to the presence
     * of the allergen in the product, as listed in the regulations specified by
     * an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_SDF = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SDF");

    /**
     * <p>Refers to the presence of butternuts and its derivatives in the product. -
     * Family/Genus/Species: Juglans cinerea. - Also known as: White walnut. - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_SE = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SE");

    /**
     * <p>Refers to the presence of seed products as listed in the regulations specified
     * in AllergenSpecificationAgency and AllergenSpecificationName</p>
     */
    public static final Resource AllergenTypeCode_SEED_PRODUCTS = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SEED_PRODUCTS");

    /**
     * <p>Refers to the presence of sesame seeds or their derivatives in the product,
     * as listed in as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName</p>
     */
    public static final Resource AllergenTypeCode_SESAME_SEEDS = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SESAME_SEEDS");

    /**
     * <p>Refers to the presence of Chinquapins and its derivatives in the product.
     * - Family/Genus/Species: Castanea pumila. - Also known as: Allegheny chinquapin,
     * American chinquapin and Dwarf Chetsnut. - Disclaimer: Refers to the presence
     * of the allergen in the product, as listed in the regulations specified by
     * an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_SF = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SF");

    /**
     * <p>Refers to the presence of Swai and its Derivatives in the product. - Family/Genus/Species:
     * Pangasiidae/Pangasianodon/hypophthalmus - Also known as: Sutchi Catfish, Swai,
     * Sutchi, Striped Pangasius, Tra - Disclaimer: Refers to the presence of the
     * allergen in the product, as listed in the regulations specified by an agency
     * and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_SFD = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SFD");

    /**
     * <p>Refers to the presence of Spinefoot and its Derivatives in the product. -
     * Family/Genus/Species: Siganidae/Siganus/(various) - Also known as: Bluespotted
     * Spinefish, Foxface, Pearly Spinefoot, Rabbitfish, Streaked Spinefoot, Spinefoot
     * - Disclaimer: Refers to the presence of the allergen in the product, as listed
     * in the regulations specified by an agency and specification or any local market
     * regulations.</p>
     */
    public static final Resource AllergenTypeCode_SFT = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SFT");

    /**
     * <p>Refers to the presence of Ginkgo nuts and its derivatives in the product.
     * - Family/Genus/Species: Ginkgo. - Also known as: Ginkgo seeds, Gingko. - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_SG = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SG");

    /**
     * <p>Refers to the presence of Hazelnuts and its derivatives in the product. -
     * Family/Genus/Species: Corylus. - Also known as: Cobnuts, Filberts. - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_SH = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SH");

    /**
     * <p>Refers to the presence of Shark and its derivatives in the product, as listed
     * in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_SHARK = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SHARK");

    /**
     * <p>Refers to the presence of Sheephead and its Derivatives in the product. -
     * Family/Genus/Species: Labridae/Semicossyphus/darwini or pulcher or reticulatus
     * - Also known as: Sheephead, California Sheephead, GalÃ¡pagos sheephead, Goldspot
     * sheepshead, Asian sheepshead wrasse - Disclaimer: Refers to the presence of
     * the allergen in the product, as listed in the regulations specified by an
     * agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_SHD = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SHD");

    /**
     * <p>Refers to the presence of Shea nuts [Vitellaria paradoxa C.F. Gaertn. (Sapotaceae)]
     * and their derivatives in the product, as listed as listed in the regulations
     * specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_SHEA_NUTS = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SHEA_NUTS");

    /**
     * <p>Refers to the presence of shellfish and its derivatives as listed in the regulations
     * specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_SHELLFISH = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SHELLFISH");

    /**
     * <p>Refers to the presence of Shark and its derivates in the product. - Family/Genus/Species:
     * (various) - Also known as: Atlantic Angel Shark, Basking Shark, Bigeye Thresher
     * Shark, Bignose Shark, Black Dogfish, Blacknose Shark, Blacktip Reef Shark,
     * Blacktip Shark, Blue Shark, Bonnethead, Brown Smoothhound, Bull Shark, Catshark,
     * Common Thresher Shark, Dogfish Shark, Dusky Shark, Finetooth Shark, Gray Reef
     * Shark, Great Hammerhead, Great White Shark, Grey Smoothhound, Hammerhead Shark,
     * Large Spotted Dogfish, Lemon Shark, Leopard Shark, Lesser Spotted Dogfish,
     * Longfin Mako Shark, Mako Shark, Narrowtoothed Shark, Night Shark, Northern
     * Dogfish, Pacific Angel Shark, Pelagic Thresher Shark, Porbeagle, Reef Shark,
     * Salmon Shark, Sandbar Shark, Scalloped Hammerhead, School Shark, Sevengill
     * Shark, Shortfin Mako Shark, Silky Shark, Silvertip Shark, Sixgill Shark, Smalleye
     * Hammerhead, Smalltail Shark, Smooth Dogfish, Smooth Hammerhead, Spinner Shark,
     * Spiny Dogfish, Thresher Shark, Tiger Shark, White Shark, Whitetip Reef Shark,
     * Whitetip Shark - Disclaimer: Refers to the presence of the allergen in the
     * product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_SHK = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SHK");

    /**
     * <p>Refers to the presence of Shrimp and their derivatives in the product, as
     * listed as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_SHRIMP = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SHRIMP");

    /**
     * <p>Refers to the presence of hickory nuts and its derivatives in the product.
     * - Family/Genus/Species: Carya. - Also known as: - Disclaimer: Refers to the
     * presence of the allergen in the product, as listed in the regulations specified
     * by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_SI = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SI");

    /**
     * <p>Refers to the presence of Shea nuts and its derivatives in the product. -
     * Family/Genus/Species: Vitellaria paradoxa. - Also known as: Shi nut. - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_SJ = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SJ");

    /**
     * <p>Refers to the presence of Pili nuts and its derivatives in the product. -
     * Family/Genus/Species: Canarium ovatum. - Also known as: Pili seeds. - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_SK = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SK");

    /**
     * <p>Refers to the presence of Lichee nuts and its derivatives in the product.
     * - Family/Genus/Species: Litchi chinensis. - Also known as: Lichee seeds. -
     * Disclaimer: Refers to the presence of the allergen in the product, as listed
     * in the regulations specified by an agency and specification or any local market
     * regulations.</p>
     */
    public static final Resource AllergenTypeCode_SL = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SL");

    /**
     * <p>Refers to the presence of Macadamia nuts and its derivatives in the product.
     * - Family/Genus/Species: Macadamia. - Also known as: Queensland nut, Bush nut,
     * Maroochi nut, Bauple nut and Hawaii nut. - Disclaimer: Refers to the presence
     * of the allergen in the product, as listed in the regulations specified by
     * an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_SM = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SM");

    /**
     * <p>Refers to the presence of Smelt and its derivatives in the product, as listed
     * in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_SMELT = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SMELT");

    /**
     * <p>Refers to the presence of Schoolmaster and its Derivatives in the product.
     * - Family/Genus/Species: Lutjanidae/Lutjanus/apodus - Also known as: Schoolmaster,
     * Schoolmaster snapper - Disclaimer: Refers to the presence of the allergen
     * in the product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_SMF = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SMF");

    /**
     * <p>Refers to the presence of Salmon roe and its derivatives in the product, as
     * listed in in the product. - Family/Genus/Species: Salmo - Also known as: Salmon
     * caviar, red caviar, or ikura - Disclaimer: Refers to the presence of the allergen
     * in the product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_SMR = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SMR");

    /**
     * <p>Refers to the presence of Smelt and its derivates in the product. - Family/Genus/Species:
     * Osmeridae/(various) - Also known as: Arctic Smelt, Argetine Smelt, Austrailian
     * Smelt, Ayu, Big-Scale Smelt, Cucumberfish, Deepsea Smelt, Delta Smelt, Eulachon,
     * European Smelt, Freshwater Smelt, Great Silver Smelt, Herring Smelt, Jacksmelt,
     * Lesser Silver Smelt, Longfin Smelt, New Zealand Smelt, Night Smelt, Rainbow
     * Smelt, Seep-sea Smelt, Smelt, Surf Smelt, Topsmelt, Typical Smelt, Whitebait
     * Smelt - Disclaimer: Refers to the presence of the allergen in the product,
     * as listed in the regulations specified by an agency and specification or any
     * local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_SMT = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SMT");

    /**
     * <p>Refers to the presence of chestnuts and its derivatives in the product. -
     * Family/Genus/Species: Castanea. - Also known as: Sardian nut, Jupiter's nut,
     * and Spanish chestnut. - Disclaimer: Refers to the presence of the allergen
     * in the product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_SN = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SN");

    /**
     * <p>Refers to the presence of Snapper and their derivatives in the product, as
     * listed as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_SNAPPER = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SNAPPER");

    /**
     * <p>Refers to the presence of coconuts and its derivatives in the product. - Family/Genus/Species:
     * Cocos nucifera. - Also known as: - Disclaimer: Refers to the presence of the
     * allergen in the product, as listed in the regulations specified by an agency
     * and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_SO = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SO");

    /**
     * <p>Refers to the presence of Sole and their derivatives in the product, as listed
     * as listed in the regulations specified in AllergenSpecificationAgency and
     * AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_SOLE = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SOLE");

    /**
     * <p>Refers to the presence of soybeans and their derivatives in the product, as
     * listed in as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName</p>
     */
    public static final Resource AllergenTypeCode_SOYBEANS = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SOYBEANS");

    /**
     * <p>Refers to the presence of Pecan nuts and its derivatives in the product. -
     * Family/Genus/Species: Carya illinoinensis. - Also known as: - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_SP = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SP");

    /**
     * <p>Refers to the presence of spelt and spelt products (gluten containing grain)
     * as listed in the regulations specified in AllergenSpecificationAgency and
     * AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_SPELT = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SPELT");

    /**
     * <p>Refers to the presence of Scorpionfish and its Derivatives in the product.
     * - Family/Genus/Species: Scorpaenidae/(various) - Also known as: California
     * Scorpinfish, Dragonfish, False Jacopever, Firefish, Hunchback Scorpionfish,
     * Large-headed Scorpionfish, Lionfish, Orange Scorpionfish, Plumed Scorpionfish,
     * Stingfish, Turkeyfish - Disclaimer: Refers to the presence of the allergen
     * in the product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_SPF = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SPF");

    /**
     * <p>Refers to the presence of Squid (Calamari) and its derivates in the product.
     * - Family/Genus/Species: (various) - Also known as: Angola Flying Squid, Argentine
     * Shortfin Squid, Armhook Squid , Arrow Squid, Atlantic Brief Squid, Beka Squid,
     * Bigeye Squid, Bigfin Reef Squid, Bigfin Squid , Bobtail Squid , Bottletail
     * Squid , Bush-club Squid, Calamari, California Market Squid, Cape Horn Squid,
     * Caribbean Reef Squid, Cock-eyed Squid , Cuttlefish , Dwarf Bobtail Squid,
     * European Flying Squid, European Squid, Fire Squid , Firefly Squid , Flying
     * Squid, Giant Squid , Glacial Squid , Glass Squid, Grimaldi scaled Squid ,
     * Hooked Squid , Indian Squid, Japanese Flying Squid, Joubin's Squid , Jumbo
     * Squid, Longfin Inshore Squid, Magistrate Armhook Squid, Midsize Squid, Mitre
     * Squid, Neritic Squid, Northern Shortfin Squid, Octopus Squid , Panama Brief
     * Squid, Patagonian Inshore Squid, Purpleback Flying Squid, Pygmy Squid , Pyjama
     * Squid , Ram's horn Squid , Sharpear enope Squid , Southern Reef Squid, Southern
     * Shortfin Squid, Stout Bobtail Squid, Wellington Flying Squid, Whip-lash Squid
     * - Disclaimer: Refers to the presence of the allergen in the product, as listed
     * in the regulations specified by an agency and specification or any local market
     * regulations.</p>
     */
    public static final Resource AllergenTypeCode_SQU = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SQU");

    /**
     * <p>Refers to the presence of Squid (Calamari) and its derivatives in the product,
     * as listed in the regulations specified in AllergenSpecificationAgency and
     * AllergenSpecificationName.</p>
     */
    public static final Resource ___INSTANCE1 = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SQUID_%28CALAMARI%29");

    /**
     * <p>Refers to the presence of brazil nuts and its derivatives in the product.
     * - Family/Genus/Species: Bertholletia excelsa. - Also known as: Castanha. -
     * Disclaimer: Refers to the presence of the allergen in the product, as listed
     * in the regulations specified by an agency and specification or any local market
     * regulations.</p>
     */
    public static final Resource AllergenTypeCode_SR = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SR");

    /**
     * <p>Refers to the presence of Sunflower seeds or its derivatives in the product
     * in the product. - Family/Genus/Species: Helianthus - Also known as: - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_SS = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SS");

    /**
     * <p>Refers to the presence of Pistachio and its derivatives in the product. -
     * Family/Genus/Species: Pistacia. - Also known as: - Disclaimer: Refers to the
     * presence of the allergen in the product, as listed in the regulations specified
     * by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_ST = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-ST");

    /**
     * <p>Refers to the presence of Sturgeon and its derivates in the product. - Family/Genus/Species:
     * Acipenseridae/(various) - Also known as: Adriatic Sturgeon, Alabama Sturgeon,
     * Amu Darya Sturgeon, Amur Sturgeon, Atlantic Sturgeon, Baikal Sturgeon, Beluga,
     * Beluga Sturgeon, Bester, Chinese Sturgeon, Dwarf Sturgeon, European sea Sturgeon,
     * Fringebarbel Sturgeon, Green Sturgeon, Gulf Sturgeon, Japanese Sturgeon, Kaluga
     * Sturgeon, Lake Sturgeon, Pallid Sturgeon, Persian Sturgeon, Russian Sturgeon,
     * Sakhalin Sturgeon, Shortnose Sturgeon, Shovelnose Sturgeon, Siberian Sturgeon,
     * Starry Sturgeon, Stellate Sturgeon, Sterlet, Syr Darya Sturgeon, Thorn Sturgeon,
     * White Sturgeon, Yangtze Sturgeon - Disclaimer: Refers to the presence of the
     * allergen in the product, as listed in the regulations specified by an agency
     * and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_STG = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-STG");

    /**
     * <p>Refers to the presence of Sturgeon and its derivatives in the product, as
     * listed in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_STURGEON = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-STURGEON");

    /**
     * <p>Refers to the presence of Salicylate and its derivatives in the product. -
     * Family/Genus/Species: - Also known as: Salicylic acid. - Disclaimer: Refers
     * to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_SU = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SU");

    /**
     * <p>Refers to the presence of sulphur dioxide and sulphites as listed in the regulations
     * specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_SULPHUR_DIOXIDE = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SULPHUR_DIOXIDE");

    /**
     * <p>Refers to the presence of Sunflower Seeds or their derivatives in the product
     * as listed in the regulations specified in AllergenSpecificationAgency and
     * AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_SUNFLOWER_SEEDS = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SUNFLOWER_SEEDS");

    /**
     * <p>Refers to the presence of Walnuts and its derivatives in the product. - Family/Genus/Species:
     * Juglans. - Also known as: - Disclaimer: Refers to the presence of the allergen
     * in the product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_SW = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SW");

    /**
     * <p>Refers to the presence of Swordfish and their derivatives in the product,
     * as listed as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_SWORDFISH = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SWORDFISH");

    /**
     * <p>Refers to the presence of pulses in the product. This excludes green beans
     * and green peas, which are considered vegetable crops. Also excluded are crops
     * that are mainly grown for oil extraction. - Family/Genus/Species: Fabaceae.
     * - Also known as: Dry seed legume Crops. - Disclaimer: Refers to the presence
     * of the allergen in the product, as listed in the regulations specified by
     * an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_SX = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-SX");

    /**
     * <p>Refers to the presence of 3-Aminophenol in the product. - CAS Registry Number:
     * 591-27-5 - Also known as: - Disclaimer: Refers to the presence of the allergen
     * in the product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_TA = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-TA");

    /**
     * <p>Refers to the presence of Toluene-2,5-diamine in the product. - CAS Registry
     * Number: 95-70-5 - Also known as: Toluene-2,5-diamine - Disclaimer: Refers
     * to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_TD = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-TD");

    /**
     * <p>Refers to the presence of Tilefish and its Derivatives in the product. - Family/Genus/Species:
     * Malacanthidae/(various) - Also known as: Blue Tilefish, Blueline Tilefish,
     * Golden Tilefish, Goldface Tilefish, Ocean Whitefish, Pacific Golden-eyed Tilefish,
     * Pacific Sandperch, Sand Tilefish, Tilefish - Disclaimer: Refers to the presence
     * of the allergen in the product, as listed in the regulations specified by
     * an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_TFD = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-TFD");

    /**
     * <p>Refers to the presence of Tilapia and their derivatives in the product, as
     * listed as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_TILAPIA = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-TILAPIA");

    /**
     * <p>Refers to the presence of Toluene-2,5-diamine as listed in the regulations
     * specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource DIAMINE = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-TOLUENE-2%2C5-DIAMINE");

    /**
     * <p>Refers to the presence of Triticale and its derivatives in the product. -
     * Family/Genus/Species: Ã— Triticosecale. - Also known as: Ryewheat. - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_TR = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-TR");

    /**
     * <p>Refers to the presence of tree nuts and their derivatives in the product,
     * as listed in the regulations specified in AllergenSpecificationAgency and
     * AllergenSpecificationName. Tree nuts can include almonds, hazelnut, walnut,
     * cashews, etc.</p>
     */
    public static final Resource AllergenTypeCode_TREE_NUTS = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-TREE_NUTS");

    /**
     * <p>Contains Traces of Tree Nuts, i.e. almonds, various kinds of tree nuts.</p>
     */
    public static final Resource AllergenTypeCode_TREE_NUT_TRACES = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-TREE_NUT_TRACES");

    /**
     * <p>Refers to the presence of Triticale and their derivatives as listed in the
     * regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_TRITICALE = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-TRITICALE");

    /**
     * <p>Refers to the presence of Trout and their derivatives in the product, as listed
     * as listed in the regulations specified in AllergenSpecificationAgency and
     * AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_TROUT = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-TROUT");

    /**
     * <p>Refers to the presence of Tomato and its derivatives in the product. - Family/Genus/Species:
     * Solanum lycopersicum. - Also known as: - Disclaimer: Refers to the presence
     * of the allergen in the product, as listed in the regulations specified by
     * an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_TTD = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-TTD");

    /**
     * <p>Refers to the presence of Tuna and their derivatives in the product, as listed
     * as listed in the regulations specified in AllergenSpecificationAgency and
     * AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_TUNA = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-TUNA");

    /**
     * <p>Refers to the presence of Turbot and its derivates in the product. - Family/Genus/Species:
     * Scophthalmidae/Scophthalmus/S. maximus - Also known as: Brat, Breet, Britt,
     * Butt, Diamond Turbot, Greenland Turbot, Hornyhead Turbot, New Zealand Turbot,
     * Spottail Spiny Turbot, Spotted Turbot, Spring Turbot, Turbot - Disclaimer:
     * Refers to the presence of the allergen in the product, as listed in the regulations
     * specified by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_TUR = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-TUR");

    /**
     * <p>Refers to the presence of Turbot and its derivatives in the product, as listed
     * in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_TURBOT = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-TURBOT");

    /**
     * <p>Refers to the presence of molluscs and its derivates in the product. - Family/Genus/Species:
     * Mollusca (various) - Also known as: (various) - Disclaimer: Refers to the
     * presence of the allergen in the product, as listed in the regulations specified
     * by an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_UM = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-UM");

    /**
     * <p>Refers to the presence of Shellfish in the product. Shellfish is a colloquial
     * and fisheries term for exoskeleton-bearing aquatic invertebrates used as food,
     * including various species of molluscs, crustaceans, and echinoderms. - Family/Genus/Species:
     * (various) - Also known as: (various) - Disclaimer: Refers to the presence
     * of the allergen in the product, as listed in the regulations specified by
     * an agency and specification or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_UN = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-UN");

    /**
     * <p>Refers to the presence of Wheat and its derivatives in the product. - Family/Genus/Species:
     * Triticum. - Also known as: - Disclaimer: Refers to the presence of the allergen
     * in the product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_UW = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-UW");

    /**
     * <p>Refers to the presence of Walleye and their derivatives in the product, as
     * listed as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_WALLEYE = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-WALLEYE");

    /**
     * <p>Refers to the presence of walnut and walnut products as listed in the regulations
     * specified in AllergenSpecificationAgency and AllergenSpecificationName</p>
     */
    public static final Resource AllergenTypeCode_WALNUTS = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-WALNUTS");

    /**
     * <p>Refers to the presence of Wolffish and its Derivatives in the product. - Family/Genus/Species:
     * Anarhichadidae/Anarhichas or Anarrhichthys/(various) - Also known as: Atlantic
     * Wolffish, Bering Wolffish, Northern Wolffish, Sea wolves, Spotted Wolffish,
     * Wolffish - Disclaimer: Refers to the presence of the allergen in the product,
     * as listed in the regulations specified by an agency and specification or any
     * local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_WFD = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-WFD");

    /**
     * <p>Refers to the presence of wheat and their derivatives in the product, as listed
     * in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName</p>
     */
    public static final Resource AllergenTypeCode_WHEAT = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-WHEAT");

    /**
     * <p>Refers to the presence of Whelks and its derivatives in the product, as listed
     * in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_WHELKS = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-WHELKS");

    /**
     * <p>Refers to the presence of Whitefish and their derivatives in the product,
     * as listed as listed in the regulations specified in AllergenSpecificationAgency
     * and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_WHITEFISH = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-WHITEFISH");

    /**
     * <p>Refers to the presence of Whiting and its derivatives in the product, as listed
     * in the regulations specified in AllergenSpecificationAgency and AllergenSpecificationName.</p>
     */
    public static final Resource AllergenTypeCode_WHITING = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-WHITING");

    /**
     * <p>Refers to the presence of Whelks and its derivates in the product. - Family/Genus/Species:
     * Buccinidae or Ranellidae or Trochidae/(various) - Also known as: Busycon Whelk,
     * Channeled Whelk, Common Periwinkle, Dog Whelk, Maculated Ivory Whelk, Magpie
     * Whelk, Pear Whelk, Scungili, Veined Rapa Whelk, West Indian Top Shell Whelk,
     * Whelk, Wilk - Disclaimer: Refers to the presence of the allergen in the product,
     * as listed in the regulations specified by an agency and specification or any
     * local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_WHK = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-WHK");

    /**
     * <p>Refers to the presence of Whiting and its derivates in the product. - Family/Genus/Species:
     * Gadidae or Sciaenidae or Sillaginidae/(various) - Also known as: Argentine
     * Hake, Blue Whiting, Cape Hake, Carolina Whiting, Chilean Hake, Deep-water
     * Cape Hake, European Hake, European Whiting, Flat Head Sillago, Hoki, Japanese
     * sillago, Japanese Whiting, King George Whiting, King Whiting, Northern Whiting,
     * Pacific Whiting, Sand Whiting, School Whiting, Sea Mullet, Silver Hake, Silver
     * Sillago, Southern Blue Whiting, Southern Hake, Southern Kingcroaker, Southern
     * Kingfish - Disclaimer: Refers to the presence of the allergen in the product,
     * as listed in the regulations specified by an agency and specification or any
     * local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_WHT = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-WHT");

    /**
     * <p>Does not contain declaration obligatory allergens in the product. - Also known
     * as: - Disclaimer: Refers to the absence of allergens in the product, as listed
     * in the regulations specified by an agency and specification or any local market
     * regulations.</p>
     */
    public static final Resource AllergenTypeCode_X99 = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-X99");

    /**
     * <p>Refers to the presence of Yam and its derivatives in the product. - Family/Genus/Species:
     * Dioscorea. - Also known as: - Disclaimer: Refers to the presence of the allergen
     * in the product, as listed in the regulations specified by an agency and specification
     * or any local market regulations.</p>
     */
    public static final Resource AllergenTypeCode_YMD = m.createResource("https://ref.gs1.org/voc/AllergenTypeCode-YMD");

    /**
     * <p>The height above the surface of a defined geoid, typically the World Geodetic
     * System (WGS 84) geoid for measurements from location sensors using satellite
     * technology (e.g. GPS, Glonass, Galileo) , which approximates to the surface
     * of the earth at sea level. Positive values indicate height above the geoid
     * surface. Negative values indicate depth below the geoid surface. SI Units:
     * metres</p>
     */
    public static final Resource Altitude = m.createResource("https://ref.gs1.org/voc/Altitude");

    /**
     * <p>The amount of substance that contains a number of atoms, molecules etc. that
     * is equal to the Avogadro constant. SI Units: mole</p>
     */
    public static final Resource AmountOfSubstance = m.createResource("https://ref.gs1.org/voc/AmountOfSubstance");

    /**
     * <p>The concentration of a solution expressed as the number of moles of dissolved
     * substance per unit volume of solution. SI Units: mole per cubic metre</p>
     */
    public static final Resource AmountOfSubstancePerUnitVolume = m.createResource("https://ref.gs1.org/voc/AmountOfSubstancePerUnitVolume");

    public static final Resource AnatomicalFormCode_BELLY = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-BELLY");

    public static final Resource AnatomicalFormCode_BLOOD = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-BLOOD");

    public static final Resource AnatomicalFormCode_BONE = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-BONE");

    public static final Resource AnatomicalFormCode_BRAIN = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-BRAIN");

    public static final Resource AnatomicalFormCode_CARCASS_NONPOULTRY = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-CARCASS_NONPOULTRY");

    public static final Resource AnatomicalFormCode_DIAPHRAM = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-DIAPHRAM");

    public static final Resource AnatomicalFormCode_ESOPHAGUS = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-ESOPHAGUS");

    public static final Resource AnatomicalFormCode_FAT = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-FAT");

    public static final Resource AnatomicalFormCode_FEET = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-FEET");

    public static final Resource AnatomicalFormCode_FOREQUARTER = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-FOREQUARTER");

    public static final Resource AnatomicalFormCode_GIZZARD = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-GIZZARD");

    public static final Resource AnatomicalFormCode_HEAD = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-HEAD");

    public static final Resource AnatomicalFormCode_HEADMEAT_CHEEKMEAT = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-HEADMEAT_CHEEKMEAT");

    public static final Resource AnatomicalFormCode_HEART = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-HEART");

    public static final Resource AnatomicalFormCode_HINDQUARTER = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-HINDQUARTER");

    public static final Resource AnatomicalFormCode_HORN = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-HORN");

    public static final Resource AnatomicalFormCode_INTESTINE_LARGE = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-INTESTINE_LARGE");

    public static final Resource AnatomicalFormCode_INTESTINE_SMALL = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-INTESTINE_SMALL");

    public static final Resource AnatomicalFormCode_KIDNEY = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-KIDNEY");

    public static final Resource AnatomicalFormCode_LIPS = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-LIPS");

    public static final Resource AnatomicalFormCode_LIVER = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-LIVER");

    public static final Resource AnatomicalFormCode_LUNGS = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-LUNGS");

    public static final Resource AnatomicalFormCode_MIXED_OFFAL = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-MIXED_OFFAL");

    public static final Resource AnatomicalFormCode_MIXED_PARTS_FOR_GROUNDING_MINCING = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-MIXED_PARTS_FOR_GROUNDING_MINCING");

    public static final Resource AnatomicalFormCode_NECK = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-NECK");

    public static final Resource AnatomicalFormCode_PANCREAS = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-PANCREAS");

    public static final Resource AnatomicalFormCode_SKIN = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-SKIN");

    public static final Resource AnatomicalFormCode_STOMACH = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-STOMACH");

    public static final Resource AnatomicalFormCode_TAIL = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-TAIL");

    public static final Resource AnatomicalFormCode_TENDONS = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-TENDONS");

    public static final Resource AnatomicalFormCode_TESTICLES = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-TESTICLES");

    public static final Resource AnatomicalFormCode_THYMUS = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-THYMUS");

    public static final Resource AnatomicalFormCode_TONGUE = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-TONGUE");

    public static final Resource AnatomicalFormCode_TRIPE = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-TRIPE");

    public static final Resource AnatomicalFormCode_UNCLASSIFIED = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-UNCLASSIFIED");

    public static final Resource AnatomicalFormCode_UNIDENTIFIED = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-UNIDENTIFIED");

    public static final Resource AnatomicalFormCode_WHOLE_BIRD = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-WHOLE_BIRD");

    public static final Resource AnatomicalFormCode_WHOLE_MUSCLE_NONPOULTRY_MEATPART_PIECE = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-WHOLE_MUSCLE_NONPOULTRY_MEATPART_PIECE");

    public static final Resource AnatomicalFormCode_WHOLE_MUSCLE_POULTRY_PART = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-WHOLE_MUSCLE_POULTRY_PART");

    public static final Resource AnatomicalFormCode_WHOLE_MUSCLE_PRIMAL = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-WHOLE_MUSCLE_PRIMAL");

    public static final Resource AnatomicalFormCode_WHOLE_MUSCLE_RIBCUT = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-WHOLE_MUSCLE_RIBCUT");

    public static final Resource AnatomicalFormCode_WHOLE_MUSCLE_ROASTCUT = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-WHOLE_MUSCLE_ROASTCUT");

    public static final Resource AnatomicalFormCode_WHOLE_MUSCLE_SLICE_CHOPCUT = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-WHOLE_MUSCLE_SLICE_CHOPCUT");

    public static final Resource AnatomicalFormCode_WHOLE_MUSCLE_SLICE_CUTLET = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-WHOLE_MUSCLE_SLICE_CUTLET");

    public static final Resource AnatomicalFormCode_WHOLE_MUSCLE_STEAK_CHOPCUT = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-WHOLE_MUSCLE_STEAK_CHOPCUT");

    public static final Resource AnatomicalFormCode_WHOLE_MUSCLE_SUBPRIMAL = m.createResource("https://ref.gs1.org/voc/AnatomicalFormCode-WHOLE_MUSCLE_SUBPRIMAL");

    /**
     * <p>The inclination of one line or plane to another. Units: degrees, radians,
     * etc.</p>
     */
    public static final Resource Angle = m.createResource("https://ref.gs1.org/voc/Angle");

    /**
     * <p>The rate of change of angular velocity with respect to time. SI Units: radian
     * per second per second</p>
     */
    public static final Resource AngularAcceleration = m.createResource("https://ref.gs1.org/voc/AngularAcceleration");

    /**
     * <p>The integral over time of the torque acting on a body that is free to rotate,
     * resulting in a corresponding change in its angular momentum. SI Units: newton
     * metre second, kilogram metre squared per second</p>
     */
    public static final Resource AngularMomentum = m.createResource("https://ref.gs1.org/voc/AngularMomentum");

    /**
     * <p>The rate of change of angle with respect to time; a measure of the number
     * of revolutions per unit time. SI Units: radian per second</p>
     */
    public static final Resource AngularVelocity = m.createResource("https://ref.gs1.org/voc/AngularVelocity");

    /**
     * <p>The amount of two-dimensional space occupied, measured in units of length
     * squared. SI Units: square metre</p>
     */
    public static final Resource Area = m.createResource("https://ref.gs1.org/voc/Area");

    /**
     * <p>An organization authorized by the state to act as a single entity and recognized
     * as such in law for certain purposes.</p>
     */
    public static final Resource BusinessEntityType_CORPORATION = m.createResource("https://ref.gs1.org/voc/BusinessEntityType-CORPORATION");

    /**
     * <p>An organization established, maintained, or conducted for the purpose of making
     * a profit.</p>
     */
    public static final Resource BusinessEntityType_FOR_PROFIT = m.createResource("https://ref.gs1.org/voc/BusinessEntityType-FOR_PROFIT");

    /**
     * <p>A government agency is a permanent or semi-permanent organization within a
     * regional, national or state government. These organizations are responsible
     * for oversight or administration of a specific sector, field, or area of study.</p>
     */
    public static final Resource BusinessEntityType_GOVERNMENT_AGENCY = m.createResource("https://ref.gs1.org/voc/BusinessEntityType-GOVERNMENT_AGENCY");

    /**
     * <p>A company created to buy, receive or hold the shares, stock or other assets
     * of other companies, which the holding company typically then controls. A holding
     * company is sometimes referred to as a 'parent' company.</p>
     */
    public static final Resource BusinessEntityType_HOLDING_COMPANY = m.createResource("https://ref.gs1.org/voc/BusinessEntityType-HOLDING_COMPANY");

    /**
     * <p>Individual ownership of business means that a business is owned by a single
     * person.</p>
     */
    public static final Resource BusinessEntityType_INDIVIDUALLY_OWNED_ENTERPRISE = m.createResource("https://ref.gs1.org/voc/BusinessEntityType-INDIVIDUALLY_OWNED_ENTERPRISE");

    /**
     * <p>A joint venture is a business arrangement in which two or more parties agree
     * to pool their resources for the purpose of accomplishing a specific task.
     * A joint venture can be an informal partnership in the colloquial sense of
     * the word, or it may also take on nearly any other kind of formal legal structure.
     * A key characteristic of joint ventures is that the forming parties share ownership,
     * returns, risk and governance.</p>
     */
    public static final Resource BusinessEntityType_JOINT_VENTURE = m.createResource("https://ref.gs1.org/voc/BusinessEntityType-JOINT_VENTURE");

    /**
     * <p>A limited liability company is a form of a private limited company. It is
     * a business structure that can combine the pass-through taxation of a partnership
     * or sole proprietorship with the limited liability of a corporation.</p>
     */
    public static final Resource BusinessEntityType_LLC = m.createResource("https://ref.gs1.org/voc/BusinessEntityType-LLC");

    /**
     * <p>An organization organized and operated for a collective, public or social
     * benefit, in contrast with an entity that operates as a business aiming to
     * generate a profit for its owners.Â Not-for-profit entities are often formed
     * in order to take advantage of tax-exempt status and other benefits granted
     * by governments to entities that meet the requirements of not-for-profit laws
     * and regulations.</p>
     */
    public static final Resource BusinessEntityType_NOT_FOR_PROFIT = m.createResource("https://ref.gs1.org/voc/BusinessEntityType-NOT_FOR_PROFIT");

    /**
     * <p>A broad term for businesses that are managed by independent companies or private
     * individuals rather than by the state.</p>
     */
    public static final Resource BusinessEntityType_PRIVATE_ENTERPRISE = m.createResource("https://ref.gs1.org/voc/BusinessEntityType-PRIVATE_ENTERPRISE");

    /**
     * <p>A state-owned enterprise (SOE) is a legal entity that is created or managed
     * by a government in order to partake in commercial activities on the government's
     * behalf. It can be either wholly or partially owned by a government and is
     * typically earmarked to participate in specific commercial activities.</p>
     */
    public static final Resource BusinessEntityType_SOE = m.createResource("https://ref.gs1.org/voc/BusinessEntityType-SOE");

    /**
     * <p>The capacitance of an isolated conductor is defined as the ratio of the total
     * charge on it to its electric potential. SI Units: farad</p>
     */
    public static final Resource Capacitance = m.createResource("https://ref.gs1.org/voc/Capacitance");

    /**
     * <p>This certification instance is declared to be in effect for the certified
     * subject.</p>
     */
    public static final Resource CertificationStatus_ACTIVE = m.createResource("https://ref.gs1.org/voc/CertificationStatus-ACTIVE");

    /**
     * <p>This certification instance is declared to be no longer in effect.</p>
     */
    public static final Resource CertificationStatus_INACTIVE = m.createResource("https://ref.gs1.org/voc/CertificationStatus-INACTIVE");

    public static final Resource CheeseFirmnessCode_EXTRA_HARD = m.createResource("https://ref.gs1.org/voc/CheeseFirmnessCode-EXTRA_HARD");

    public static final Resource CheeseFirmnessCode_FIRM_SEMIHARD = m.createResource("https://ref.gs1.org/voc/CheeseFirmnessCode-FIRM_SEMIHARD");

    public static final Resource CheeseFirmnessCode_HARD = m.createResource("https://ref.gs1.org/voc/CheeseFirmnessCode-HARD");

    public static final Resource CheeseFirmnessCode_SOFT = m.createResource("https://ref.gs1.org/voc/CheeseFirmnessCode-SOFT");

    public static final Resource CheeseFirmnessCode_UNIDENTIFIED = m.createResource("https://ref.gs1.org/voc/CheeseFirmnessCode-UNIDENTIFIED");

    /**
     * <p>Assigned by buyer.</p>
     */
    public static final Resource ColourCodeList_BUYER = m.createResource("https://ref.gs1.org/voc/ColourCodeList-BUYER");

    /**
     * <p>International Federation for Produce Standards.</p>
     */
    public static final Resource ColourCodeList_IFPS = m.createResource("https://ref.gs1.org/voc/ColourCodeList-IFPS");

    /**
     * <p>Natural Colour System.</p>
     */
    public static final Resource ColourCodeList_NCS = m.createResource("https://ref.gs1.org/voc/ColourCodeList-NCS");

    /**
     * <p>National Retail Federation.</p>
     */
    public static final Resource ColourCodeList_NRF = m.createResource("https://ref.gs1.org/voc/ColourCodeList-NRF");

    /**
     * <p>Pantone Hexachrome.</p>
     */
    public static final Resource ColourCodeList_PANTONE_HEXACHROME = m.createResource("https://ref.gs1.org/voc/ColourCodeList-PANTONE_HEXACHROME");

    /**
     * <p>Pantone Matching System.</p>
     */
    public static final Resource ColourCodeList_PANTONE_MATCHING = m.createResource("https://ref.gs1.org/voc/ColourCodeList-PANTONE_MATCHING");

    /**
     * <p>Pantone Process Colour System.</p>
     */
    public static final Resource ColourCodeList_PANTONE_PROCESS_COLOUR = m.createResource("https://ref.gs1.org/voc/ColourCodeList-PANTONE_PROCESS_COLOUR");

    /**
     * <p>Pantone Textile. Same as GS1 ColourCodeList Code 5</p>
     */
    public static final Resource ColourCodeList_PANTONE_TEXTILE = m.createResource("https://ref.gs1.org/voc/ColourCodeList-PANTONE_TEXTILE");

    /**
     * <p>Farbsystem RAL Colour System.</p>
     */
    public static final Resource ColourCodeList_RAL = m.createResource("https://ref.gs1.org/voc/ColourCodeList-RAL");

    /**
     * <p>Assigned by seller.</p>
     */
    public static final Resource ColourCodeList_SELLER = m.createResource("https://ref.gs1.org/voc/ColourCodeList-SELLER");

    /**
     * <p>Waren Wirtschafts System.</p>
     */
    public static final Resource ColourCodeList_WWS = m.createResource("https://ref.gs1.org/voc/ColourCodeList-WWS");

    /**
     * <p>The declaration of the cautionary statements related to caffeine. Caffeine
     * is a central nervous system stimulant of the methylxanthine class.</p>
     */
    public static final Resource CompulsoryAdditionalLabelInformationTypeCode_CAFFEINE = m.createResource("https://ref.gs1.org/voc/CompulsoryAdditionalLabelInformationTypeCode-CAFFEINE");

    /**
     * <p>The declaration of the amount of water added and retained in a raw single-ingredient
     * meat product due to evisceration contact with water, in excess of naturally
     * occurring moisture.</p>
     */
    public static final Resource CompulsoryAdditionalLabelInformationTypeCode_MEAT_POULTRY_WATER_RETENTION = m.createResource("https://ref.gs1.org/voc/CompulsoryAdditionalLabelInformationTypeCode-MEAT_POULTRY_WATER_RETENTION");

    /**
     * <p>The declaration of the specific and measurable health benefit conferred by
     * the prebiotic substance. Prebiotics are foods (typically high-fiber foods)
     * that act as food for human microflora. Prebiotics are used with the intention
     * of improving the balance of these microorganisms.</p>
     */
    public static final Resource CompulsoryAdditionalLabelInformationTypeCode_PREBIOTIC = m.createResource("https://ref.gs1.org/voc/CompulsoryAdditionalLabelInformationTypeCode-PREBIOTIC");

    /**
     * <p>The declaration of probiotic health claims and the composition of probiotic
     * microorganisms.</p>
     */
    public static final Resource CompulsoryAdditionalLabelInformationTypeCode_PROBIOTICS = m.createResource("https://ref.gs1.org/voc/CompulsoryAdditionalLabelInformationTypeCode-PROBIOTICS");

    /**
     * <p>The declaration of supplemented food product contains cautionary statement
     * that the supplemented food may pose a risk to consumers.</p>
     */
    public static final Resource CompulsoryAdditionalLabelInformationTypeCode_SUPPLEMENTED_FOODS_CAUTION = m.createResource("https://ref.gs1.org/voc/CompulsoryAdditionalLabelInformationTypeCode-SUPPLEMENTED_FOODS_CAUTION");

    /**
     * <p>The declaration of additive sweeteners that are used to impart sweet taste
     * to food.</p>
     */
    public static final Resource CompulsoryAdditionalLabelInformationTypeCode_SWEETENERS = m.createResource("https://ref.gs1.org/voc/CompulsoryAdditionalLabelInformationTypeCode-SWEETENERS");

    /**
     * <p>The ratio of the current in the conductor to the potential difference between
     * its ends; reciprocal of resistance. SI Units: siemen</p>
     */
    public static final Resource Conductance = m.createResource("https://ref.gs1.org/voc/Conductance");

    /**
     * <p>A measure of how strongly a material conducts electric current. The ratio
     * of the current density to the electric field that causes the current to flow.
     * SI Units: siemen per metre</p>
     */
    public static final Resource Conductivity = m.createResource("https://ref.gs1.org/voc/Conductivity");

    public static final Resource ConsumerLifestageCode_ADULT = m.createResource("https://ref.gs1.org/voc/ConsumerLifestageCode-ADULT");

    public static final Resource ConsumerLifestageCode_ALL_AGES = m.createResource("https://ref.gs1.org/voc/ConsumerLifestageCode-ALL_AGES");

    public static final Resource ConsumerLifestageCode_BABY_INFANT = m.createResource("https://ref.gs1.org/voc/ConsumerLifestageCode-BABY_INFANT");

    public static final Resource ConsumerLifestageCode_CHILD_1_To_2_YEARS = m.createResource("https://ref.gs1.org/voc/ConsumerLifestageCode-CHILD_1_To_2_YEARS");

    public static final Resource ConsumerLifestageCode_CHILD_2_YEARS_ONWARDS = m.createResource("https://ref.gs1.org/voc/ConsumerLifestageCode-CHILD_2_YEARS_ONWARDS");

    public static final Resource ConsumerLifestageCode_UNCLASSIFIED = m.createResource("https://ref.gs1.org/voc/ConsumerLifestageCode-UNCLASSIFIED");

    public static final Resource ConsumerLifestageCode_UNIDENTIFIED = m.createResource("https://ref.gs1.org/voc/ConsumerLifestageCode-UNIDENTIFIED");

    /**
     * <p>Products that are sold without a prescription but must be distributed through
     * a pharmacy.</p>
     */
    public static final Resource ConsumerSalesConditionsCode_BTC = m.createResource("https://ref.gs1.org/voc/ConsumerSalesConditionsCode-BTC");

    /**
     * <p>Products that may be sold without a prescription. These products are generally
     * available without restrictions.</p>
     */
    public static final Resource ConsumerSalesConditionsCode_OTC = m.createResource("https://ref.gs1.org/voc/ConsumerSalesConditionsCode-OTC");

    /**
     * <p>Product may only be sold or dispensed under the direction of a prescription.</p>
     */
    public static final Resource ConsumerSalesConditionsCode_PRESCRIPTION_REQUIRED = m.createResource("https://ref.gs1.org/voc/ConsumerSalesConditionsCode-PRESCRIPTION_REQUIRED");

    /**
     * <p>Based upon legal regulatory restrictions it is illegal to sell the product
     * to anyone under the age of 16 years old.</p>
     */
    public static final Resource ConsumerSalesConditionsCode_RESTRICTED_TO_SELL_16 = m.createResource("https://ref.gs1.org/voc/ConsumerSalesConditionsCode-RESTRICTED_TO_SELL_16");

    /**
     * <p>Based upon legal regulatory restrictions it is illegal to sell the product
     * to anyone under the age of 18 years old.</p>
     */
    public static final Resource ConsumerSalesConditionsCode_RESTRICTED_TO_SELL_18 = m.createResource("https://ref.gs1.org/voc/ConsumerSalesConditionsCode-RESTRICTED_TO_SELL_18");

    /**
     * <p>Based upon legal regulatory restrictions it is illegal to sell the product
     * to anyone under the age of 21 years old.</p>
     */
    public static final Resource ConsumerSalesConditionsCode_RESTRICTED_TO_SELL_21 = m.createResource("https://ref.gs1.org/voc/ConsumerSalesConditionsCode-RESTRICTED_TO_SELL_21");

    /**
     * <p>The contact responsible for accounting matters.</p>
     */
    public static final Resource ContactRoleType_ACCOUNTING_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-ACCOUNTING_CONTACT");

    /**
     * <p>Department/person responsible for the accounts payable function within a corporation.</p>
     */
    public static final Resource ContactRoleType_ACCOUNTS_PAYABLE_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-ACCOUNTS_PAYABLE_CONTACT");

    /**
     * <p>Department/person responsible for the accounts receivable within a corporation.</p>
     */
    public static final Resource ContactRoleType_ACCOUNTS_RECEIVABLE_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-ACCOUNTS_RECEIVABLE_CONTACT");

    /**
     * <p>Department/person to contact for matters regarding administrative matters.</p>
     */
    public static final Resource ContactRoleType_ADMINISTRATIVE_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-ADMINISTRATIVE_CONTACT");

    /**
     * <p>Department/person to contact after normal working hours.</p>
     */
    public static final Resource ContactRoleType_AFTER_BUSINESS_HOURS_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-AFTER_BUSINESS_HOURS_CONTACT");

    /**
     * <p>The person or organisation who is authorised to act on behalf of one or more
     * parties to sell the product or services. For example, a wine broker.</p>
     */
    public static final Resource ContactRoleType_AGENT_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-AGENT_CONTACT");

    /**
     * <p>Contact person for bank.</p>
     */
    public static final Resource ContactRoleType_BANKING_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-BANKING_CONTACT");

    /**
     * <p>Department/person to contact for matters regarding claims.</p>
     */
    public static final Resource ContactRoleType_CLAIMS_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-CLAIMS_CONTACT");

    /**
     * <p>The organisation/party which provides product support to the end user of a
     * trade item or a service.</p>
     */
    public static final Resource ContactRoleType_CONSUMER_SUPPORT_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-CONSUMER_SUPPORT_CONTACT");

    /**
     * <p>Department/person to contact for matters regarding contracts.</p>
     */
    public static final Resource ContactRoleType_CONTRACT_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-CONTRACT_CONTACT");

    /**
     * <p>Department/person responsible for cooking.</p>
     */
    public static final Resource ContactRoleType_COOK = m.createResource("https://ref.gs1.org/voc/ContactRoleType-COOK");

    /**
     * <p>Individual responsible for customer relations.</p>
     */
    public static final Resource ContactRoleType_CUSTOMER_RELATIONS = m.createResource("https://ref.gs1.org/voc/ContactRoleType-CUSTOMER_RELATIONS");

    /**
     * <p>The organisation/party which provides product support to the trading partner
     * party to which merchandise is sold.</p>
     */
    public static final Resource ContactRoleType_CUSTOMER_SUPPORT_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-CUSTOMER_SUPPORT_CONTACT");

    /**
     * <p>Department/person to be contacted for details about the transportation of
     * dangerous goods/hazardous material.</p>
     */
    public static final Resource ContactRoleType_DANGEROUS_GOODS_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-DANGEROUS_GOODS_CONTACT");

    /**
     * <p>Department/person responsible for delivery.</p>
     */
    public static final Resource ContactRoleType_DELIVERY_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-DELIVERY_CONTACT");

    /**
     * <p>Department/employee which/who executes export procedures.</p>
     */
    public static final Resource EMPLOYEE_TO_EXECUTE_EXPORT_PROCEDURES = m.createResource("https://ref.gs1.org/voc/ContactRoleType-DEPARTMENT/EMPLOYEE_TO_EXECUTE_EXPORT_PROCEDURES");

    /**
     * <p>Department/employee which/who executes import procedures.</p>
     */
    public static final Resource EMPLOYEE_TO_EXECUTE_IMPORT_PROCEDURES = m.createResource("https://ref.gs1.org/voc/ContactRoleType-DEPARTMENT/EMPLOYEE_TO_EXECUTE_IMPORT_PROCEDURES");

    /**
     * <p>Identification of the department or person responsible for the processing
     * of purchase orders.</p>
     */
    public static final Resource ContactRoleType_DEPARTMENT_OR_PERSON_RESPONSIBLE_FOR_PROCESSING_PURCHASE_ORDER = m.createResource("https://ref.gs1.org/voc/ContactRoleType-DEPARTMENT_OR_PERSON_RESPONSIBLE_FOR_PROCESSING_PURCHASE_ORDER");

    /**
     * <p>Distributor: A person, firm, etc., engaged in the general distribution or
     * marketing of some article or class of goods.</p>
     */
    public static final Resource ContactRoleType_DISTRIBUTOR = m.createResource("https://ref.gs1.org/voc/ContactRoleType-DISTRIBUTOR");

    /**
     * <p>Organisation/party who is to be contacted to intervene in case of emergency.</p>
     */
    public static final Resource ContactRoleType_EMERGENCY_DANGEROUS_GOODS_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-EMERGENCY_DANGEROUS_GOODS_CONTACT");

    /**
     * <p>Department/person to contact for matters regarding engineering.</p>
     */
    public static final Resource ContactRoleType_ENGINEERING_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-ENGINEERING_CONTACT");

    /**
     * <p>Department/person to contact for matters regarding financial matters.</p>
     */
    public static final Resource ContactRoleType_FINANCIAL_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-FINANCIAL_CONTACT");

    /**
     * <p>The contact where information in relation to Data Synchronisation can be obtained.</p>
     */
    public static final Resource ContactRoleType_GDS_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-GDS_CONTACT");

    /**
     * <p>Department/person responsible for receiving the goods at the place of delivery.</p>
     */
    public static final Resource ContactRoleType_GOODS_RECEIVING_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-GOODS_RECEIVING_CONTACT");

    /**
     * <p>Department/person to contact for questions regarding transactions.</p>
     */
    public static final Resource ContactRoleType_INFORMATION_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-INFORMATION_CONTACT");

    /**
     * <p>Department/person to contact for matters regarding insurance.</p>
     */
    public static final Resource ContactRoleType_INSURANCE_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-INSURANCE_CONTACT");

    /**
     * <p>The organisation/party having legal responsibility for the product in the
     * target market. This organisation/party is responsible for licensing and regulations
     * within the target market and can be the manufacturer, importer, sales agent
     * or broker.</p>
     */
    public static final Resource ContactRoleType_LICENSEE_REGISTRAR = m.createResource("https://ref.gs1.org/voc/ContactRoleType-LICENSEE_REGISTRAR");

    /**
     * <p>Department/person to contact for matters regarding logistics.</p>
     */
    public static final Resource ContactRoleType_LOGISTICS_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-LOGISTICS_CONTACT");

    /**
     * <p>Person responsible for management within a department or company.</p>
     */
    public static final Resource ContactRoleType_MANAGER_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-MANAGER_CONTACT");

    /**
     * <p>Department/employee to be notified.</p>
     */
    public static final Resource ContactRoleType_NOTIFICATION_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-NOTIFICATION_CONTACT");

    /**
     * <p>Department/person to contact for matters regarding operations.</p>
     */
    public static final Resource ContactRoleType_OPERATIONS_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-OPERATIONS_CONTACT");

    /**
     * <p>An individual to contact for questions regarding this order.</p>
     */
    public static final Resource ContactRoleType_ORDER_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-ORDER_CONTACT");

    /**
     * <p>The contact where information in relation to the packaging for the item can
     * be obtained.</p>
     */
    public static final Resource ContactRoleType_PACKAGING_ENGINEER_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-PACKAGING_ENGINEER_CONTACT");

    /**
     * <p>Department/employee to be contacted at the place of collection.</p>
     */
    public static final Resource ContactRoleType_PLACE_OF_COLLECTION_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-PLACE_OF_COLLECTION_CONTACT");

    /**
     * <p>Department/person to contact for questions regarding this order.</p>
     */
    public static final Resource ContactRoleType_PRODUCT_MANAGEMENT_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-PRODUCT_MANAGEMENT_CONTACT");

    /**
     * <p>Contact who is responsible for providing information related to the product
     * recall to consumers.</p>
     */
    public static final Resource ContactRoleType_PRODUCT_RECALL_CONSUMER_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-PRODUCT_RECALL_CONSUMER_CONTACT");

    /**
     * <p>Contact who is responsible for providing information related to the product
     * recall to media outlets.</p>
     */
    public static final Resource ContactRoleType_PRODUCT_RECALL_MEDIA_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-PRODUCT_RECALL_MEDIA_CONTACT");

    /**
     * <p>Contact responsible for creating, issuing and updating the product recall
     * notification.</p>
     */
    public static final Resource ContactRoleType_PRODUCT_RECALL_NOTIFICATION_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-PRODUCT_RECALL_NOTIFICATION_CONTACT");

    /**
     * <p>Contact responsible for creating and issuing the product removal message to
     * the product recall contact.</p>
     */
    public static final Resource ContactRoleType_PRODUCT_RECALL_REMOVAL_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-PRODUCT_RECALL_REMOVAL_CONTACT");

    /**
     * <p>Department/person responsible for issuing this purchase order.</p>
     */
    public static final Resource ContactRoleType_PURCHASING_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-PURCHASING_CONTACT");

    /**
     * <p>Quality coordinator contact within an organization.</p>
     */
    public static final Resource ContactRoleType_QUALITY_COORDINATOR_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-QUALITY_COORDINATOR_CONTACT");

    /**
     * <p>The contact where information about recalls for the item can be obtained.</p>
     */
    public static final Resource ContactRoleType_RECALL_SUPPORT_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-RECALL_SUPPORT_CONTACT");

    /**
     * <p>Responsible person to contact for matters regarding computer data processing.</p>
     */
    public static final Resource ContactRoleType_RESPONSIBLE_PERSON_FOR_COMPUTER_DATA_PROCESSING = m.createResource("https://ref.gs1.org/voc/ContactRoleType-RESPONSIBLE_PERSON_FOR_COMPUTER_DATA_PROCESSING");

    /**
     * <p>Person/Department responsible for goods return transaction.</p>
     */
    public static final Resource ContactRoleType_RETURN_AUTHORITY_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-RETURN_AUTHORITY_CONTACT");

    /**
     * <p>Name of the sales administration contact within a corporation.</p>
     */
    public static final Resource ContactRoleType_SALES_ADMINISTRATION = m.createResource("https://ref.gs1.org/voc/ContactRoleType-SALES_ADMINISTRATION");

    /**
     * <p>The sales representative or department contact within an organization.</p>
     */
    public static final Resource ContactRoleType_SALES_REPRESENTATIVE_OR_DEPARTMENT_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-SALES_REPRESENTATIVE_OR_DEPARTMENT_CONTACT");

    /**
     * <p>The shipping department contact within an organization.</p>
     */
    public static final Resource ContactRoleType_SHIPPING_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-SHIPPING_CONTACT");

    /**
     * <p>The contact information providerâ€™s business contact within the target market
     * for the GTIN. This is a different GLN than the Information Provider of the
     * item of record.</p>
     */
    public static final Resource ContactRoleType_TARGET_MARKET_INFORMATION_PROVIDER = m.createResource("https://ref.gs1.org/voc/ContactRoleType-TARGET_MARKET_INFORMATION_PROVIDER");

    /**
     * <p>Department/person to contact for technical help and advice about products,
     * services or other concerns.</p>
     */
    public static final Resource ContactRoleType_TECHNICAL_SUPPORT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-TECHNICAL_SUPPORT");

    /**
     * <p>Department/person responsible for testing contact.</p>
     */
    public static final Resource ContactRoleType_TEST_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-TEST_CONTACT");

    /**
     * <p>The traffic administrator contact within an organization.</p>
     */
    public static final Resource ContactRoleType_TRAFFIC_ADMINISTRATOR = m.createResource("https://ref.gs1.org/voc/ContactRoleType-TRAFFIC_ADMINISTRATOR");

    /**
     * <p>Department/person in charge of transportation.</p>
     */
    public static final Resource ContactRoleType_TRANSPORT_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-TRANSPORT_CONTACT");

    /**
     * <p>Person/Department responsible for warranty resolution.</p>
     */
    public static final Resource ContactRoleType_WARRANTY_CONTACT = m.createResource("https://ref.gs1.org/voc/ContactRoleType-WARRANTY_CONTACT");

    /**
     * <p>A measure of the total quantity of something; the number of individual units
     * present. Typically dimensionless (no units)</p>
     */
    public static final Resource Count = m.createResource("https://ref.gs1.org/voc/Count");

    /**
     * <p>The mass per unit volume of a substance. SI Units: kilogram per cubic metre</p>
     */
    public static final Resource Density = m.createResource("https://ref.gs1.org/voc/Density");

    /**
     * <p>Denotes a product that can be safely consumed by a person with coeliac disease.
     * Coeliac disease is caused by a reaction to gladin (a gluten protein found
     * in wheat) and similar proteins found in other crops.</p>
     */
    public static final Resource DietTypeCode_COELIAC = m.createResource("https://ref.gs1.org/voc/DietTypeCode-COELIAC");

    /**
     * <p>Denotes a product that is specially prepared or processed for people on restrictive
     * diets.</p>
     */
    public static final Resource DietTypeCode_DIETETIC = m.createResource("https://ref.gs1.org/voc/DietTypeCode-DIETETIC");

    /**
     * <p>Denotes a product that can be used in a gluten free diet, as specified by
     * the appropriate authority within a target market.</p>
     */
    public static final Resource DietTypeCode_FREE_FROM_GLUTEN = m.createResource("https://ref.gs1.org/voc/DietTypeCode-FREE_FROM_GLUTEN");

    /**
     * <p>Denotes selling or serving food ritually fit according to Islamic dietary
     * laws.</p>
     */
    public static final Resource DietTypeCode_HALAL = m.createResource("https://ref.gs1.org/voc/DietTypeCode-HALAL");

    /**
     * <p>Denotes selling or serving food ritually fit according to Jewish dietary laws.</p>
     */
    public static final Resource DietTypeCode_KOSHER = m.createResource("https://ref.gs1.org/voc/DietTypeCode-KOSHER");

    /**
     * <p>Denotes a food product that was produced with the use of feed or fertiliser
     * of plant or animal origin, without employment of chemically formulated fertilisers,
     * growth stimulants, antibiotics or pesticides.</p>
     */
    public static final Resource DietTypeCode_ORGANIC = m.createResource("https://ref.gs1.org/voc/DietTypeCode-ORGANIC");

    /**
     * <p>Denotes a food product which contains no animal food or dairy products.</p>
     */
    public static final Resource DietTypeCode_VEGAN = m.createResource("https://ref.gs1.org/voc/DietTypeCode-VEGAN");

    /**
     * <p>Denotes a product that contains no meat, fish or other animal products.</p>
     */
    public static final Resource DietTypeCode_VEGETARIAN = m.createResource("https://ref.gs1.org/voc/DietTypeCode-VEGETARIAN");

    /**
     * <p>Denotes a product that contains no beef or beef-products. Beef is considered
     * to be a taboo food product by some religions most notable Hinduism, Buddhism
     * and Jainism.</p>
     */
    public static final Resource DietTypeCode_WITHOUT_BEEF = m.createResource("https://ref.gs1.org/voc/DietTypeCode-WITHOUT_BEEF");

    /**
     * <p>Denotes a product that contains no pork meat.</p>
     */
    public static final Resource DietTypeCode_WITHOUT_PORK = m.createResource("https://ref.gs1.org/voc/DietTypeCode-WITHOUT_PORK");

    /**
     * <p>A measurement whose units are dimensionless. gs1:Count or gs1:VolumeFraction
     * or gs1:RelativeHumidity should be used in preference if appropriate.</p>
     */
    public static final Resource Dimensionless = m.createResource("https://ref.gs1.org/voc/Dimensionless");

    /**
     * <p>Buy one item and get the second item free of charge</p>
     */
    public static final Resource DiscountTypeCode_BOGO = m.createResource("https://ref.gs1.org/voc/DiscountTypeCode-BOGO");

    /**
     * <p>A discount on the item expressed as an amount (value and currency)</p>
     */
    public static final Resource DiscountTypeCode_DISCOUNTED_ITEM = m.createResource("https://ref.gs1.org/voc/DiscountTypeCode-DISCOUNTED_ITEM");

    /**
     * <p>A gift given to a consumer as part of a promotional contingent on the consumer
     * making a purchase of another item or items.</p>
     */
    public static final Resource DiscountTypeCode_FREE_GIFT = m.createResource("https://ref.gs1.org/voc/DiscountTypeCode-FREE_GIFT");

    /**
     * <p>No charge for shipping.</p>
     */
    public static final Resource DiscountTypeCode_FREE_SHIPPING = m.createResource("https://ref.gs1.org/voc/DiscountTypeCode-FREE_SHIPPING");

    /**
     * <p>A discount other than the ones on this list.</p>
     */
    public static final Resource DiscountTypeCode_OTHER = m.createResource("https://ref.gs1.org/voc/DiscountTypeCode-OTHER");

    /**
     * <p>A percentage off the product price.</p>
     */
    public static final Resource DiscountTypeCode_PERCENTAGE_OFF = m.createResource("https://ref.gs1.org/voc/DiscountTypeCode-PERCENTAGE_OFF");

    /**
     * <p>The product of the absorbed dose multiplied by a Q factor (relating to the
     * type of radiation) and a factor relating to all relevant aspects of the body
     * being irradiated, multiplied by the exposure time. SI Units: sievert</p>
     */
    public static final Resource DoseEquivalent = m.createResource("https://ref.gs1.org/voc/DoseEquivalent");

    /**
     * <p>The product of the absorbed dose rate multiplied by a Q factor (relating to
     * the type of radiation) and a factor relating to all relevant aspects of the
     * body being irradiated. SI Units: sievert per second</p>
     */
    public static final Resource DoseEquivalentRate = m.createResource("https://ref.gs1.org/voc/DoseEquivalentRate");

    /**
     * <p>The value of the tangential force per unit area which is necessary to maintain
     * unit relative velocty between two parallel planes unit distance apart in a
     * fluid. SI Units: pascal</p>
     */
    public static final Resource DynamicViscosity = m.createResource("https://ref.gs1.org/voc/DynamicViscosity");

    /**
     * <p>Indicates the reporting of an error condition detected by a sensor device</p>
     */
    public static final Resource ERROR_CONDITION = m.createResource("https://ref.gs1.org/voc/ERROR_CONDITION");

    /**
     * <p>Quantity of unbalanced electricity in an object, i.e. excess or deficiency
     * of electrons, resulting in negative or positive electrification, respectively.
     * SI Units: coulomb</p>
     */
    public static final Resource ElectricCharge = m.createResource("https://ref.gs1.org/voc/ElectricCharge");

    /**
     * <p>Rate of flow of charge in a substance, whether solid, liquid or gas. SI Units:
     * ampere</p>
     */
    public static final Resource ElectricCurrent = m.createResource("https://ref.gs1.org/voc/ElectricCurrent");

    /**
     * <p>Rate of flow of charge in a substance per unit area perpendicular to the current.
     * SI Units: ampere per square metre</p>
     */
    public static final Resource ElectricCurrentDensity = m.createResource("https://ref.gs1.org/voc/ElectricCurrentDensity");

    /**
     * <p>The electric force acting on a unit charge. The linear gradient of the electrostatic
     * potential. SI Units: volt per metre = newton / coulomb</p>
     */
    public static final Resource ElectricFieldStrength = m.createResource("https://ref.gs1.org/voc/ElectricFieldStrength");

    /**
     * <p>A measure of a the capacity of a system or body to do work. SI Units: joule</p>
     */
    public static final Resource Energy = m.createResource("https://ref.gs1.org/voc/Energy");

    /**
     * <p>The product of light intensity and time duration of the exposure. SI Units:
     * lux second</p>
     */
    public static final Resource Exposure = m.createResource("https://ref.gs1.org/voc/Exposure");

    public static final Resource FoodBeverageRefrigerationClaimCode_CAN_BE_REFRIGERATED = m.createResource("https://ref.gs1.org/voc/FoodBeverageRefrigerationClaimCode-CAN_BE_REFRIGERATED");

    public static final Resource FoodBeverageRefrigerationClaimCode_MUST_BE_REFRIGERATED = m.createResource("https://ref.gs1.org/voc/FoodBeverageRefrigerationClaimCode-MUST_BE_REFRIGERATED");

    public static final Resource FoodBeverageRefrigerationClaimCode_SHELF_STABLE = m.createResource("https://ref.gs1.org/voc/FoodBeverageRefrigerationClaimCode-SHELF_STABLE");

    public static final Resource FoodBeverageRefrigerationClaimCode_UNIDENTIFIED = m.createResource("https://ref.gs1.org/voc/FoodBeverageRefrigerationClaimCode-UNIDENTIFIED");

    public static final Resource FoodBeverageTargetUseCode_ANY_MEAL = m.createResource("https://ref.gs1.org/voc/FoodBeverageTargetUseCode-ANY_MEAL");

    public static final Resource FoodBeverageTargetUseCode_BREAKFAST = m.createResource("https://ref.gs1.org/voc/FoodBeverageTargetUseCode-BREAKFAST");

    public static final Resource FoodBeverageTargetUseCode_MAIN_MEAL = m.createResource("https://ref.gs1.org/voc/FoodBeverageTargetUseCode-MAIN_MEAL");

    public static final Resource FoodBeverageTargetUseCode_PORTABLE_MEAL = m.createResource("https://ref.gs1.org/voc/FoodBeverageTargetUseCode-PORTABLE_MEAL");

    public static final Resource FoodBeverageTargetUseCode_SNACK = m.createResource("https://ref.gs1.org/voc/FoodBeverageTargetUseCode-SNACK");

    public static final Resource FoodBeverageTargetUseCode_UNCLASSIFIED = m.createResource("https://ref.gs1.org/voc/FoodBeverageTargetUseCode-UNCLASSIFIED");

    public static final Resource FootwearFasteningTypeCode_MULTIPLE_FASTENING = m.createResource("https://ref.gs1.org/voc/FootwearFasteningTypeCode-MULTIPLE_FASTENING");

    public static final Resource FootwearFasteningTypeCode_SHOE_LACE = m.createResource("https://ref.gs1.org/voc/FootwearFasteningTypeCode-SHOE_LACE");

    public static final Resource FootwearFasteningTypeCode_SLIP_ON_WITHOUT_ELASTIC = m.createResource("https://ref.gs1.org/voc/FootwearFasteningTypeCode-SLIP_ON_WITHOUT_ELASTIC");

    public static final Resource FootwearFasteningTypeCode_SLIP_ON_WITH_ELASTIC = m.createResource("https://ref.gs1.org/voc/FootwearFasteningTypeCode-SLIP_ON_WITH_ELASTIC");

    public static final Resource FootwearFasteningTypeCode_STRAP = m.createResource("https://ref.gs1.org/voc/FootwearFasteningTypeCode-STRAP");

    public static final Resource FootwearFasteningTypeCode_UNCLASSIFIED = m.createResource("https://ref.gs1.org/voc/FootwearFasteningTypeCode-UNCLASSIFIED");

    public static final Resource FootwearFasteningTypeCode_UNIDENTIFIED = m.createResource("https://ref.gs1.org/voc/FootwearFasteningTypeCode-UNIDENTIFIED");

    public static final Resource FootwearFasteningTypeCode_VELCRO = m.createResource("https://ref.gs1.org/voc/FootwearFasteningTypeCode-VELCRO");

    /**
     * <p>The rate of change of linear momentum of a body on which a force acts. A force
     * acting on a body which is free to move produces an acceleration in the motion
     * of the body. SI Units: newton</p>
     */
    public static final Resource Force = m.createResource("https://ref.gs1.org/voc/Force");

    /**
     * <p>The rate of repetition of a periodic oscillation or disturbance; the number
     * of cycles per unit time. SI Units: hertz</p>
     */
    public static final Resource Frequency = m.createResource("https://ref.gs1.org/voc/Frequency");

    public static final Resource FreshOrSeawaterFarmedCode_FRESHWATER_FARMED = m.createResource("https://ref.gs1.org/voc/FreshOrSeawaterFarmedCode-FRESHWATER_FARMED");

    public static final Resource FreshOrSeawaterFarmedCode_SEAWATER_FARMED = m.createResource("https://ref.gs1.org/voc/FreshOrSeawaterFarmedCode-SEAWATER_FARMED");

    public static final Resource FreshOrSeawaterFarmedCode_UNCLASSIFIED = m.createResource("https://ref.gs1.org/voc/FreshOrSeawaterFarmedCode-UNCLASSIFIED");

    public static final Resource FreshOrSeawaterFarmedCode_UNIDENTIFIED = m.createResource("https://ref.gs1.org/voc/FreshOrSeawaterFarmedCode-UNIDENTIFIED");

    /**
     * <p>An electronic (non-physical) address that is used for communication between
     * computer systems.</p>
     */
    public static final Resource GLN_TypeCode_DIGITAL_LOCATION = m.createResource("https://ref.gs1.org/voc/GLN_TypeCode-DIGITAL_LOCATION");

    /**
     * <p>Fixed physical location - a tangible place that does not change locations
     * and may be represented by an address, coordinates, or other means.</p>
     */
    public static final Resource GLN_TypeCode_FIXED_PHYSICAL_LOCATION = m.createResource("https://ref.gs1.org/voc/GLN_TypeCode-FIXED_PHYSICAL_LOCATION");

    /**
     * <p>An organisational subdivision or department.</p>
     */
    public static final Resource GLN_TypeCode_FUNCTION = m.createResource("https://ref.gs1.org/voc/GLN_TypeCode-FUNCTION");

    /**
     * <p>Any business, government body, department, charity, individual, or institution
     * that has standing in the eyes of the law and has the capacity to enter into
     * agreements or contracts.</p>
     */
    public static final Resource GLN_TypeCode_LEGAL_ENTITY = m.createResource("https://ref.gs1.org/voc/GLN_TypeCode-LEGAL_ENTITY");

    /**
     * <p>Mobile physical location - a tangible place that is expected to change locations
     * and may be represented by an address, coordinates, or other means.</p>
     */
    public static final Resource GLN_TypeCode_MOBILE_PHYSICAL_LOCATION = m.createResource("https://ref.gs1.org/voc/GLN_TypeCode-MOBILE_PHYSICAL_LOCATION");

    /**
     * <p>Animal is not confined to a cage.</p>
     */
    public static final Resource GrowingMethodCode_CAGE_FREE = m.createResource("https://ref.gs1.org/voc/GrowingMethodCode-CAGE_FREE");

    /**
     * <p>Product is a result of genetic engineering.</p>
     */
    public static final Resource GrowingMethodCode_CLONED_FOODS = m.createResource("https://ref.gs1.org/voc/GrowingMethodCode-CLONED_FOODS");

    /**
     * <p>Foods grown non-organically, either indoors or outdoors without any special
     * processes.</p>
     */
    public static final Resource GrowingMethodCode_CONVENTIONAL = m.createResource("https://ref.gs1.org/voc/GrowingMethodCode-CONVENTIONAL");

    /**
     * <p>Animal is raised on a farm.</p>
     */
    public static final Resource GrowingMethodCode_FARM_RAISED = m.createResource("https://ref.gs1.org/voc/GrowingMethodCode-FARM_RAISED");

    /**
     * <p>Plants Grown Outdoors</p>
     */
    public static final Resource GrowingMethodCode_FIELD_GROWN = m.createResource("https://ref.gs1.org/voc/GrowingMethodCode-FIELD_GROWN");

    /**
     * <p>Citrus Grown in an area certified to be free of all Caribbean Fruit Flies
     * based on trappings</p>
     */
    public static final Resource GrowingMethodCode_FLY_FREE = m.createResource("https://ref.gs1.org/voc/GrowingMethodCode-FLY_FREE");

    /**
     * <p>A method that animals are allowed to roam with little restriction to their
     * movements.</p>
     */
    public static final Resource GrowingMethodCode_FREE_RANGE = m.createResource("https://ref.gs1.org/voc/GrowingMethodCode-FREE_RANGE");

    /**
     * <p>Animal is predominately fed grass or forage.</p>
     */
    public static final Resource GrowingMethodCode_GRASS_FED = m.createResource("https://ref.gs1.org/voc/GrowingMethodCode-GRASS_FED");

    /**
     * <p>Plants that are grown and cultivated in an indoor covered place.</p>
     */
    public static final Resource GrowingMethodCode_GREENHOUSE = m.createResource("https://ref.gs1.org/voc/GrowingMethodCode-GREENHOUSE");

    /**
     * <p>A process where animals are raised such that the welfare of the animal is
     * a foremost concern.</p>
     */
    public static final Resource GrowingMethodCode_HUMANELY_RAISED = m.createResource("https://ref.gs1.org/voc/GrowingMethodCode-HUMANELY_RAISED");

    /**
     * <p>Plants grown using mineral nutrient solutions instead of soil.</p>
     */
    public static final Resource GrowingMethodCode_HYDROPONIC = m.createResource("https://ref.gs1.org/voc/GrowingMethodCode-HYDROPONIC");

    /**
     * <p>(IPM) Plants grown using a pest control strategy that uses an array of complimentary
     * methods: mechanical devices, physical devices, genetic, biological, legal,
     * cultural management and chemical management. These methods are done in three
     * stages: prevention, observation, and intervention. It is an ecological approach
     * with a main goal of significantly reducing or eliminating the use of pesticides.</p>
     */
    public static final Resource GrowingMethodCode_INTEGRATED_PEST_MANAGEMENT = m.createResource("https://ref.gs1.org/voc/GrowingMethodCode-INTEGRATED_PEST_MANAGEMENT");

    /**
     * <p>Foods grown organically, either indoors or outdoors.</p>
     */
    public static final Resource GrowingMethodCode_ORGANIC = m.createResource("https://ref.gs1.org/voc/GrowingMethodCode-ORGANIC");

    /**
     * <p>Produce which has been grown under shade or grown under cloth.</p>
     */
    public static final Resource GrowingMethodCode_SHADE_GROWN = m.createResource("https://ref.gs1.org/voc/GrowingMethodCode-SHADE_GROWN");

    public static final Resource GrowingMethodCode_SUSTAINABLE = m.createResource("https://ref.gs1.org/voc/GrowingMethodCode-SUSTAINABLE");

    /**
     * <p>The animal or plant was not inhibited or prohibited from roving, wandering,
     * and not tamed or domesticated.</p>
     */
    public static final Resource GrowingMethodCode_WILD = m.createResource("https://ref.gs1.org/voc/GrowingMethodCode-WILD");

    /**
     * <p>The energy in the form of visible radiation reaching a surface per unit area
     * in unit time; the amount of luminous flux per unit area. SI Units: lux = 1
     * lumen per square metre</p>
     */
    public static final Resource Illuminance = m.createResource("https://ref.gs1.org/voc/Illuminance");

    /**
     * <p>The magnitude of the property of an element or circuit to form a magnetic
     * field and store magnetic energy when carrying a current. The property of an
     * electric circuit or component that causes an electromotive force to be generated
     * in it as a result of a change in the current flowing through the circuit (self
     * inductance) or of a change in the current flowing through a neighbouring circuit
     * with which it is magnetically linked (mutual inductance). SI Units: henry</p>
     */
    public static final Resource Inductance = m.createResource("https://ref.gs1.org/voc/Inductance");

    /**
     * <p>The flux of radiant energy per unit area, especially an area perpendicular
     * to the direction of travel through a medium. A measure of the radiant power
     * per unit area that flows across a surface. SI Units: watt per square metre</p>
     */
    public static final Resource Irradiance = m.createResource("https://ref.gs1.org/voc/Irradiance");

    /**
     * <p>The ratio of the viscosity of a liquid to its density. SI Units: square metres
     * per second</p>
     */
    public static final Resource KinematicViscosity = m.createResource("https://ref.gs1.org/voc/KinematicViscosity");

    /**
     * <p>The linear magnitude of any thing, as measured end to end. Length, width,
     * depth, height, diameter are all measured in units of length. SI Units: metre</p>
     */
    public static final Resource Length = m.createResource("https://ref.gs1.org/voc/Length");

    /**
     * <p>Intentionally included in the product.</p>
     */
    public static final Resource LevelOfContainmentCode_CONTAINS = m.createResource("https://ref.gs1.org/voc/LevelOfContainmentCode-CONTAINS");

    /**
     * <p>The product is free from the indicated substance.</p>
     */
    public static final Resource LevelOfContainmentCode_FREE_FROM = m.createResource("https://ref.gs1.org/voc/LevelOfContainmentCode-FREE_FROM");

    /**
     * <p>The substance is not intentionally included, but due to shared production
     * facilities or other reasons, the product may contain the substance.</p>
     */
    public static final Resource LevelOfContainmentCode_MAY_CONTAIN = m.createResource("https://ref.gs1.org/voc/LevelOfContainmentCode-MAY_CONTAIN");

    /**
     * <p>The impulse is the integral over time of the force acting between two colliding
     * bodies. Linear momentum of a body is the product of its mass and its velocity.
     * SI Units: newton seconds</p>
     */
    public static final Resource LinearMomentum = m.createResource("https://ref.gs1.org/voc/LinearMomentum");

    /**
     * <p>The BIC Facility Code (BFC) began life in the 1980s as the 'LoCode' identifier
     * under ISO 9897. Now a 'child code' of the UN/Locode, the BIC Facility Code
     * is used to identify container facilities such as depots, container yards,
     * container freight stations, M&amp;R vendors and other facilities in the container
     * supply chain. The BIC Facility Code is complementary to the SMDG Ocean Terminal
     * Code, which is also a child code of the UN/Locode. The BIC Facility Code covers
     * container facility types other than ocean terminals.</p>
     */
    public static final Resource LocationID_Type_BIC_FACILITY = m.createResource("https://ref.gs1.org/voc/LocationID_Type-BIC_FACILITY");

    /**
     * <p>The Central Reference File Database (CRD) (formerly known as Central Repository
     * Domain) is a centralised database that stores Location Codes and Company Codes
     * required by European regulation, and makes them available to users. CRD contains
     * the following reference files: - List of Countries (ISO 3166) - The Location
     * Reference File which uniquely identifies physical rail points (e.g. stations,
     * customer sidings, loading places) containing the Location Code (which includes
     * the Country Code) - The Partner Reference File uniquely identifies all rail
     * actors who exchange information (Company Codes); Each company actor must have
     * a unique Company Code assigned by UIC</p>
     */
    public static final Resource LocationID_Type_CRD_LOCATION_CODE = m.createResource("https://ref.gs1.org/voc/LocationID_Type-CRD_LOCATION_CODE");

    /**
     * <p>An ENI number (European Number of Identification or European Vessel Identification
     * Number) is a registration for ships capable of navigating on inland European
     * waters. It is a unique, eight-digit identifier that is attached to a hull
     * for its entire lifetime, independent of the vessel's current name or flag.
     * ENI was introduced by the Inland Transport Committee of the United Nations
     * Economic Commission for Europe in their meeting on 11-13 October 2006 in Geneva.
     * It is based on the Rhine Vessel certification system previously used for ships
     * navigating the Rhine, and is comparable to the IMO ship identification number.</p>
     */
    public static final Resource LocationID_Type_ENI_NUMBER = m.createResource("https://ref.gs1.org/voc/LocationID_Type-ENI_NUMBER");

    /**
     * <p>The SIRET number, issued by Insee (the National Institute of Statistics and
     * Economic Studies) identifies each establishment that is part of a company
     * in France. There are as many SIRET numbers as there are establishments in
     * the company. An establishment is a geographically located operating or production
     * unit, separated but legally dependent on a company. It is the place where
     * the company's activity is carried out. It is composed of 14 digits: the 9
     * digits of the SIREN number + the 5 digits of the NIC (internal classification
     * number specific to each establishment).</p>
     */
    public static final Resource LocationID_Type_FR_SIRET = m.createResource("https://ref.gs1.org/voc/LocationID_Type-FR_SIRET");

    /**
     * <p>Three-letter geocode designating many airports and metropolitan areas around
     * the world, defined by the International Air Transport Association (IATA).
     * The IATA three-letter codes are a subset of the UN/LOCODE codelist.</p>
     */
    public static final Resource LocationID_Type_IATA_CODE = m.createResource("https://ref.gs1.org/voc/LocationID_Type-IATA_CODE");

    /**
     * <p>IMO number is an important identifier given to oil/gas vessels, shipping vessels,
     * and fishing vessels that is painted visibly across the vessel and bolted to
     * the hull</p>
     */
    public static final Resource LocationID_Type_IMO_NUMBER = m.createResource("https://ref.gs1.org/voc/LocationID_Type-IMO_NUMBER");

    /**
     * <p>The International Ship and Port Facility Security Code (ISPS Code) is an International
     * code that was conceived following the September 11th 2001 terrorists attacks
     * in the USA. Its primary purpose is to identify and counter any terrorist threat
     * to the Maritime Industry particularly against ships and ports. The code also
     * serves to improve security against armed robbery, theft and piracy. The code
     * came into force in 2004 and prescribes responsibilities to: 1) Governments
     * 2) Shipping companies 3) Shipboard personnel 4) Port/facility personnel</p>
     */
    public static final Resource LocationID_Type_ISPS_CODE = m.createResource("https://ref.gs1.org/voc/LocationID_Type-ISPS_CODE");

    /**
     * <p>The International Ship Reporting Standard (ISRS) location code is a 20 character
     * alphanumeric code consisting of: - UN country code (2 characters) e.g., NL
     * = Netherlands, - UN location code (3 characters) e.g., RTM = Rotterdam, -
     * Fairway section code (5 characters) e.g., 00102 = Nieuwe Maas, - Object reference
     * code (5 characters) e.g., 66666 = ID administration or terminal code, - Fairway
     * section hectometre e.g., 00050 = hectometres from zero point of Fairway section
     * 00102. The ISRS Location Code is created once and shall not be changed throughout
     * the lifetime of the object. The Standard / Commission Regulation for Electronic
     * Ship Reporting requires the ISRS Location Code of all objects relevant for
     * reporting of voyages, e.g. ports, terminals, passage points, etc.</p>
     */
    public static final Resource LocationID_Type_ISRS_LOCATION_CODE = m.createResource("https://ref.gs1.org/voc/LocationID_Type-ISRS_LOCATION_CODE");

    /**
     * <p>Identification used for internal mapping purposes.</p>
     */
    public static final Resource LocationID_Type_LOCATION_FOR_INTERNAL_USE_1 = m.createResource("https://ref.gs1.org/voc/LocationID_Type-LOCATION_FOR_INTERNAL_USE_1");

    /**
     * <p>Identification used for internal mapping purposes.</p>
     */
    public static final Resource LocationID_Type_LOCATION_FOR_INTERNAL_USE_10 = m.createResource("https://ref.gs1.org/voc/LocationID_Type-LOCATION_FOR_INTERNAL_USE_10");

    /**
     * <p>Identification used for internal mapping purposes.</p>
     */
    public static final Resource LocationID_Type_LOCATION_FOR_INTERNAL_USE_2 = m.createResource("https://ref.gs1.org/voc/LocationID_Type-LOCATION_FOR_INTERNAL_USE_2");

    /**
     * <p>Identification used for internal mapping purposes.</p>
     */
    public static final Resource LocationID_Type_LOCATION_FOR_INTERNAL_USE_3 = m.createResource("https://ref.gs1.org/voc/LocationID_Type-LOCATION_FOR_INTERNAL_USE_3");

    /**
     * <p>Identification used for internal mapping purposes.</p>
     */
    public static final Resource LocationID_Type_LOCATION_FOR_INTERNAL_USE_4 = m.createResource("https://ref.gs1.org/voc/LocationID_Type-LOCATION_FOR_INTERNAL_USE_4");

    /**
     * <p>Identification used for internal mapping purposes.</p>
     */
    public static final Resource LocationID_Type_LOCATION_FOR_INTERNAL_USE_5 = m.createResource("https://ref.gs1.org/voc/LocationID_Type-LOCATION_FOR_INTERNAL_USE_5");

    /**
     * <p>Identification used for internal mapping purposes.</p>
     */
    public static final Resource LocationID_Type_LOCATION_FOR_INTERNAL_USE_6 = m.createResource("https://ref.gs1.org/voc/LocationID_Type-LOCATION_FOR_INTERNAL_USE_6");

    /**
     * <p>Identification used for internal mapping purposes.</p>
     */
    public static final Resource LocationID_Type_LOCATION_FOR_INTERNAL_USE_7 = m.createResource("https://ref.gs1.org/voc/LocationID_Type-LOCATION_FOR_INTERNAL_USE_7");

    /**
     * <p>Identification used for internal mapping purposes.</p>
     */
    public static final Resource LocationID_Type_LOCATION_FOR_INTERNAL_USE_8 = m.createResource("https://ref.gs1.org/voc/LocationID_Type-LOCATION_FOR_INTERNAL_USE_8");

    /**
     * <p>Identification used for internal mapping purposes.</p>
     */
    public static final Resource LocationID_Type_LOCATION_FOR_INTERNAL_USE_9 = m.createResource("https://ref.gs1.org/voc/LocationID_Type-LOCATION_FOR_INTERNAL_USE_9");

    /**
     * <p>Maritime Mobile Service Identities (MMSIs) are nine-digit numbers used by
     * maritime digital selective calling (DSC), automatic identification systems
     * (AIS), and certain other equipment to uniquely identify a ship or a coast
     * radio station.</p>
     */
    public static final Resource LocationID_Type_MMSI_NUMBER = m.createResource("https://ref.gs1.org/voc/LocationID_Type-MMSI_NUMBER");

    /**
     * <p>Open Apparel Registry ID. A sixteen-digit numbering system which uniquely
     * identities global apparel facilities. The ID consists of a Country code, Origin
     * date (the date the facility first appeared in the registry), a General ID
     * and Check ID. OAR IDs are allocated by the Open Apparel Registry to all facilities
     * contributed to the database for the purposes of enabling industry collaboration
     * and improved identification of factories, as well as powering interoperability
     * between industry databases.</p>
     */
    public static final Resource LocationID_Type_OAR_ID = m.createResource("https://ref.gs1.org/voc/LocationID_Type-OAR_ID");

    /**
     * <p>The Open Location Code is a geocode system for identifying an area anywhere
     * on the Earth. It was developed at Google's ZÃ¼rich engineering office, and
     * released late October 2014. Location codes created by the OLC system are referred
     * to as 'plus codes'.</p>
     */
    public static final Resource LocationID_Type_OPEN_LOCATION_CODE = m.createResource("https://ref.gs1.org/voc/LocationID_Type-OPEN_LOCATION_CODE");

    /**
     * <p>Open Supply Hub (OSH) is an expansion of Open Apparel Registry. An OS ID is
     * a fifteen-character numbering system which uniquely identifies global production
     * locations. The ID consists of a Country code, Origin date (the date the facility
     * first appeared in the hubregistry), a General ID and Check ID. Open Supply
     * Hub IDs are allocated by the Open Supply Hub to all production locations that
     * contribute to the database for the purposes of enabling industry collaboration
     * and improved identification of production points, as well as powering interoperability
     * between industry databases.</p>
     */
    public static final Resource LocationID_Type_OS_ID = m.createResource("https://ref.gs1.org/voc/LocationID_Type-OS_ID");

    /**
     * <p>The SMDG Terminal Code List (TCL) contains codes for container handling terminal
     * facilities that are called by seagoing cargo vessels in maritime transport.</p>
     */
    public static final Resource LocationID_Type_SMDG_CODE = m.createResource("https://ref.gs1.org/voc/LocationID_Type-SMDG_CODE");

    /**
     * <p>UN/LOCODE, the United Nations Code for Trade and Transport Locations, is a
     * geographic coding scheme developed and maintained by United Nations Economic
     * Commission for Europe.</p>
     */
    public static final Resource LocationID_Type_UN_LOCODE = m.createResource("https://ref.gs1.org/voc/LocationID_Type-UN_LOCODE");

    /**
     * <p>The Customer Identification File (CIF) is an industry reference file (for
     * the USA), managed by Railinc, that contains the name, physical mailing and
     * billing address, corporate parent information and a unique 13-character identification
     * code for each location and sub-location of a transportation-carrier customer.
     * Railroads use the identification code to accurately identify customers and
     * their locations, ensuring each party in the transaction is referencing the
     * same physical customer location.</p>
     */
    public static final Resource LocationID_Type_US_CIF_CODE = m.createResource("https://ref.gs1.org/voc/LocationID_Type-US_CIF_CODE");

    /**
     * <p>All containers of meat, poultry, and egg products must be labeled with a USDA
     * mark of inspection and establishment (EST number), which is assigned to the
     * plant where the product was produced.</p>
     */
    public static final Resource LocationID_Type_US_EST_NUMBER = m.createResource("https://ref.gs1.org/voc/LocationID_Type-US_EST_NUMBER");

    /**
     * <p>An FDA Establishment Identification (FEI) number is a unique identifier issued
     * by FDA to track inspections of the regulated establishment or facility. FEI
     * numbers are also used to track GDUFA facility fee payments.</p>
     */
    public static final Resource LocationID_Type_US_FEI = m.createResource("https://ref.gs1.org/voc/LocationID_Type-US_FEI");

    /**
     * <p>The HIN is a unique combination of letters and/or numbers permanently affixed
     * to the vessel. All boats must be registered with the USCG (United States Coast
     * Guard ) in order to track accidents and history of boats. Information about
     * a boat's records may be found by using a vessel documentation search by Hull
     * ID Number (HIN).</p>
     */
    public static final Resource LocationID_Type_US_HIN_IDENTIFICATION = m.createResource("https://ref.gs1.org/voc/LocationID_Type-US_HIN_IDENTIFICATION");

    /**
     * <p>All mines are required to apply for an MSHA mine identification number. An
     * MSHA ID is required for each mine site and must be issued before any operations
     * may begin. A mine ID may be requested by completing the online form or by
     * contacting U.S. district office.</p>
     */
    public static final Resource LocationID_Type_US_MINE_ID = m.createResource("https://ref.gs1.org/voc/LocationID_Type-US_MINE_ID");

    /**
     * <p>The Terminal Control Locations Directory lists all approved terminals registered
     * as part of the taxable fuel bulk delivery system. Terminals are listed by
     * the terminal number.</p>
     */
    public static final Resource LocationID_Type_US_TCN_CODE = m.createResource("https://ref.gs1.org/voc/LocationID_Type-US_TCN_CODE");

    /**
     * <p>Service or facility providing aged care.</p>
     */
    public static final Resource LocationRoleType_AGED_CARE_SERVICE = m.createResource("https://ref.gs1.org/voc/LocationRoleType-AGED_CARE_SERVICE");

    /**
     * <p>A vehicle or machine that is able to fly by gaining support from the air.</p>
     */
    public static final Resource LocationRoleType_AIRCRAFT = m.createResource("https://ref.gs1.org/voc/LocationRoleType-AIRCRAFT");

    /**
     * <p>A location with airfield and terminal facilities for aircraft take-off and
     * landing, serving as an air transport terminal at which aircraft may call to
     * receive services such as loading and discharging passengers, crews or cargo,
     * refuelling, restocking, repair etc.</p>
     */
    public static final Resource LocationRoleType_AIRPORT = m.createResource("https://ref.gs1.org/voc/LocationRoleType-AIRPORT");

    /**
     * <p>Entrance to a movable passage like a tunnel or bridge leading to the aircraft</p>
     */
    public static final Resource LocationRoleType_AIRPORT_GATE = m.createResource("https://ref.gs1.org/voc/LocationRoleType-AIRPORT_GATE");

    /**
     * <p>Provides initial patient care and transportation to a medical facility</p>
     */
    public static final Resource LocationRoleType_AMBULANCE_SERVICE = m.createResource("https://ref.gs1.org/voc/LocationRoleType-AMBULANCE_SERVICE");

    /**
     * <p>Provides recreation and entertainment services</p>
     */
    public static final Resource LocationRoleType_AMUSEMENT_ENTERTAINMENT_GAMING = m.createResource("https://ref.gs1.org/voc/LocationRoleType-AMUSEMENT_ENTERTAINMENT_GAMING");

    /**
     * <p>An area where components are put together into an end product, appropriate
     * to the process concerned.</p>
     */
    public static final Resource LocationRoleType_ASSEMBLY = m.createResource("https://ref.gs1.org/voc/LocationRoleType-ASSEMBLY");

    /**
     * <p>An automated teller machine (ATM) is an electronic banking outlet that allows
     * customers to complete basic transactions without the aid of a branch representative
     * or teller. ATMs are known in different parts of the world as automated bank
     * machines (ABM) or cash machines.</p>
     */
    public static final Resource LocationRoleType_ATM = m.createResource("https://ref.gs1.org/voc/LocationRoleType-ATM");

    /**
     * <p>An area within a store (all formats - club, etc.) used to hold product until
     * it is purchased or can be moved to the sales floor.</p>
     */
    public static final Resource LocationRoleType_BACKROOM = m.createResource("https://ref.gs1.org/voc/LocationRoleType-BACKROOM");

    /**
     * <p>A location offering financial services to consumers and/or businesses.</p>
     */
    public static final Resource LocationRoleType_BANK = m.createResource("https://ref.gs1.org/voc/LocationRoleType-BANK");

    /**
     * <p>A berth is a specialised space or part of a wharf space assigned to or taken
     * up by a ship or vessel when anchored or stationary alongside a quay, wharf,
     * jetty, or other structure. As a berth is usually a straight line segment between
     * two points, a wharf may consist of several individual berths and represent
     * a grouping of berths.</p>
     */
    public static final Resource LocationRoleType_BERTH = m.createResource("https://ref.gs1.org/voc/LocationRoleType-BERTH");

    /**
     * <p>The place the animal was born/hatched. Note: the term animal includes but
     * is not limited to mammals, birds, fish and crustaceans.</p>
     */
    public static final Resource LocationRoleType_BIRTH_AREA = m.createResource("https://ref.gs1.org/voc/LocationRoleType-BIRTH_AREA");

    /**
     * <p>A watercraft of a large range of types and sizes, but generally smaller than
     * a ship,</p>
     */
    public static final Resource LocationRoleType_BOAT = m.createResource("https://ref.gs1.org/voc/LocationRoleType-BOAT");

    /**
     * <p>A location or area within a larger location where beverages are bottled.</p>
     */
    public static final Resource LocationRoleType_BOTTLING_SITE = m.createResource("https://ref.gs1.org/voc/LocationRoleType-BOTTLING_SITE");

    /**
     * <p>A Baler used to compact recycled materials (e.g. corrugated boxes, slip sheets
     * and packaging material).</p>
     */
    public static final Resource LocationRoleType_BOX_CRUSHER = m.createResource("https://ref.gs1.org/voc/LocationRoleType-BOX_CRUSHER");

    /**
     * <p>A location for an organization segment that operates in a different physical
     * location or jurisdiction than its parent organization, although is considered
     * as an extension of the parent organization (i.e., same legal entity.).</p>
     */
    public static final Resource LocationRoleType_BRANCH_LOCATION = m.createResource("https://ref.gs1.org/voc/LocationRoleType-BRANCH_LOCATION");

    /**
     * <p>Location where goods are paid for in full at the time of purchase and taken
     * away by the purchaser.</p>
     */
    public static final Resource LocationRoleType_CASH_CARRY_STORE = m.createResource("https://ref.gs1.org/voc/LocationRoleType-CASH_CARRY_STORE");

    /**
     * <p>The product is intended to be sold in a city center. A city center shop is
     * centrally located in the commercial, cultural and often the historical, political
     * and geographic heart of a city, especially those in the Western world.</p>
     */
    public static final Resource LocationRoleType_CITY_CENTER_SHOP = m.createResource("https://ref.gs1.org/voc/LocationRoleType-CITY_CENTER_SHOP");

    /**
     * <p>A location serving as a health facility, often associated with a hospital,
     * care practitioner or medical school for example, that is primarily focused
     * on the care of outpatients, where medical treatment or advice can be administered,
     * especially of a specialist nature.</p>
     */
    public static final Resource LocationRoleType_CLINIC = m.createResource("https://ref.gs1.org/voc/LocationRoleType-CLINIC");

    /**
     * <p>A location designated by a healthcare provider as a site where clinical trials
     * are conducted. In many cases clinical trial sites are hospital facilities
     * with specialised hospital pharmacies, or retail pharmacies on site, but may
     * also include trial specific sites such as a clinical trial subject's residence.</p>
     */
    public static final Resource LocationRoleType_CLINICAL_TRIAL_SITE = m.createResource("https://ref.gs1.org/voc/LocationRoleType-CLINICAL_TRIAL_SITE");

    /**
     * <p>A location where purchased products may be collected by the purchaser or a
     * delegated party.</p>
     */
    public static final Resource LocationRoleType_COLLECTION_CENTER = m.createResource("https://ref.gs1.org/voc/LocationRoleType-COLLECTION_CENTER");

    /**
     * <p>A facility where smaller shipments or consignments are combined into larger
     * consignments bound for a destination.</p>
     */
    public static final Resource LocationRoleType_CONSOLIDATING_CENTER = m.createResource("https://ref.gs1.org/voc/LocationRoleType-CONSOLIDATING_CENTER");

    /**
     * <p>A construction site is an area or piece of land on which construction works
     * are being carried out.</p>
     */
    public static final Resource LocationRoleType_CONSTRUCTION_SITE = m.createResource("https://ref.gs1.org/voc/LocationRoleType-CONSTRUCTION_SITE");

    /**
     * <p>An area on board a shipping vessel where containers are loaded.</p>
     */
    public static final Resource LocationRoleType_CONTAINER_DECK = m.createResource("https://ref.gs1.org/voc/LocationRoleType-CONTAINER_DECK");

    /**
     * <p>A caged and locked area in which regulated, controlled substance pharmaceuticals
     * are held while awaiting shipment.</p>
     */
    public static final Resource LocationRoleType_CONTROLLED_SUBSTANCE_AREA = m.createResource("https://ref.gs1.org/voc/LocationRoleType-CONTROLLED_SUBSTANCE_AREA");

    /**
     * <p>A location for a type of small format retail store often located with or connected
     * to a gas/fuel station. Convenience stores usually provide extended trading
     * hours, operating earlier and later than traditional retail stores.</p>
     */
    public static final Resource LocationRoleType_CONVENIENCE_STORE = m.createResource("https://ref.gs1.org/voc/LocationRoleType-CONVENIENCE_STORE");

    /**
     * <p>A continuous moving strip or surface that is used for transporting single
     * cartons or a load of objects from one place to another.</p>
     */
    public static final Resource LocationRoleType_CONVEYOR_BELT = m.createResource("https://ref.gs1.org/voc/LocationRoleType-CONVEYOR_BELT");

    /**
     * <p>Provides detention and rehabilitative services to inmates</p>
     */
    public static final Resource LocationRoleType_CORRECTION_FACILITY = m.createResource("https://ref.gs1.org/voc/LocationRoleType-CORRECTION_FACILITY");

    /**
     * <p>An area, usually within a store or collection center, that is reserved specifically
     * for consumers to collect goods purchased online (sometimes known as 'click
     * and collect'), or goods purchased in store to be collected at a later time
     * or date (e.g., paid in instalments, bulky goods, goods requiring staff assistance
     * etc). A customer pick-up area may also enable access by vehicle.</p>
     */
    public static final Resource LocationRoleType_CUSTOMER_PICK_UP_AREA = m.createResource("https://ref.gs1.org/voc/LocationRoleType-CUSTOMER_PICK-UP_AREA");

    /**
     * <p>A location where cross-border procedures and formalities may be executed and
     * fulfilled. Examples of these include passport control, importation of goods,
     * sanitary and phytosanitary (SPS) formalities etc.</p>
     */
    public static final Resource LocationRoleType_CUSTOMS_BORDER_CONTROL = m.createResource("https://ref.gs1.org/voc/LocationRoleType-CUSTOMS_BORDER_CONTROL");

    /**
     * <p>Provides oral health treatment and support services</p>
     */
    public static final Resource LocationRoleType_DENTAL_HEALTH_SERVICE = m.createResource("https://ref.gs1.org/voc/LocationRoleType-DENTAL_HEALTH_SERVICE");

    /**
     * <p>A location where vehicles such as those used for transportation (e.g., trucks,
     * trains) or services (e.g., mobile food truck, exhibition cart) can be housed,
     * maintained and deployed from.</p>
     */
    public static final Resource LocationRoleType_DEPOT = m.createResource("https://ref.gs1.org/voc/LocationRoleType-DEPOT");

    /**
     * <p>Tablet, caplet or capsule dispensing machine in which bulk product has been
     * placed to be dispensed on a prescription basis.</p>
     */
    public static final Resource LocationRoleType_DISPENSER = m.createResource("https://ref.gs1.org/voc/LocationRoleType-DISPENSER");

    /**
     * <p>A specialised warehouse space that serves as a hub for the strategic storage
     * of goods, for the purpose of picking, packing and shipping to another location,
     * or the final destination.</p>
     */
    public static final Resource LocationRoleType_DISTRIBUTION_CENTER = m.createResource("https://ref.gs1.org/voc/LocationRoleType-DISTRIBUTION_CENTER");

    /**
     * <p>An area within a facility where transportation such as trucks or rail cars
     * can be loaded with goods for dispatch (i.e., outbound shipping, or sending)
     * or unloaded with goods delivered (i.e., inbound shipping or receiving). Sometimes
     * known as a dock door, a loading or unloading dock or bay, these areas are
     * also used to hold goods temporarily ahead of being stored, or loaded for delivery,
     * so may also include controlled environments such as for cold storage. Docks
     * are designated for use with inbound or outbound shipments, to enable transportation
     * carriers to schedule their arrival for loading or unloading based on dock
     * availability and other critical logistics details such as dock heights, storage
     * conditions and type of equipment on hand. Dock use designations can change
     * frequently based on facility capacity and day-to-day events.</p>
     */
    public static final Resource LocationRoleType_DOCK = m.createResource("https://ref.gs1.org/voc/LocationRoleType-DOCK");

    /**
     * <p>A room or clinic where a doctor works.</p>
     */
    public static final Resource LocationRoleType_DOCTOR_OFFICE = m.createResource("https://ref.gs1.org/voc/LocationRoleType-DOCTOR_OFFICE");

    /**
     * <p>Establishment that offers personal care goods, toiletries and non-controlled
     * drugs which can be obtained without a prescription. Within the Netherlands
     * this establishment is a different than a retail pharmacy (referred to in the
     * code list as DRUG).</p>
     */
    public static final Resource LocationRoleType_DRUG_STORE = m.createResource("https://ref.gs1.org/voc/LocationRoleType-DRUG_STORE");

    /**
     * <p>A location for a type of retail store that is exempt from the payment of certain
     * local or national taxes and duties, on the requirement that the goods sold
     * will be sold to travellers who will take them out of the country. Duty-free
     * stores are usually located within an international travel facility such as
     * an airport or passenger terminal for rail or ferry.</p>
     */
    public static final Resource LocationRoleType_DUTY_FREE_STORE = m.createResource("https://ref.gs1.org/voc/LocationRoleType-DUTY_FREE_STORE");

    /**
     * <p>Premises used regularly for the education or care of children who are pre-school
     * age or younger.</p>
     */
    public static final Resource LocationRoleType_EARLY_CHILDHOOD_EDUCATING_AND_CENTER = m.createResource("https://ref.gs1.org/voc/LocationRoleType-EARLY_CHILDHOOD_EDUCATING_AND_CENTER");

    /**
     * <p>Digital location where the EDI messages can be sent and received from.</p>
     */
    public static final Resource LocationRoleType_EDI_STATION = m.createResource("https://ref.gs1.org/voc/LocationRoleType-EDI_STATION");

    /**
     * <p>A location used as a public or private education premise where primary, secondary
     * or tertiary education is conducted.</p>
     */
    public static final Resource LocationRoleType_EDUCATION_FACILITY = m.createResource("https://ref.gs1.org/voc/LocationRoleType-EDUCATION_FACILITY");

    /**
     * <p>A specific area within the store for holding electronic products such as TV's,
     * DVD players, etc.</p>
     */
    public static final Resource LocationRoleType_ELECTRONICS_AREA = m.createResource("https://ref.gs1.org/voc/LocationRoleType-ELECTRONICS_AREA");

    /**
     * <p>An area of a hospital especially equipped and staffed for emergency care.</p>
     */
    public static final Resource LocationRoleType_EMERGENCY_DEPARTMENT_AREA = m.createResource("https://ref.gs1.org/voc/LocationRoleType-EMERGENCY_DEPARTMENT_AREA");

    /**
     * <p>A specific internal location on the sales floor, typically at the end of an
     * aisle, for displaying product.</p>
     */
    public static final Resource LocationRoleType_END_CAP_AREA = m.createResource("https://ref.gs1.org/voc/LocationRoleType-END_CAP_AREA");

    /**
     * <p>A location that is a type of opening to allow entry to an enclosed place such
     * as a terminal, warehousing, healthcare facility, or agricultural facility
     * or parts thereof for example. For a gate designated as an exit only, see EXIT_GATE.
     * For a gate designated as both an entry and exit, see GATE.</p>
     */
    public static final Resource LocationRoleType_ENTRANCE_GATE = m.createResource("https://ref.gs1.org/voc/LocationRoleType-ENTRANCE_GATE");

    /**
     * <p>A location that is a type of opening to allow exit from an enclosed place
     * such as a terminal, warehousing, healthcare facility, or agricultural facility
     * or parts thereof for example. For a gate designated as an entry only, see
     * ENTRANCE_GATE. For a gate designated as both an entry and exit, see GATE.</p>
     */
    public static final Resource LocationRoleType_EXIT_GATE = m.createResource("https://ref.gs1.org/voc/LocationRoleType-EXIT_GATE");

    /**
     * <p>A location used for agricultural production purposes, such as for growing
     * crops, rearing animals or both. A farm often serves as a hub for a variety
     * of agricultural activities and typically consists of various structures or
     * areas such as barns, silos, feed areas or fields for example.</p>
     */
    public static final Resource LocationRoleType_FARM = m.createResource("https://ref.gs1.org/voc/LocationRoleType-FARM");

    /**
     * <p>A location or area within a larger location where livestock are fed.</p>
     */
    public static final Resource LocationRoleType_FEEDLOT_SITE = m.createResource("https://ref.gs1.org/voc/LocationRoleType-FEEDLOT_SITE");

    /**
     * <p>An area of open land, that may be used for agricultural purposes, such as
     * for growing crops and/or rearing animals. A field may or may not be part of
     * a farm, as it may also exist as a fenced but open space for pasture, devoid
     * of infrastructure such as a wild meadow.</p>
     */
    public static final Resource LocationRoleType_FIELD = m.createResource("https://ref.gs1.org/voc/LocationRoleType-FIELD");

    /**
     * <p>A location equipped with any fixed read point configuration (reader and antennas)
     * for the purpose of capturing data from an RFID device (e.g. read points at
     * doorways or conveyors).</p>
     */
    public static final Resource LocationRoleType_FIXED_READER = m.createResource("https://ref.gs1.org/voc/LocationRoleType-FIXED_READER");

    /**
     * <p>A location with permanent facilities to load or discharge cargo, that does
     * not fit within a maritime, rail, road, air, or multimodal type facility. For
     * example, an oil platform or terminal.</p>
     */
    public static final Resource LocationRoleType_FIXED_TRANSPORT_FACILITIES = m.createResource("https://ref.gs1.org/voc/LocationRoleType-FIXED_TRANSPORT_FACILITIES");

    /**
     * <p>A location for businesses selling prepared food to consumers such as cafes,
     * restaurants, food trucks.</p>
     */
    public static final Resource LocationRoleType_FOOD_BUSINESS = m.createResource("https://ref.gs1.org/voc/LocationRoleType-FOOD_BUSINESS");

    /**
     * <p>A location that is an interchange point at which equipment or goods are exchanged
     * between drivers and/or transport operators.</p>
     */
    public static final Resource LocationRoleType_FREIGHT_HUB = m.createResource("https://ref.gs1.org/voc/LocationRoleType-FREIGHT_HUB");

    /**
     * <p>An assigned area in which shipping containers of any type and size are prepared
     * for loading into a transportation vehicle (e.g., truck, train, vessel or aeroplane)
     * or where the containers are stacked immediately after unloading from a transportation
     * vehicle.</p>
     */
    public static final Resource LocationRoleType_FREIGHT_TERMINAL = m.createResource("https://ref.gs1.org/voc/LocationRoleType-FREIGHT_TERMINAL");

    /**
     * <p>An establishment where plants and gardening equipment are sold.</p>
     */
    public static final Resource LocationRoleType_GARDEN_CENTER = m.createResource("https://ref.gs1.org/voc/LocationRoleType-GARDEN_CENTER");

    /**
     * <p>A location that is a type of opening to allow both entry to and exit from
     * an enclosed place such as a terminal, warehousing, healthcare facility, or
     * agricultural facility or parts thereof, for example. For a gate designated
     * as an entry only, see ENTRANCE_GATE. For a gate designated as an exit only,
     * see EXIT_GATE.</p>
     */
    public static final Resource LocationRoleType_GATE = m.createResource("https://ref.gs1.org/voc/LocationRoleType-GATE");

    /**
     * <p>An area where typically - non-food products other than perishable, dry groceries
     * and health and beauty care products that are displayed in stores on standard
     * shelving. Examples include household cleaning products, paper napkins, laundry
     * detergents, and insect repellents</p>
     */
    public static final Resource LocationRoleType_GENERAL_MDSE_AREA = m.createResource("https://ref.gs1.org/voc/LocationRoleType-GENERAL_MDSE_AREA");

    /**
     * <p>Location where a government body conducts operations.</p>
     */
    public static final Resource LocationRoleType_GOVERNMENT_DEPARTMENT_AGENCY = m.createResource("https://ref.gs1.org/voc/LocationRoleType-GOVERNMENT_DEPARTMENT_AGENCY");

    /**
     * <p>A location where plants are grown and cultivated, within an enclosed or semi-enclosed
     * environment, often within a covered indoor space. Includes temporary or semi-permanent
     * structures.</p>
     */
    public static final Resource LocationRoleType_GREENHOUSE = m.createResource("https://ref.gs1.org/voc/LocationRoleType-GREENHOUSE");

    /**
     * <p>An area where household grocery products, such as fresh or shelf stable foods,
     * domestic cleaning supplies, personal hygiene items, for example, that are
     * displayed in stores on standard shelving.</p>
     */
    public static final Resource LocationRoleType_GROCERY = m.createResource("https://ref.gs1.org/voc/LocationRoleType-GROCERY");

    /**
     * <p>An operational area where internal activities associated with storing, moving,
     * protecting or other handling of goods take place throughout the processes
     * of manufacturing, warehousing or distribution.</p>
     */
    public static final Resource LocationRoleType_HANDLING_AREA = m.createResource("https://ref.gs1.org/voc/LocationRoleType-HANDLING_AREA");

    /**
     * <p>A location that serves as the executive or main office of an organization.</p>
     */
    public static final Resource LocationRoleType_HEAD_OFFICE = m.createResource("https://ref.gs1.org/voc/LocationRoleType-HEAD_OFFICE");

    /**
     * <p>A location where health care organizations provide patient treatment with
     * specialised medical and nursing staff, medical equipment and inpatient care
     * facilities.</p>
     */
    public static final Resource LocationRoleType_HOSPITAL = m.createResource("https://ref.gs1.org/voc/LocationRoleType-HOSPITAL");

    /**
     * <p>A restaurant within a hospital or other medical facility in which the customers
     * serve themselves or are served at a counter.</p>
     */
    public static final Resource LocationRoleType_HOSPITAL_CAFETERIA = m.createResource("https://ref.gs1.org/voc/LocationRoleType-HOSPITAL_CAFETERIA");

    /**
     * <p>An area within a hospital which provides specific treatment or support services
     * not individually included in the Location Type list.</p>
     */
    public static final Resource LocationRoleType_HOSPITAL_DEPARTMENT = m.createResource("https://ref.gs1.org/voc/LocationRoleType-HOSPITAL_DEPARTMENT");

    /**
     * <p>A location within a hospital where pharmaceuticals or medical devices can
     * be dispensed by a pharmacy operator to hospital staff for inpatient treatment
     * as well as directly to patients being discharged. Differs to a retail pharmacy
     * as the site may be related to government funding, subsidized reimbursement
     * lists or agencies, and may also dispense specialized pharmaceuticals (e.g.,
     * orphan drugs).</p>
     */
    public static final Resource LocationRoleType_HOSPITAL_PHARMACY = m.createResource("https://ref.gs1.org/voc/LocationRoleType-HOSPITAL_PHARMACY");

    /**
     * <p>An area within a healthcare facility, usually a hospital or radiology facility,
     * designated for the purpose of imaging and diagnostics.</p>
     */
    public static final Resource LocationRoleType_IMAGING_DIAGNOSTICS_AREA = m.createResource("https://ref.gs1.org/voc/LocationRoleType-IMAGING_DIAGNOSTICS_AREA");

    /**
     * <p>Usually a ward-level location in which stock is held for use on that ward.</p>
     */
    public static final Resource LocationRoleType_IMPREST_LOCATION = m.createResource("https://ref.gs1.org/voc/LocationRoleType-IMPREST_LOCATION");

    /**
     * <p>A location devoted to the rearing and harvesting of aquatic animals and plants
     * within an inland freshwater ecosystem (i.e., fresh or limnetic waters) for
     * industrial, small-scall/artisanal or recreational purposes. Includes natural
     * flowing or lotic waters such as rivers or streams (including their smaller
     * elements such as springs, brooks, rivulets, or rills), artificial canals,
     * and static or lentic waters such as natural lakes and tarns and artificial
     * lakes or reservoirs such as rivers, lakes, etc.</p>
     */
    public static final Resource LocationRoleType_INLAND_FISHERY = m.createResource("https://ref.gs1.org/voc/LocationRoleType-INLAND_FISHERY");

    /**
     * <p>A location with permanent facilities, situated along inland waterways, where
     * inland waterway ships and vessels may dock to receive services such as loading
     * and discharging passengers, crews or cargo, refuelling, restocking, etc.</p>
     */
    public static final Resource LocationRoleType_INLAND_PORT = m.createResource("https://ref.gs1.org/voc/LocationRoleType-INLAND_PORT");

    /**
     * <p>A location that is a specific type of terminal, which supports the transfer
     * between various modes of transport such as rail, road, maritime, inland waterways.</p>
     */
    public static final Resource LocationRoleType_INTERMODAL_TERMINAL = m.createResource("https://ref.gs1.org/voc/LocationRoleType-INTERMODAL_TERMINAL");

    /**
     * <p>A location with mail processing facilities recognized by the Universal Postal
     * Union (UPU) that generates or receives dispatches and/or acts as a transit
     * center for mail exchanged between other International Mail Processing Centers
     * (IMPC).</p>
     */
    public static final Resource LocationRoleType_INTERNATIONAL_MAIL_PROCESSING_CENTER = m.createResource("https://ref.gs1.org/voc/LocationRoleType-INTERNATIONAL_MAIL_PROCESSING_CENTER");

    /**
     * <p>A specific transportation lane or route.</p>
     */
    public static final Resource LocationRoleType_LANE_OR_ROUTE = m.createResource("https://ref.gs1.org/voc/LocationRoleType-LANE_OR_ROUTE");

    /**
     * <p>An area within a store for holding or consolidating customer purchases for
     * final payment and pickup.</p>
     */
    public static final Resource LocationRoleType_LAY_AWAY = m.createResource("https://ref.gs1.org/voc/LocationRoleType-LAY-AWAY");

    /**
     * <p>A building or room containing collections of books, periodicals, and sometimes
     * films and recorded music for use or borrowing by the public or the members
     * of an institution.</p>
     */
    public static final Resource LocationRoleType_LIBRARY = m.createResource("https://ref.gs1.org/voc/LocationRoleType-LIBRARY");

    /**
     * <p>An area within a facility, often near the entrance, that is used predominantly
     * to greet visitors to the building.</p>
     */
    public static final Resource LocationRoleType_MAIN_RECEPTION = m.createResource("https://ref.gs1.org/voc/LocationRoleType-MAIN_RECEPTION");

    /**
     * <p>A location consisting of one or more buildings with facilities for manufacturing.</p>
     */
    public static final Resource LocationRoleType_MANUFACTURING_PLANT = m.createResource("https://ref.gs1.org/voc/LocationRoleType-MANUFACTURING_PLANT");

    /**
     * <p>A location devoted to the rearing and harvesting of aquatic animals and plants
     * within a marine saltwater ecosystem (i.e., open sea/pelagic zone), for industrial,
     * small-scall/artisanal or recreational purposes.</p>
     */
    public static final Resource LocationRoleType_MARINE_FISHERY = m.createResource("https://ref.gs1.org/voc/LocationRoleType-MARINE_FISHERY");

    /**
     * <p>A location where multiple sellers can set-up mobile stalls, booths or stores,
     * to sell various goods to consumers. Markets often include a wide variety of
     * goods such as fresh produce, handcrafts, artisan products for example, and
     * may also include 'pop-up' type stores that are temporary or move from market
     * to market.</p>
     */
    public static final Resource LocationRoleType_MARKET = m.createResource("https://ref.gs1.org/voc/LocationRoleType-MARKET");

    /**
     * <p>Provides mental health treatment and support services.</p>
     */
    public static final Resource LocationRoleType_MENTAL_HEALTH_SERVICE = m.createResource("https://ref.gs1.org/voc/LocationRoleType-MENTAL_HEALTH_SERVICE");

    /**
     * <p>Milking is the act of removing milk from mammary glands of various animal
     * types.</p>
     */
    public static final Resource LocationRoleType_MILKING_SITE = m.createResource("https://ref.gs1.org/voc/LocationRoleType-MILKING_SITE");

    /**
     * <p>Any non-fixed (portable) reader configuration (reader and antennas) for the
     * purpose of capturing EPC data (e.g. Hand held or forklift reader).</p>
     */
    public static final Resource LocationRoleType_MOBILE_READER = m.createResource("https://ref.gs1.org/voc/LocationRoleType-MOBILE_READER");

    /**
     * <p>Nurse station within a hospital or other healthcare service provider</p>
     */
    public static final Resource LocationRoleType_NURSE_STATION = m.createResource("https://ref.gs1.org/voc/LocationRoleType-NURSE_STATION");

    /**
     * <p>A room, set of rooms, or building where the business of a commercial or industrial
     * organization or an individual professional is conducted.</p>
     */
    public static final Resource LocationRoleType_OFFICE = m.createResource("https://ref.gs1.org/voc/LocationRoleType-OFFICE");

    /**
     * <p>A digital location offering online services that utilize the internet to facilitate
     * interactions between two or more distinct but interdependent sets of users.
     * Includes graphical user interfaces for human interaction and/or system interfaces
     * for connection with other digital services (e.g., APIs). Examples include
     * search engines, marketplaces, online financial systems, distribution management
     * entities (DME) etc.</p>
     */
    public static final Resource LocationRoleType_ONLINE_PLATFORM = m.createResource("https://ref.gs1.org/voc/LocationRoleType-ONLINE_PLATFORM");

    /**
     * <p>A digital location where a varied selection of goods or services can be sold
     * to a consumer, by a single seller who may also operate physical stores offering
     * the same varied selection of goods or services under their own brand name
     * or from different brands. Differs to an online platform marketplace, which
     * enables multiple sellers to offer goods and services through the same platform.</p>
     */
    public static final Resource LocationRoleType_ONLINE_SHOP = m.createResource("https://ref.gs1.org/voc/LocationRoleType-ONLINE_SHOP");

    /**
     * <p>A facility usually within a hospital used to perform medical/surgical procedures.</p>
     */
    public static final Resource LocationRoleType_OPERATING_THEATER = m.createResource("https://ref.gs1.org/voc/LocationRoleType-OPERATING_THEATER");

    /**
     * <p>An area within a facility where product is packaged.</p>
     */
    public static final Resource LocationRoleType_PACKAGING_AREA = m.createResource("https://ref.gs1.org/voc/LocationRoleType-PACKAGING_AREA");

    /**
     * <p>A location (standalone or part of a larger facility) where fresh foods such
     * as fruit, vegetables, grains, meat or horticultural products, for example,
     * are sorted, prepared and packed ahead of distribution to shops or markets
     * for sale to end users.</p>
     */
    public static final Resource LocationRoleType_PACKHOUSE = m.createResource("https://ref.gs1.org/voc/LocationRoleType-PACKHOUSE");

    /**
     * <p>An area where any automatic or manual method using bands of plastic film applied
     * to product used to encase palletised loads prior to shipment to protect against
     * product damage.</p>
     */
    public static final Resource LocationRoleType_PALLET_WRAPPER = m.createResource("https://ref.gs1.org/voc/LocationRoleType-PALLET_WRAPPER");

    /**
     * <p>Pathology area within a hospital or independently operated.</p>
     */
    public static final Resource LocationRoleType_PATHOLOGY = m.createResource("https://ref.gs1.org/voc/LocationRoleType-PATHOLOGY");

    /**
     * <p>Business providing personal services such as beauty therapy, tattoo parlours,
     * hair salons etc.</p>
     */
    public static final Resource LocationRoleType_PERSONAL_SERVICES = m.createResource("https://ref.gs1.org/voc/LocationRoleType-PERSONAL_SERVICES");

    /**
     * <p>An establishment beside a road selling fuel for motor vehicles.</p>
     */
    public static final Resource LocationRoleType_PETROL_STATION = m.createResource("https://ref.gs1.org/voc/LocationRoleType-PETROL_STATION");

    /**
     * <p>A location where goods may be temporarily stored until collected or loaded
     * to a shipment for the next part of a transportation process.</p>
     */
    public static final Resource LocationRoleType_PICK_UP_LOCATION = m.createResource("https://ref.gs1.org/voc/LocationRoleType-PICK-UP_LOCATION");

    /**
     * <p>An area within a facility in which product is picked to fulfil an order.</p>
     */
    public static final Resource LocationRoleType_PICKING_AREA = m.createResource("https://ref.gs1.org/voc/LocationRoleType-PICKING_AREA");

    /**
     * <p>An area, usually within a store, commonly known as a 'checkout', where barcodes
     * on trade items can be scanned to enable a consumer purchase and to complete
     * and record the transaction for the seller.</p>
     */
    public static final Resource LocationRoleType_POINT_OF_SALE = m.createResource("https://ref.gs1.org/voc/LocationRoleType-POINT_OF_SALE");

    /**
     * <p>A health service which provides a first point of consultation for patients.
     * Includes community centres.</p>
     */
    public static final Resource LocationRoleType_PRIMARY_HEALTH_SERVICE = m.createResource("https://ref.gs1.org/voc/LocationRoleType-PRIMARY_HEALTH_SERVICE");

    /**
     * <p>An area which provides printed labels/tags for the goods/cartons/pallets within
     * a DC or manufacturer facility.</p>
     */
    public static final Resource LocationRoleType_PRINTING_ROOM = m.createResource("https://ref.gs1.org/voc/LocationRoleType-PRINTING_ROOM");

    /**
     * <p>An area within a facility where the conversion of materials and or assembly
     * of components to manufacture goods, products or services takes place.</p>
     */
    public static final Resource LocationRoleType_PRODUCTION_AREA = m.createResource("https://ref.gs1.org/voc/LocationRoleType-PRODUCTION_AREA");

    /**
     * <p>An area in a factory in which goods being manufactured is passed through a
     * set linear sequence of mechanical or manual operations.</p>
     */
    public static final Resource LocationRoleType_PRODUCTION_LINE = m.createResource("https://ref.gs1.org/voc/LocationRoleType-PRODUCTION_LINE");

    /**
     * <p>A specific area or room that is used to hold special purchased product.</p>
     */
    public static final Resource LocationRoleType_PROMOTION_AREA = m.createResource("https://ref.gs1.org/voc/LocationRoleType-PROMOTION_AREA");

    /**
     * <p>A building, or a part of one, where storage space is offered to other companies
     * for compensation (fee), for the storage of their goods, merchandise, etc.</p>
     */
    public static final Resource LocationRoleType_PUBLIC_WAREHOUSE = m.createResource("https://ref.gs1.org/voc/LocationRoleType-PUBLIC_WAREHOUSE");

    /**
     * <p>An area in which any product not meeting quality standards is held pending
     * further evaluation.</p>
     */
    public static final Resource LocationRoleType_QUALITY_CONTROL = m.createResource("https://ref.gs1.org/voc/LocationRoleType-QUALITY_CONTROL");

    /**
     * <p>An area at a manufacturing, distribution or retail facility to hold product
     * that may not be suitable for consumption until further inspection.</p>
     */
    public static final Resource LocationRoleType_QUARANTINE = m.createResource("https://ref.gs1.org/voc/LocationRoleType-QUARANTINE");

    /**
     * <p>A location with one or more buildings/platforms where trains can stop for
     * people to embark and disembark.</p>
     */
    public static final Resource LocationRoleType_RAIL_STATION = m.createResource("https://ref.gs1.org/voc/LocationRoleType-RAIL_STATION");

    /**
     * <p>A location with one or more railway terminals such as freight terminals or
     * rail stations (excluding passenger terminals), that provides connections with
     * other rail vehicles and other modes of transport.</p>
     */
    public static final Resource LocationRoleType_RAIL_TERMINAL = m.createResource("https://ref.gs1.org/voc/LocationRoleType-RAIL_TERMINAL");

    /**
     * <p>A point at which a tagged object's location has been verified by an associated
     * read of a separate fixed location tag. Read Point Verification Spot would
     * be used when there is a business process to capture the current location of
     * an object at rest (typically with a mobile reader).</p>
     */
    public static final Resource LocationRoleType_READ_POINT_VERIFICATION_SPOT = m.createResource("https://ref.gs1.org/voc/LocationRoleType-READ_POINT_VERIFICATION_SPOT");

    /**
     * <p>The place the animal was raised after birth to the end of the animals' life.
     * Note: the term animal includes but is not limited to mammals, birds, fish
     * and crustaceans.</p>
     */
    public static final Resource LocationRoleType_REARING_AREA = m.createResource("https://ref.gs1.org/voc/LocationRoleType-REARING_AREA");

    /**
     * <p>An area in which recalled product is stored pending shipment back to the manufacturer
     * or the manufacturer's designated returns centre for final disposition.</p>
     */
    public static final Resource LocationRoleType_RECALLED_PRODUCT_AREA = m.createResource("https://ref.gs1.org/voc/LocationRoleType-RECALLED_PRODUCT_AREA");

    /**
     * <p>An area within a facility where incoming goods are unloaded and checked for
     * condition and completeness.</p>
     */
    public static final Resource LocationRoleType_RECEIVING_AREA = m.createResource("https://ref.gs1.org/voc/LocationRoleType-RECEIVING_AREA");

    /**
     * <p>A location where goods may be temporarily received and stored for the purpose
     * of unloading shipments.</p>
     */
    public static final Resource LocationRoleType_RECEIVING_LOCATION = m.createResource("https://ref.gs1.org/voc/LocationRoleType-RECEIVING_LOCATION");

    /**
     * <p>A location where goods may be combined with other goods and packed for sale
     * or shipping distribution as a single pack. For locations where transport units
     * are combined for shipping, see CONSOLIDATING_CENTER.</p>
     */
    public static final Resource LocationRoleType_REPACKING_FACILITY = m.createResource("https://ref.gs1.org/voc/LocationRoleType-REPACKING_FACILITY");

    /**
     * <p>An institute, centre, or other location where research is conducted.</p>
     */
    public static final Resource LocationRoleType_RESEARCH_FACILITY = m.createResource("https://ref.gs1.org/voc/LocationRoleType-RESEARCH_FACILITY");

    /**
     * <p>A dwelling or an apartment where one lives.</p>
     */
    public static final Resource LocationRoleType_RESIDENCE = m.createResource("https://ref.gs1.org/voc/LocationRoleType-RESIDENCE");

    /**
     * <p>A location for a retail store that sells and/or dispenses pharmaceuticals
     * and medical devices to the general public, often at the direction of physicians.
     * Quite often also sells personal care goods, toiletries and non-controlled
     * or over-the-counter (OTC) drugs.</p>
     */
    public static final Resource LocationRoleType_RETAIL_PHARMACY = m.createResource("https://ref.gs1.org/voc/LocationRoleType-RETAIL_PHARMACY");

    /**
     * <p>The location where a returnable asset is serviced.</p>
     */
    public static final Resource LocationRoleType_RETURNABLE_ASSET_SERVICE_CENTER = m.createResource("https://ref.gs1.org/voc/LocationRoleType-RETURNABLE_ASSET_SERVICE_CENTER");

    /**
     * <p>An area where goods, that have been dispatched to be delivered, are received
     * back into a facility for further processing. Examples of processing include
     * sorting, cleaning, resale, onward transportation to other specialized facilities,
     * destruction, etc.</p>
     */
    public static final Resource LocationRoleType_RETURNS_AREA = m.createResource("https://ref.gs1.org/voc/LocationRoleType-RETURNS_AREA");

    /**
     * <p>A location that is connected to other locations by means of roads.</p>
     */
    public static final Resource LocationRoleType_ROAD_TERMINAL = m.createResource("https://ref.gs1.org/voc/LocationRoleType-ROAD_TERMINAL");

    /**
     * <p>An area within a store (all formats - club, etc.) where product is displayed
     * for customer purchase.</p>
     */
    public static final Resource LocationRoleType_SALES_FLOOR = m.createResource("https://ref.gs1.org/voc/LocationRoleType-SALES_FLOOR");

    /**
     * <p>An area within a store between two physical locations (e.g. Backroom and Sales
     * Floor) - used for a read point only.</p>
     */
    public static final Resource LocationRoleType_SALES_FLOOR_TRANSITION_AREA = m.createResource("https://ref.gs1.org/voc/LocationRoleType-SALES_FLOOR_TRANSITION_AREA");

    /**
     * <p>A location for individuals or companies to sell used goods.</p>
     */
    public static final Resource LocationRoleType_SALES_YARD = m.createResource("https://ref.gs1.org/voc/LocationRoleType-SALES_YARD");

    /**
     * <p>A location with maritime facilities, at which both seagoing and inland waterway
     * ships and seagoing vessels may dock to receive services such as loading and
     * discharging passengers, crews or cargo, refuelling, restocking, repair.</p>
     */
    public static final Resource LocationRoleType_SEAPORT = m.createResource("https://ref.gs1.org/voc/LocationRoleType-SEAPORT");

    /**
     * <p>A designated internal location for the purpose of minimising direct access
     * to the product.</p>
     */
    public static final Resource LocationRoleType_SECURITY_AREA = m.createResource("https://ref.gs1.org/voc/LocationRoleType-SECURITY_AREA");

    /**
     * <p>The product should be placed in an area where the consumer can self serve
     * themselves to their purchase needs. The product may have been portioned, cut
     * or modified prior.</p>
     */
    public static final Resource LocationRoleType_SELF_SERVICE = m.createResource("https://ref.gs1.org/voc/LocationRoleType-SELF_SERVICE");

    /**
     * <p>The product is recommended to be placed at a location where an employee from
     * the trading partner will need to portion, cut, or modify the product to the
     * end consumer based upon consumer need.</p>
     */
    public static final Resource LocationRoleType_SERVICE_COUNTER = m.createResource("https://ref.gs1.org/voc/LocationRoleType-SERVICE_COUNTER");

    /**
     * <p>A location specified within a larger area, used to hold or store objects.
     * A shelf is generally a flat, rigid surface or structure which may usually
     * be composed of wood, glass or metal, fixed at right angles to a wall or other
     * vertical structure.</p>
     */
    public static final Resource LocationRoleType_SHELF = m.createResource("https://ref.gs1.org/voc/LocationRoleType-SHELF");

    /**
     * <p>An area within a facility where outgoing goods are checked for condition and
     * completeness and loaded onto a conveyance for transport.</p>
     */
    public static final Resource LocationRoleType_SHIPPING_AREA = m.createResource("https://ref.gs1.org/voc/LocationRoleType-SHIPPING_AREA");

    /**
     * <p>The location from which physical goods are shipped. In cases when a shipment
     * may be completed through a single consignment, the ship from location is the
     * same location that is managed by the dispatch party or used by the consignor.
     * However in cases when a shipment involves multiple consignments, there will
     * various ship from locations, that do not necessarily correspond to the same
     * locations associated with the consignors or dispatch parties.</p>
     */
    public static final Resource LocationRoleType_SHIP_FROM_LOCATION = m.createResource("https://ref.gs1.org/voc/LocationRoleType-SHIP_FROM_LOCATION");

    /**
     * <p>The location to which physical goods are shipped. In cases when a shipment
     * may be completed through a single consignment, the ship to location is the
     * same location that is managed by the delivery recipient party or used by the
     * consignee. However in cases when a shipment involves multiple consignments,
     * there will be various ship to locations, that do not necessarily correspond
     * to the same locations associated with the consignees or delivery recipient
     * parties.</p>
     */
    public static final Resource LocationRoleType_SHIP_TO_LOCATION = m.createResource("https://ref.gs1.org/voc/LocationRoleType-SHIP_TO_LOCATION");

    /**
     * <p>A location or area within a larger location, used to store grain within a
     * tower or pit.</p>
     */
    public static final Resource LocationRoleType_SILO = m.createResource("https://ref.gs1.org/voc/LocationRoleType-SILO");

    /**
     * <p>A facility where animals are slaughtered for meat as food.</p>
     */
    public static final Resource LocationRoleType_SLAUGHTER_HOUSE = m.createResource("https://ref.gs1.org/voc/LocationRoleType-SLAUGHTER_HOUSE");

    /**
     * <p>A location for individuals to engage in sports and recreational activities
     * for leisure.</p>
     */
    public static final Resource LocationRoleType_SPORTS_AND_RECERATIONAL = m.createResource("https://ref.gs1.org/voc/LocationRoleType-SPORTS_AND_RECERATIONAL");

    /**
     * <p>A location where goods may be stored temporarily between two separate stages
     * or parts of an overall inbound or outbound goods process. E.g., received and
     * approved goods may sit in a staging area before they are put away into the
     * main storage area of the warehouse. Another example is when components for
     * a manufacturing process are temporarily placed in a staging area between the
     * warehouse and the manufacturing shop floor until those components can be taken
     * to the correct workstations on the manufacturing shop floor.</p>
     */
    public static final Resource LocationRoleType_STAGING_AREA = m.createResource("https://ref.gs1.org/voc/LocationRoleType-STAGING_AREA");

    /**
     * <p>An establishment or building where a specified activity or service is based.</p>
     */
    public static final Resource LocationRoleType_STATION = m.createResource("https://ref.gs1.org/voc/LocationRoleType-STATION");

    /**
     * <p>An area within a facility where material or goods are kept to fulfil a future
     * need. Examples of facilities include shops, manufacturing plants, distribution
     * centers, yards, depots, etc.</p>
     */
    public static final Resource LocationRoleType_STORAGE_AREA = m.createResource("https://ref.gs1.org/voc/LocationRoleType-STORAGE_AREA");

    /**
     * <p>A location where a varied selection of goods or services can be sold to a
     * consumer.</p>
     */
    public static final Resource LocationRoleType_STORE = m.createResource("https://ref.gs1.org/voc/LocationRoleType-STORE");

    /**
     * <p>A location which serves as a pathway for handling transport processes that
     * may involve cargo and people, such as passengers or crew, for example.</p>
     */
    public static final Resource LocationRoleType_TERMINAL = m.createResource("https://ref.gs1.org/voc/LocationRoleType-TERMINAL");

    /**
     * <p>A code to qualify the locations to which a retailer or wholesaler can send
     * unsold product. Examples are expired product, damaged, reclamation or general
     * product returns.</p>
     */
    public static final Resource LocationRoleType_TRADE_ITEM_RETURN_LOCATION = m.createResource("https://ref.gs1.org/voc/LocationRoleType-TRADE_ITEM_RETURN_LOCATION");

    /**
     * <p>A form of rail transport consisting of a series of connected vehicles that
     * generally run along a railroad (or railway) track to transport passengers
     * or cargo (also known as 'freight' or 'goods').</p>
     */
    public static final Resource LocationRoleType_TRAIN = m.createResource("https://ref.gs1.org/voc/LocationRoleType-TRAIN");

    /**
     * <p>The retailing merchandise through vending machines.</p>
     */
    public static final Resource LocationRoleType_VENDING = m.createResource("https://ref.gs1.org/voc/LocationRoleType-VENDING");

    /**
     * <p>A trade channel where the trade item is sold through a retailer within a retailer
     * for example a rack jobber.</p>
     */
    public static final Resource LocationRoleType_VENDOR_LEASED_SPACE = m.createResource("https://ref.gs1.org/voc/LocationRoleType-VENDOR_LEASED_SPACE");

    /**
     * <p>An area where grape vines are grown in order to produce wine.</p>
     */
    public static final Resource LocationRoleType_VINEYARD = m.createResource("https://ref.gs1.org/voc/LocationRoleType-VINEYARD");

    /**
     * <p>An enterprise's physical location where guests are received during set working
     * hours.</p>
     */
    public static final Resource LocationRoleType_VISITING_ADDRESS = m.createResource("https://ref.gs1.org/voc/LocationRoleType-VISITING_ADDRESS");

    /**
     * <p>Usually, a sub-location within a hospital typically one allocated to a particular
     * type of patient.</p>
     */
    public static final Resource LocationRoleType_WARD = m.createResource("https://ref.gs1.org/voc/LocationRoleType-WARD");

    /**
     * <p>A location equipped with the appropriate equipment and fittings for large
     * quantities of items such as raw materials or manufactured goods to be stored
     * in the appropriate conditions prior to distribution e.g., cold storage. A
     * warehouse is a facility that, along with appropriate storage and handling
     * equipment includes personnel and management resources, enabling to stocking
     * or storage of goods and control of inbound goods (e.g., such as those received
     * from suppliers, production centets, etc.) and outbound goods (e.g., such as
     * those being sent to production, sales, etc.).</p>
     */
    public static final Resource LocationRoleType_WAREHOUSE = m.createResource("https://ref.gs1.org/voc/LocationRoleType-WAREHOUSE");

    /**
     * <p>An area within a parent location designated for the central depositing of
     * waste streams prior to collection.</p>
     */
    public static final Resource LocationRoleType_WASTE_CENTER = m.createResource("https://ref.gs1.org/voc/LocationRoleType-WASTE_CENTER");

    /**
     * <p>A wharf or quay is a fixed location with a structure built parallel to the
     * waterfront of a harbour, navigable river or any body of water so that ships
     * and vessels may lie alongside for docking, loading, and unloading purposes.</p>
     */
    public static final Resource LocationRoleType_WHARF = m.createResource("https://ref.gs1.org/voc/LocationRoleType-WHARF");

    /**
     * <p>A tract of ground next to, surrounding, or surrounded by a building or buildings,
     * used for holding product (e.g., ores, sand) or equipment (e.g. trailer, container,
     * wagons) or transport means (e.g., trucks, tractors, locomotives).</p>
     */
    public static final Resource LocationRoleType_YARD = m.createResource("https://ref.gs1.org/voc/LocationRoleType-YARD");

    /**
     * <p>A measure of the light-emitting intensity of a light source, in a specific
     * direction per unit area of the emitting surface. For a very narrow cone containing
     * the direction, it is the ratio of the luminous flux emitted within that cone
     * to the solid angle of the cone per unit area of the emitting surface. SI Units:
     * candela per square metre</p>
     */
    public static final Resource Luminance = m.createResource("https://ref.gs1.org/voc/Luminance");

    /**
     * <p>A measure of the perceived power of light emitted by a source or received
     * by a surface and irrespective of direction, taking into account the sensitivity
     * of the human eye to different wavelengths of light. SI Units: lumen = 1 candela
     * per steradian</p>
     */
    public static final Resource LuminousFlux = m.createResource("https://ref.gs1.org/voc/LuminousFlux");

    /**
     * <p>A measure of the light-emitting intensity of a light source, in a specific
     * direction. For a very narrow cone containing the direction, it is the ratio
     * of the luminous flex emitted within that cone to the solid angle of the cone.
     * SI Units: candela</p>
     */
    public static final Resource LuminousIntensity = m.createResource("https://ref.gs1.org/voc/LuminousIntensity");

    /**
     * <p>A measure of the total magnetic field that passes through a specific area.
     * The surface integral of the product of the permeability of the medium and
     * the magnetic field intensity perpendicular to the surface. SI Units: weber</p>
     */
    public static final Resource MagneticFlux = m.createResource("https://ref.gs1.org/voc/MagneticFlux");

    /**
     * <p>The product of the magnetic field strength and the permeability of a material.
     * SI Units: tesla = weber per square metre</p>
     */
    public static final Resource MagneticFluxDensity = m.createResource("https://ref.gs1.org/voc/MagneticFluxDensity");

    /**
     * <p>The potential energy per unit element of current (current multiplied by length).
     * SI Units: weber per metre (Joules per ampere metre)</p>
     */
    public static final Resource MagneticVectorPotential = m.createResource("https://ref.gs1.org/voc/MagneticVectorPotential");

    /**
     * <p>The quantity of matter in a body. Inertial mass is the measure of the inertia
     * of a body; its resistance to acceleration. SI Units: kilogram</p>
     */
    public static final Resource Mass = m.createResource("https://ref.gs1.org/voc/Mass");

    /**
     * <p>The mass of the consistutent (or solute) divided by the volume of the mixture
     * (or solvent). SI Units: kilogram per cubic metre</p>
     */
    public static final Resource MassConcentration = m.createResource("https://ref.gs1.org/voc/MassConcentration");

    /**
     * <p>The mass of fluid that passes per unit of time. SI Units: kilogram per second</p>
     */
    public static final Resource MassFlowRate = m.createResource("https://ref.gs1.org/voc/MassFlowRate");

    /**
     * <p>The mass of fluid that passes per unit of time per unit area perpendicular
     * to the flow direction. SI Units: kilogram per second per square metre</p>
     */
    public static final Resource MassPerAreaTime = m.createResource("https://ref.gs1.org/voc/MassPerAreaTime");

    /**
     * <p>Freshly picked and immediately packed and shipped at mature stage and flown
     * to destination for adequate distribution (i.e. imports from South America,
     * Africa or Europe). Flown by jet to market; the carton will be labelled Jet
     * Fresh, when applicable, stickered Jet Fresh. For the produce industry, most
     * common with berries, stone fruits and pineapples.</p>
     */
    public static final Resource MaturationMethodCode_JET_FRESH = m.createResource("https://ref.gs1.org/voc/MaturationMethodCode-JET_FRESH");

    /**
     * <p>Product stored at proper temperature prior to shipment to allow ripening and/or
     * colouring, adequate for distribution and/or consumption. Pre-conditioned product
     * is matured to a specific maturity level as a result of ripening through either
     * temperature, gas treatment, humidity or any combination thereof.</p>
     */
    public static final Resource MaturationMethodCode_PRECONDITIONED = m.createResource("https://ref.gs1.org/voc/MaturationMethodCode-PRECONDITIONED");

    /**
     * <p>Product that is picked at optimum maturity or just shy of. It is almost ripe
     * or ready to eat. This fruit will be shipped immediately (imported = flown)
     * from the pack-house and stickered as Tree or Vine Ripe.</p>
     */
    public static final Resource MaturationMethodCode_TREE_VINE_RIPE = m.createResource("https://ref.gs1.org/voc/MaturationMethodCode-TREE_VINE_RIPE");

    /**
     * <p>The method used to analyse the products resulted in approximate value of the
     * nutritional content.</p>
     */
    public static final Resource MeasurementPrecisionCode_APPROXIMATELY = m.createResource("https://ref.gs1.org/voc/MeasurementPrecisionCode-APPROXIMATELY");

    /**
     * <p>The method used to analyse the products resulted in exact value of the nutritional
     * content.</p>
     */
    public static final Resource MeasurementPrecisionCode_EXACT = m.createResource("https://ref.gs1.org/voc/MeasurementPrecisionCode-EXACT");

    /**
     * <p>To indicate presence when the measurement value is too small to be measured
     * precisely (rule states less than 0.5).</p>
     */
    public static final Resource MeasurementPrecisionCode_LESS_THAN = m.createResource("https://ref.gs1.org/voc/MeasurementPrecisionCode-LESS_THAN");

    /**
     * <p>A measure of the size of a data structure or capacity of a data carrier, typically
     * measured in bits (binary digits), bytes or octets (8 bits) or multiples thereof.
     * Units: byte</p>
     */
    public static final Resource MemoryCapacity = m.createResource("https://ref.gs1.org/voc/MemoryCapacity");

    /**
     * <p>The concentration of a solution expressed as the number of moles of dissolved
     * substance per unit mass of solvent. SI Units: mole per kg</p>
     */
    public static final Resource MolalityOfSolute = m.createResource("https://ref.gs1.org/voc/MolalityOfSolute");

    /**
     * <p>The ratio of the thermodynamic energy of a chemical compound to the amount
     * of substance (atoms or molecules) contained within it, the amount of substance
     * being measured in moles. SI Units: joule per mole</p>
     */
    public static final Resource MolarEnergy = m.createResource("https://ref.gs1.org/voc/MolarEnergy");

    /**
     * <p>The ratio of the mass of a chemical compound to the amount of substance (atoms
     * or molecules) contained within it, the amount of substance being measured
     * in moles. SI Units: kilogram per mole</p>
     */
    public static final Resource MolarMass = m.createResource("https://ref.gs1.org/voc/MolarMass");

    /**
     * <p>The volume occupied by a substance per unit amount of substance at a specified
     * temperature and pressure. SI Units: cubic metre per mole</p>
     */
    public static final Resource MolarVolume = m.createResource("https://ref.gs1.org/voc/MolarVolume");

    public static final Resource NonbinaryLogicCode_FALSE = m.createResource("https://ref.gs1.org/voc/NonbinaryLogicCode-FALSE");

    public static final Resource NonbinaryLogicCode_NOT_APPLICABLE = m.createResource("https://ref.gs1.org/voc/NonbinaryLogicCode-NOT_APPLICABLE");

    public static final Resource NonbinaryLogicCode_TRUE = m.createResource("https://ref.gs1.org/voc/NonbinaryLogicCode-TRUE");

    public static final Resource NonbinaryLogicCode_UNSPECIFIED = m.createResource("https://ref.gs1.org/voc/NonbinaryLogicCode-UNSPECIFIED");

    /**
     * <p>Nutrient measurement is based on a measurement value for example grams or
     * ounces.</p>
     */
    public static final Resource NutrientBasisQuantityCode_BY_MEASURE = m.createResource("https://ref.gs1.org/voc/NutrientBasisQuantityCode-BY_MEASURE");

    /**
     * <p>Nutrient measurement is based on a specified serving amount.</p>
     */
    public static final Resource NutrientBasisQuantityCode_BY_SERVING = m.createResource("https://ref.gs1.org/voc/NutrientBasisQuantityCode-BY_SERVING");

    /**
     * <p>A claim that a food is free from additives. Note the amount that determines
     * containment or lack of containment is based on target market regulations.</p>
     */
    public static final Resource NutritionalClaimTypeCode_ADDITIVE_FREE = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-ADDITIVE_FREE");

    /**
     * <p>A claim that a food contains artificial sweeteners. Artificial sweeteners
     * are sugar substitutes that are synthetic.</p>
     */
    public static final Resource NutritionalClaimTypeCode_ARTIFICIALLY_SWEETENED = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-ARTIFICIALLY_SWEETENED");

    /**
     * <p>A claim that a food is free from Cholesterol. Note the amount that determines
     * containment or lack of containment is based on target market regulations.</p>
     */
    public static final Resource NutritionalClaimTypeCode_CHOLESTEROL_FREE = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-CHOLESTEROL_FREE");

    /**
     * <p>A claim that a food is free from colouring agents. Note the amount that determines
     * containment or lack of containment is based on target market regulations.</p>
     */
    public static final Resource NutritionalClaimTypeCode_COLOURING_AGENT_FREE = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-COLOURING_AGENT_FREE");

    /**
     * <p>A claim that a food contains glyzyrrhizin. Note the amount that determines
     * containment or lack of containment is based on target market regulations.</p>
     */
    public static final Resource NutritionalClaimTypeCode_CONTAINS_GLYZYRRHIZIN = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-CONTAINS_GLYZYRRHIZIN");

    /**
     * <p>A claim that a food is contains liquorice. Note the amount that determines
     * containment or lack of containment is based on target market regulations.</p>
     */
    public static final Resource NutritionalClaimTypeCode_CONTAINS_LIQUORICE = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-CONTAINS_LIQUORICE");

    /**
     * <p>A claim that a food contains soy. Note the amount that determines containment
     * or lack of containment is based on target market regulations.</p>
     */
    public static final Resource NutritionalClaimTypeCode_CONTAINS_SOY = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-CONTAINS_SOY");

    /**
     * <p>A claim that a food is free from egg. Note the amount that determines containment
     * or lack of containment is based on target market regulations.</p>
     */
    public static final Resource NutritionalClaimTypeCode_EGG_FREE = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-EGG_FREE");

    /**
     * <p>A claim that a food is energy-free, and any claim likely to have the same
     * meaning for the consumer, may only be made where the product contains less
     * than 4kcal (17kj)/100ml. In the case of energy-free foods, the term naturally
     * may be used as a prefix to this claim.</p>
     */
    public static final Resource NutritionalClaimTypeCode_ENERGY_FREE = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-ENERGY_FREE");

    /**
     * <p>A claim that a food is energy-reduced, and any claim likely to have the same
     * meaning for the consumer, may only be made where the energy value is reduced
     * by at least 30%, with an indication of the characteristic(s), which make(s)
     * the food reduced in its total energy value.</p>
     */
    public static final Resource NutritionalClaimTypeCode_ENERGY_REDUCED = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-ENERGY_REDUCED");

    /**
     * <p>A claim that a food is enriched or fortified in vitamins and/or minerals,
     * and any claim likely to have the same meaning for the consumer, may only be
     * made where the product contains the vitamins and/or minerals in at least a
     * significant amount as defined in the Annex of Directive 90/496/EEC.</p>
     */
    public static final Resource NutritionalClaimTypeCode_ENRICHED_OR_FORTIFIED_IN_VITAMINS_AND_OR_MINERALS = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-ENRICHED_OR_FORTIFIED_IN_VITAMINS_AND_OR_MINERALS");

    /**
     * <p>A claim that a food is fat-free, and any claim likely to have the same meaning
     * for the consumer, may only be made where the product contains no more than
     * 0.5g of fat per 100g or 100ml. However, claims expressed as X% fat-free shall
     * be prohibited. In the case of foods naturally fat-free, the term naturally
     * may be used as a prefix to this claim.</p>
     */
    public static final Resource NutritionalClaimTypeCode_FAT_FREE = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-FAT_FREE");

    /**
     * <p>A claim that a food is free from Gluten. Any claim likely to have the same
     * meaning for the consumer, may only be made where the product contains an amount
     * less than or equal to 20 mg/kg gluten according to the Commission Regulation
     * (EC) No 41/2009</p>
     */
    public static final Resource NutritionalClaimTypeCode_FREE_FROM_GLUTEN = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-FREE_FROM_GLUTEN");

    /**
     * <p>A claim that a food is regularly analysed to guarantee that the product is
     * free from lactose.</p>
     */
    public static final Resource NutritionalClaimTypeCode_GUARANTEED_LACTOSE_FREE = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-GUARANTEED_LACTOSE_FREE");

    /**
     * <p>A claim that a food is high in fibre, and any claim likely to have the same
     * meaning for the consumer, may only be made where the product contains at least
     * 6g of fibre per 100g or at least 3g of fibre per 100 kcal. In the case of
     * foods naturally high in fibre, the term naturally may be used as a prefix
     * to this claim.</p>
     */
    public static final Resource NutritionalClaimTypeCode_HIGH_FIBRE = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-HIGH_FIBRE");

    /**
     * <p>A claim that a food is high in protein, and any claim likely to have the same
     * meaning for the consumer, may only be made where at least 20% of the energy
     * value of the food is provided by protein. In the case of foods naturally high
     * in protein, the term naturally may be used as a prefix to this claim.</p>
     */
    public static final Resource NutritionalClaimTypeCode_HIGH_PROTEIN = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-HIGH_PROTEIN");

    /**
     * <p>A claim that a food is high in vitamins and or minerals, and any claim likely
     * to have the same meaning for the consumer, may only be made where the product
     * contains at least twice the value of source of vitamins and minerals. In case
     * of foods naturally high in vitamins and/or minerals, the term naturally may
     * be used as a prefix to this claim.</p>
     */
    public static final Resource NutritionalClaimTypeCode_HIGH_VITAMINS_AND_OR_MINERALS = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-HIGH_VITAMINS_AND_OR_MINERALS");

    /**
     * <p>A claim that a food is free of lactose. Note the amount that determines containment
     * or lack of containment is based on target market regulations.</p>
     */
    public static final Resource NutritionalClaimTypeCode_LACTOSE_FREE = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-LACTOSE_FREE");

    /**
     * <p>A claim stating that a product is light or lite, and any claim likely to have
     * the same meaning for the consumer, shall follow the same conditions as those
     * set for the term reduced; the claim shall also be accompanied by an indication
     * of the characteristic(s) which make the food light or lite.</p>
     */
    public static final Resource NutritionalClaimTypeCode_LIGHT_LITE = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-LIGHT_LITE");

    /**
     * <p>A claim that a food is low in energy, and any claim likely to have the same
     * meaning for the consumer, may only be made where the product contains less
     * than 40 kcal (170 kj)/100g and less than 20kcal (80kj)/100ml. In the case
     * of foods naturally low in energy, the term naturally may be used as a prefix
     * to this claim.</p>
     */
    public static final Resource NutritionalClaimTypeCode_LOW_ENERGY = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-LOW_ENERGY");

    /**
     * <p>A claim that a food is low in fat, and any claim likely to have the same meaning
     * for the consumer, may only be made where the product contains no more than
     * 3g of fat per 100g or 1.5g of fat per 100ml. In the case of foods naturally
     * low in fat, the term naturally may be used as a prefix to this claim.</p>
     */
    public static final Resource NutritionalClaimTypeCode_LOW_FAT = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-LOW_FAT");

    /**
     * <p>A claim that a food is low in lactose. Note the amount that determines containment
     * or lack of containment is based on target market regulations.</p>
     */
    public static final Resource NutritionalClaimTypeCode_LOW_LACTOSE = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-LOW_LACTOSE");

    /**
     * <p>A claim that a food contains low levels of protein. Note the amount that determines
     * containment or lack of containment is based on target market regulations.</p>
     */
    public static final Resource NutritionalClaimTypeCode_LOW_PROTEIN = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-LOW_PROTEIN");

    /**
     * <p>A claim that a food is low in saturated fat, and any claim likely to have
     * the same meaning for the consumer, may only be made where the product contains
     * no more than 1.5g of saturates per 100g for solids or, 0.75g of saturates
     * per 100ml for liquids and in either case saturated fat must not provide more
     * than 10% of energy. In the case of foods naturally low in saturated fat, the
     * term naturally may be used as a prefix to this claim.</p>
     */
    public static final Resource NutritionalClaimTypeCode_LOW_SATURATED_FAT = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-LOW_SATURATED_FAT");

    /**
     * <p>A claim that a food is low in sodium, and any claim likely to have the same
     * meaning for the consumer, may only be made where the product contains no more
     * than 0.12g of sodium, or the equivalent value for salt, per 100g or per 100ml.
     * In the case of foods naturally low in sodium, the term naturally may be used
     * as a prefix to this claim.</p>
     */
    public static final Resource NutritionalClaimTypeCode_LOW_SODIUM_SALT = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-LOW_SODIUM_SALT");

    /**
     * <p>A claim that a food is low in sugars, and any claim likely to have the same
     * meaning for the consumer, may only be made where the product contains no more
     * than 5g of sugars per 100g or 100ml. In the case of foods naturally low in
     * sugars, the term naturally may be used as a prefix to this claim.</p>
     */
    public static final Resource NutritionalClaimTypeCode_LOW_SUGARS = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-LOW_SUGARS");

    /**
     * <p>A claim that a food is free from milk. Note the amount that determines containment
     * or lack of containment is based on target market regulations.</p>
     */
    public static final Resource NutritionalClaimTypeCode_MILK_FREE = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-MILK_FREE");

    /**
     * <p>A claim that a food is free from milk proteins. Note the amount that determines
     * containment or lack of containment is based on target market regulations.</p>
     */
    public static final Resource NutritionalClaimTypeCode_MILK_PROTEIN_FREE = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-MILK_PROTEIN_FREE");

    /**
     * <p>A claim that a food is a natural source of vitamins and/or minerals, and any
     * claim likely to have the same meaning for the consumer, may only be made where
     * the product contains at least 15% of the recommended daily allowance specified
     * in the Annex of Council Directive 90/496/EEC per 100 g or 100 ml.</p>
     */
    public static final Resource NutritionalClaimTypeCode_NATURAL_SOURCE_OF_VITAMINS_AND_OR_MINERALS = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-NATURAL_SOURCE_OF_VITAMINS_AND_OR_MINERALS");

    /**
     * <p>A claim that a food contains no alcohol. Note the amount that determines containment
     * or lack of containment is based on target market regulations.</p>
     */
    public static final Resource NutritionalClaimTypeCode_NON_ALCOHOLIC = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-NON_ALCOHOLIC");

    /**
     * <p>A claim that a food is free from nuts. Note the amount that determines containment
     * or lack of containment is based on target market regulations.</p>
     */
    public static final Resource NutritionalClaimTypeCode_NUT_FREE = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-NUT_FREE");

    /**
     * <p>A claim that a food is free from peanuts. Note the amount that determines
     * containment or lack of containment is based on target market regulations.</p>
     */
    public static final Resource NutritionalClaimTypeCode_PEANUT_FREE = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-PEANUT_FREE");

    /**
     * <p>A claim that a food is free from preservatives. A preservative is a natural
     * or synthetic substance or chemical that is added to products to prevent decomposition
     * by microbial growth or by undesirable chemical changes. Note the amount that
     * determines containment or lack of containment is based on target market regulations.</p>
     */
    public static final Resource NutritionalClaimTypeCode_PRESERVATIVE_FREE = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-PRESERVATIVE_FREE");

    /**
     * <p>A claim that a food does not contain saturated fat, and any claim likely to
     * have the same meaning for the consumer, may only be made where the product
     * contains no more than 0.1g of saturated fat per 100g or 100ml. In the case
     * of foods naturally saturated fat-free, the term naturally may be used as a
     * prefix to this claim.</p>
     */
    public static final Resource NutritionalClaimTypeCode_SATURATED_FAT_FREE = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-SATURATED_FAT_FREE");

    /**
     * <p>A claim that a food is sodium-free, and any claim likely to have the same
     * meaning for the consumer, may only be made where the product contains no more
     * than 0.005g of sodium, or the equivalent value for salt, per 100g. In the
     * case of foods naturally sodium-free, the term naturally may be used as a prefix
     * to this claim.</p>
     */
    public static final Resource NutritionalClaimTypeCode_SODIUM_FREE_OR_SALT_FREE = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-SODIUM_FREE_OR_SALT_FREE");

    /**
     * <p>A claim that a food is a source of fibre, and any claim likely to have the
     * same meaning for the consumer, may only be made where the product contains
     * at least 3g of fibre per 100g or at least 1.5g of fibre per 100kcal. In the
     * case of foods that are naturally sources of fibre, the term naturally may
     * be used as a prefix to this claim.</p>
     */
    public static final Resource NutritionalClaimTypeCode_SOURCE_OF_FIBRE = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-SOURCE_OF_FIBRE");

    /**
     * <p>A claim that a food is a source of protein, and any claim likely to have the
     * same meaning for the consumer, may only be made where at least 12% of the
     * energy value of the food is provided by protein. In the case of foods that
     * are naturally sources of protein, the term naturally may be used as a prefix
     * to this claim.</p>
     */
    public static final Resource NutritionalClaimTypeCode_SOURCE_OF_PROTEIN = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-SOURCE_OF_PROTEIN");

    /**
     * <p>A claim that a food is free from Soy. Note the amount that determines containment
     * or lack of containment is based on target market regulations.</p>
     */
    public static final Resource NutritionalClaimTypeCode_SOY_FREE = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-SOY_FREE");

    /**
     * <p>A claim that a food has a high sodium content. Note the amount that determines
     * containment or lack of containment is based on target market regulations.</p>
     */
    public static final Resource NutritionalClaimTypeCode_STRONGLY_SALTED = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-STRONGLY_SALTED");

    /**
     * <p>A claim that a food is sugars-free, and any claim likely to have the same
     * meaning for the consumer, may only be made where the product contains no more
     * than 0.5g of sugars per 100g or 100ml. In the case of foods naturally sugars-free,
     * the term naturally may be used as a prefix to this claim.</p>
     */
    public static final Resource NutritionalClaimTypeCode_SUGARS_FREE = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-SUGARS_FREE");

    /**
     * <p>A claim that a food is sweetened with syrup from the Agave plant.</p>
     */
    public static final Resource NutritionalClaimTypeCode_SWEETENED_WITH_AGAVE_SYRUP = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-SWEETENED_WITH_AGAVE_SYRUP");

    /**
     * <p>A claim that a food is sweetened with sugar from sugar cane.</p>
     */
    public static final Resource NutritionalClaimTypeCode_SWEETENED_WITH_CANE_SUGAR = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-SWEETENED_WITH_CANE_SUGAR");

    /**
     * <p>A claim that a food is sweetened with corn syrup.</p>
     */
    public static final Resource NutritionalClaimTypeCode_SWEETENED_WITH_CORN_SYRUP = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-SWEETENED_WITH_CORN_SYRUP");

    /**
     * <p>A claim that a food is sweetened with fructose.</p>
     */
    public static final Resource NutritionalClaimTypeCode_SWEETENED_WITH_FRUCTOSE = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-SWEETENED_WITH_FRUCTOSE");

    /**
     * <p>A claim that a food is sweetened with fruit juice.</p>
     */
    public static final Resource NutritionalClaimTypeCode_SWEETENED_WITH_FRUIT_JUICE = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-SWEETENED_WITH_FRUIT_JUICE");

    /**
     * <p>A claim that a food is sweetened with fruit syrup. Fruit syrup is made from
     * fruit and other ingredients such as sugar, corn syrup and water.</p>
     */
    public static final Resource NutritionalClaimTypeCode_SWEETENED_WITH_FRUIT_SYRUP = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-SWEETENED_WITH_FRUIT_SYRUP");

    /**
     * <p>A claim that a food is sweetened with honey.</p>
     */
    public static final Resource NutritionalClaimTypeCode_SWEETENED_WITH_HONEY = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-SWEETENED_WITH_HONEY");

    /**
     * <p>A claim that a food is sweetened with malt.</p>
     */
    public static final Resource NutritionalClaimTypeCode_SWEETENED_WITH_MALT = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-SWEETENED_WITH_MALT");

    /**
     * <p>A claim that a food is sweetened with raw sugar derived from the sugar beet.</p>
     */
    public static final Resource NutritionalClaimTypeCode_SWEETENED_WITH_RAW_BEET_SUGAR = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-SWEETENED_WITH_RAW_BEET_SUGAR");

    /**
     * <p>A claim that a food is sweetened with white sugar. White or granulated sugar
     * is refined sugar (pure white crystalline sucrose) ground to granules or grains.</p>
     */
    public static final Resource NutritionalClaimTypeCode_SWEETENED_WITH_WHITE_SUGAR = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-SWEETENED_WITH_WHITE_SUGAR");

    /**
     * <p>A claim that a food contains a low level of gluten which is defined as 21
     * - 100 mg/kg gluten according to the Commission Regulation (EC) No 41/2009</p>
     */
    public static final Resource NutritionalClaimTypeCode_VERY_LOW_GLUTEN = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-VERY_LOW_GLUTEN");

    /**
     * <p>A claim that a food is very low in sodium, and any claim likely to have the
     * same meaning for the consumer, may only be made where the product contains
     * no more than 0.04g of sodium, or the equivalent value for salt, per 100g or
     * per 100 ml. In the case of foods naturally very low in sodium, the term naturally
     * may be used as a prefix to this claim.</p>
     */
    public static final Resource NutritionalClaimTypeCode_VERY_LOW_SODIUM_SALT = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-VERY_LOW_SODIUM_SALT");

    /**
     * <p>A claim that a food is free from wheat. Note the amount that determines containment
     * or lack of containment is based on target market regulations.</p>
     */
    public static final Resource NutritionalClaimTypeCode_WHEAT_FREE = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-WHEAT_FREE");

    /**
     * <p>A claim stating that sugar has not been added to a food, and any claim likely
     * to have the same meaning for the consumer, may only be made where the product
     * does not contain any added mono- or disaccharides or any other food used for
     * its sweetening properties.</p>
     */
    public static final Resource NutritionalClaimTypeCode_WITH_NO_ADDED_SUGARS = m.createResource("https://ref.gs1.org/voc/NutritionalClaimTypeCode-WITH_NO_ADDED_SUGARS");

    /**
     * <p>Offer available as a code that can be entered to redeem the coupon or voucher.</p>
     */
    public static final Resource OfferRedemptionTypeCode_COUPON_CODE = m.createResource("https://ref.gs1.org/voc/OfferRedemptionTypeCode-COUPON_CODE");

    /**
     * <p>A prepaid stored-value money card.</p>
     */
    public static final Resource OfferRedemptionTypeCode_GIFT_CARD = m.createResource("https://ref.gs1.org/voc/OfferRedemptionTypeCode-GIFT_CARD");

    /**
     * <p>A partial refund upon purchase of a product.</p>
     */
    public static final Resource OfferRedemptionTypeCode_REBATE = m.createResource("https://ref.gs1.org/voc/OfferRedemptionTypeCode-REBATE");

    /**
     * <p>Offer available as a reduced sales price on a product.</p>
     */
    public static final Resource OfferRedemptionTypeCode_SALE = m.createResource("https://ref.gs1.org/voc/OfferRedemptionTypeCode-SALE");

    /**
     * <p>Offer available as a code that can be entered once to redeem the coupon.</p>
     */
    public static final Resource OfferRedemptionTypeCode_SINGLE_USE_CODE = m.createResource("https://ref.gs1.org/voc/OfferRedemptionTypeCode-SINGLE_USE_CODE");

    /**
     * <p>EPA - US Environmental Protection Agency</p>
     */
    public static final Resource OrganicClaimAgencyCode_1 = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-1");

    /**
     * <p>Demeter-Bund - The Demeter movement as an entrepreneurial network promotes
     * the development of bio-dynamic economy, to secure the livelihoods of the world
     * and to strengthen the positive people in his ministry. In cooperation contribute
     * producers, processors, traders and consumers in partnership to shape the market.</p>
     */
    public static final Resource OrganicClaimAgencyCode_10 = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-10");

    /**
     * <p>GÃ„A - GÃ„A is a diverse farming association for farmers, processors and traders
     * inside.Focal point is Germany. GÃ¤a is a special design for the structure
     * of the organic farming. Biokreis- The Biokreis is an association for organic
     * farming. Currently more than 800 farms, 80 and 200 processors, consumers are
     * members of Biokreis, committed to working together on more than 33,000 for
     * organic and sustainable farming.</p>
     */
    public static final Resource OrganicClaimAgencyCode_11 = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-11");

    /**
     * <p>Naturland - Naturland is active the world over in promoting organic agriculture.
     * Its members are farmers who produce a wide range of valuable products: coffee
     * from Mexico and Peru, olive oil from Greece, tea from the slopes of India's
     * mountains, pineapple and other tropical fruit from Uganda, spices from Sri
     * Lanka. Organic agriculture safeguards the existence of smallholders and helps
     * with the sustainable management of what are often fragile ecosystems. On a
     * global scale, over 50,000 Naturland farmers are cultivating an area of over
     * 142,000 hectares.</p>
     */
    public static final Resource OrganicClaimAgencyCode_12 = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-12");

    /**
     * <p>Biopark - Biopark is an organic farmers' association based in the North of
     * Germany, in Mecklenburg-Vorpommerania.</p>
     */
    public static final Resource OrganicClaimAgencyCode_13 = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-13");

    /**
     * <p>Ecovin - ECOVIN Federation Organic Viticulture Association: ECOVIN largest
     * merger in 1985 as ecologically-working wine estates in Germany was founded.
     * Approximately 220 member companies currently manage 1,600 hectares of vineyards
     * in 11 German wine-growing areas.</p>
     */
    public static final Resource OrganicClaimAgencyCode_14 = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-14");

    /**
     * <p>IFOAM - The International Federation of Organic Agriculture Movements (IFOAM)
     * is a grassroots and democratic organisation that currently unites 750 member
     * organisations in 116 countries. Note: this value will be deleted in the future
     * and should not be used.</p>
     */
    public static final Resource OrganicClaimAgencyCode_15 = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-15");

    /**
     * <p>Demeter International Demeter-International e. V. is a non profit organisation
     * and its member organisations work together in the spirit of an international
     * confederation with democratic principles. Membership requires a functioning
     * Demeter certification programme.</p>
     */
    public static final Resource OrganicClaimAgencyCode_16 = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-16");

    /**
     * <p>Bioland: The leading organic farmers' association in Germany for the economy
     * of organic-based businesses without synthetic pesticides and synthetic chemical
     * nitrogen fertilizer. The animals are kept humanely and processed food carefully.
     * This provides an environmentally sound and sustainable food production. http://www.bioland.de.</p>
     */
    public static final Resource OrganicClaimAgencyCode_17 = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-17");

    /**
     * <p>Quality Certification Services. Note: this value will be deleted in the future
     * and should not be used.</p>
     */
    public static final Resource OrganicClaimAgencyCode_19 = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-19");

    /**
     * <p>FSA - UK Food Standards Agency</p>
     */
    public static final Resource OrganicClaimAgencyCode_2 = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-2");

    /**
     * <p>Washington State Dept. of Agriculture. Note: this value will be deleted in
     * the future and should not be used.</p>
     */
    public static final Resource OrganicClaimAgencyCode_20 = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-20");

    /**
     * <p>The Canada Organic Regime is the Government of Canada's response to requests
     * by the organic sector and consumers to develop a regulated system for organic
     * agricultural products. The Organic Products Regulations define specific requirements
     * for organic products to be labelled as organic or that bear the Canada Organic
     * logo. URL: http://www.inspection.gc.ca/food/organic-products/labelling-and-general-information/certified-choice/eng/1328082717777/1328082783032</p>
     */
    public static final Resource OrganicClaimAgencyCode_21 = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-21");

    /**
     * <p>The European Union Commission.</p>
     */
    public static final Resource OrganicClaimAgencyCode_22 = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-22");

    /**
     * <p>OISCC - The Organic Industry Standards and Certification Council maintains
     * the Australian National Standard for Organic and Biodynamic Produce, to ensure
     * continued consumer confidence and International market access.</p>
     */
    public static final Resource OrganicClaimAgencyCode_23 = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-23");

    /**
     * <p>ACO - Australian Certified Organic is Australia's largest certifier for organic
     * and biodynamic produce and has over 1500 operators within its certification
     * system. ACO is a not for profit fully-owned subsidiary of Australia Organic
     * Ltd.</p>
     */
    public static final Resource OrganicClaimAgencyCode_24 = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-24");

    /**
     * <p>NASAA Certified Organic (NCO) is a fully-owned subsidiary of The National
     * Association for Sustainable Agriculture, Australia who provides the certification
     * services.</p>
     */
    public static final Resource OrganicClaimAgencyCode_25 = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-25");

    /**
     * <p>OFC - The Organic Food Chain provides certification services in accordance
     * with the National Standard for Organic and Bio-Dynamic Produce and other international
     * organic certification standards.</p>
     */
    public static final Resource OrganicClaimAgencyCode_26 = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-26");

    /**
     * <p>AUS-QUAL is a certification body accredited by JAS-ANZ, providing conformity
     * assessment services for quality management and food safety (HACCP) management
     * systems, as well as Product Cortication Systems for the wider Australian and
     * New Zealand agricultural, horticultural and secondary processing sectors.</p>
     */
    public static final Resource OrganicClaimAgencyCode_27 = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-27");

    /**
     * <p>The Bio-Dynamic Research Institute, founded in 1957, is involved in research
     * and practical development of the Australian DEMETER Bio-Dynamic Method of
     * Agriculture. In 1967 it was vested with the rights and supervision of the
     * DEMETER Trademark in Australia. Part of this role is the certification of
     * DEMETER quality products.</p>
     */
    public static final Resource OrganicClaimAgencyCode_28 = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-28");

    /**
     * <p>Safe Food Production Queensland works in partnership with the Department of
     * Agriculture and Fisheries and Forestry (DAFF) and Queensland Health (QH) across
     * the entire food chain, to ensure Queensland's food supply is safe.</p>
     */
    public static final Resource OrganicClaimAgencyCode_29 = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-29");

    /**
     * <p>FDA - US Food and Drug Agency</p>
     */
    public static final Resource OrganicClaimAgencyCode_3 = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-3");

    /**
     * <p>The Danish Veterinary and Food Administration (DVFA) is part of the Ministry
     * of Environment and Food. DVFA is responsible for food safety and health from
     * farm to fork and maintains a list of Danish food companies, aquacultural farms
     * etc. subject to organic inspection. Only authorities under the Ministry of
     * Environment and Food carry out inspection under the government rules for organic
     * production. The Danish AgriFish Agency inspects the primary production, while
     * the Danish Veterinary and Food Administration (DVFA) inspects food companies.</p>
     */
    public static final Resource OrganicClaimAgencyCode_30 = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-30");

    /**
     * <p>Verbund Ã–kohÃ¶fe e.V. is an organic cultivation association based in Wanzleben
     * in the Magdeburg BÃ¶rde region</p>
     */
    public static final Resource OrganicClaimAgencyCode_31 = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-31");

    /**
     * <p>The biolabel of the Bavarian State Ministry for Food, Agriculture and Forestry
     * meets the wish of consumers for a high quality of organic products and traceable
     * origin. Only those products whose organic quality standards extend far beyond
     * the statutory regulations and originate from the stated regions are permitted
     * to bear this quality seal. Try out convincing organic products yourself, safe
     * in the knowledge of their place of origin.</p>
     */
    public static final Resource OrganicClaimAgencyCode_32 = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-32");

    /**
     * <p>The products marked with the bio-symbol Baden-WÃ¼rttemberg are regional organic
     * foods with traceable origin. The use or labelling is based on the ecological
     * standards of the EC eco-regulation supplemented by the requirement that the
     * products have to be produced in fully converted farms and partly also to the
     * stricter requirements of the ecological cultivation associations</p>
     */
    public static final Resource OrganicClaimAgencyCode_33 = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-33");

    /**
     * <p>The EKO Certification Foundation is an independent private foundation established
     * in 2012. The foundation has no profit objective. The EKO label for foods has
     * been around for 30 years, and most people know as a hallmark for organic foods.
     * The EKO certificate has been the owner of this collective mark. With the advent
     * of the European Ecolabel (the green leaf with the asterisks), EKO has been
     * given the opportunity to develop further. Producers should be in addition
     * to biologically certified, also carry out additional efforts in the area of
     * sustainability.</p>
     */
    public static final Resource OrganicClaimAgencyCode_34 = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-34");

    /**
     * <p>International Foundation for Organic Agriculture</p>
     */
    public static final Resource OrganicClaimAgencyCode_4 = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-4");

    /**
     * <p>BFA - Biological Farmers of Australia</p>
     */
    public static final Resource OrganicClaimAgencyCode_5 = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-5");

    /**
     * <p>USDA- US Department of Agriculture</p>
     */
    public static final Resource OrganicClaimAgencyCode_6 = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-6");

    /**
     * <p>Quality Assurance International www.qai-inc.com QAI is a leading USDA-accredited
     * organic product certifying agency. Note: this value will be deleted in the
     * future and should not be used.</p>
     */
    public static final Resource OrganicClaimAgencyCode_7 = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-7");

    /**
     * <p>SÃ¼dtirol Bioland - Bioland Association of South Tyrol The Association of
     * South Tyrol is the largest organic association for organic farmers having
     * to farmers in South Tyrol and the only active in association with a national
     * association office Terlan.Note: this value will be deleted in the future and
     * should not be used.</p>
     */
    public static final Resource OrganicClaimAgencyCode_8 = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-8");

    /**
     * <p>Ecoland - Ecoland is a membership organisation whose members elect a governing
     * Board which is responsible for the design and implementation of the organic
     * certification system.</p>
     */
    public static final Resource OrganicClaimAgencyCode_9 = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-9");

    /**
     * <p>Unspecified Agency</p>
     */
    public static final Resource OrganicClaimAgencyCode_999 = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-999");

    /**
     * <p>Biological Farmers of Australia</p>
     */
    public static final Resource OrganicClaimAgencyCode_BFA = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-BFA");

    /**
     * <p>Bioland: The leading organic farmers' association in Germany for the economy
     * of organic-based businesses without synthetic pesticides and synthetic chemical
     * nitrogen fertilizer. The animals are kept humanely and processed food carefully.
     * This provides an environmentally sound and sustainable food production. http://www.bioland.de.</p>
     */
    public static final Resource OrganicClaimAgencyCode_BIOLAND = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-BIOLAND");

    /**
     * <p>The Demeter movement as an entrepreneurial network promotes the development
     * of bio-dynamic economy, to secure the livelihoods of the world and to strengthen
     * the positive people in his ministry. In cooperation contribute producers,
     * processors, traders and consumers in partnership to shape the market.</p>
     */
    public static final Resource OrganicClaimAgencyCode_DEMETER_BUND = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-DEMETER_BUND");

    /**
     * <p>Demeter International Demeter-International e. V. is a non profit organisation
     * and its member organisations work together in the spirit of an international
     * confederation with democratic principles. Membership requires a functioning
     * Demeter certification programme. Same as GS1 Code 16</p>
     */
    public static final Resource OrganicClaimAgencyCode_DEMETER_INTERNATIONAL = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-DEMETER_INTERNATIONAL");

    /**
     * <p>Ecoland is a membership organisation whose members elect a governing Board
     * which is responsible for the design and implementation of the organic certification
     * system.</p>
     */
    public static final Resource OrganicClaimAgencyCode_ECOLAND = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-ECOLAND");

    /**
     * <p>ECOVIN Federation Organic Viticulture Association: ECOVIN largest merger in
     * 1985 as ecologically-working wine estates in Germany was founded. Approximately
     * 220 member companies currently manage 1,600 hectares of vineyards in 11 German
     * wine-growing areas. Same as GS1 code 14</p>
     */
    public static final Resource OrganicClaimAgencyCode_ECOVIN = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-ECOVIN");

    /**
     * <p>US Environmental Protection Agency. Same as GS1 Code 1</p>
     */
    public static final Resource OrganicClaimAgencyCode_EPA = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-EPA");

    /**
     * <p>FDA US Food and Drug Agency</p>
     */
    public static final Resource OrganicClaimAgencyCode_FDA = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-FDA");

    /**
     * <p>UK Food Standards Agency</p>
     */
    public static final Resource OrganicClaimAgencyCode_FSA = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-FSA");

    /**
     * <p>GAA is a diverse farming association for farmers, processors and traders inside.Focal
     * point is Germany. GAA is a special design for the structure of the organic
     * farming. Biokreis- The Biokreis is an association for organic farming. Currently
     * more than 800 farms, 80 and 200 processors, consumers are members of Biokreis,
     * committed to working together on more than 33,000 for organic and sustainable
     * farming.</p>
     */
    public static final Resource OrganicClaimAgencyCode_GAA = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-GAA");

    /**
     * <p>International Foundation for Organic Agriculture</p>
     */
    public static final Resource OrganicClaimAgencyCode_IFOA = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-IFOA");

    /**
     * <p>The International Federation of Organic Agriculture Movements (IFOAM) is a
     * grassroots and democratic organization that currently unites 750 member organizations
     * in 116 countries. Same as GS1 code 15</p>
     */
    public static final Resource OrganicClaimAgencyCode_IFOAM = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-IFOAM");

    /**
     * <p>Naturland - Naturland is active the world over in promoting organic agriculture.
     * Its members are farmers who produce a wide range of valuable products: coffee
     * from Mexico and Peru, olive oil from Greece, tea from the slopes of India's
     * mountains, pineapple and other tropical fruit from Uganda, spices from Sri
     * Lanka. Organic agriculture safeguards the existence of smallholders and helps
     * with the sustainable management of what are often fragile ecosystems. On a
     * global scale, over 50,000 Naturland farmers are cultivating an area of over
     * 142,000 hectares.Same as GS1 Code 12</p>
     */
    public static final Resource OrganicClaimAgencyCode_NATURLAND = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-NATURLAND");

    /**
     * <p>Quality Assurance International. QAI is a leading USDA-accredited organic
     * product certifying agency.</p>
     */
    public static final Resource OrganicClaimAgencyCode_QAI = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-QAI");

    /**
     * <p>Bioland Association of South Tyrol The Association of South Tyrol is the largest
     * organic association for organic farmers having to farmers in South Tyrol and
     * the only active in association with a national association office Terlan.</p>
     */
    public static final Resource OrganicClaimAgencyCode_SUDITIROL = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-SUDITIROL");

    /**
     * <p>US Department of Agriculture.</p>
     */
    public static final Resource OrganicClaimAgencyCode_USDA = m.createResource("https://ref.gs1.org/voc/OrganicClaimAgencyCode-USDA");

    /**
     * <p>The Australian Business Number is a unique 11-digit identifier issued by the
     * Australian Business Register which is operated by the Australian Taxation
     * Office.</p>
     */
    public static final Resource OrganizationID_Type_AU_ABN = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-AU_ABN");

    /**
     * <p>An Australian Company Number is a unique identifier required by every company
     * registered under Australia's Corporations Act 2001. The ACN is a nine-digit
     * number issued by the Australian Securities &amp; Investments Commission to
     * every Australian company.</p>
     */
    public static final Resource OrganizationID_Type_AU_ACN = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-AU_ACN");

    /**
     * <p>The Central Reference File Database (CRD), formerly known as Central Repository
     * Domain is a centralised database that stores Location Codes and Company Codes
     * required by European regulation, and makes them available to users. CRD contains
     * the following reference files: - List of Countries (ISO 3166) - The Location
     * Reference File which uniquely identifies physical rail points (e.g. stations,
     * customer sidings, loading places) containing the Location Code (which includes
     * the Country Code) - The Partner Reference File uniquely identifies all rail
     * actors who exchange information (Company Codes); Each company actor must have
     * a unique Company Code assigned by UIC</p>
     */
    public static final Resource OrganizationID_Type_CRD_PARTNER_CODE = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-CRD_PARTNER_CODE");

    /**
     * <p>A company registration number is a unique combination of numbers and/or letters.
     * The company registration number (also known as the company number, registration
     * number or simply in its abbreviated form) is used to identify a company and
     * verify that it is an entity registered within the national registry for companies
     * or enterprises. This value is generic and is not associated to any specific
     * region.</p>
     */
    public static final Resource OrganizationID_Type_CRN = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-CRN");

    /**
     * <p>A globally unique persistent identifier that does not require a centralized
     * registration authority because it is generated and/or registered cryptographically.
     * The generic format of a DID is defined in the DID Core specification [DID-CORE].
     * A specific DID scheme is defined in a DID method specification. Many (but
     * not all) DID methods make use of distributed ledger technology (DLT) or some
     * other form of decentralized network.</p>
     */
    public static final Resource OrganizationID_Type_DID = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-DID");

    /**
     * <p>Data Universal Numbering System. It is a nine-digit numbering system which
     * uniquely identifies an individual business. The DUNS number is a nine-digit
     * number issued by Dun &amp; Bradstreet assigned to each business location in
     * the D&amp;B database having a unique, separate, and distinct operation for
     * the purpose of identifying them. A DUNS number is also a way in which separate
     * corporate entities, having no official relationship, can be branded as one
     * by sharing one DUNS number among the affiliated comp</p>
     */
    public static final Resource OrganizationID_Type_DUNS = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-DUNS");

    /**
     * <p>The DUNS+4 refers to the DUNS number assigned by Dun and Bradstreet, plus
     * a 4-character suffix that is assigned by the vendor to establish additional
     * Central Contractor Registration (CCR) database records for identifying alternative
     * electronic funds transfer (EFT) accounts for the same vendor located at the
     * same physical address. Dun and Bradstreet has no affiliation with the 4-character
     * suffix.</p>
     */
    public static final Resource OrganizationID_Type_DUNS_PLUS_FOUR = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-DUNS_PLUS_FOUR");

    /**
     * <p>Businesses and people wishing to trade with the EU must, use the EORI number
     * as an identification number in all customs procedures when exchanging information
     * with Customs - https://ec.europa.eu/taxation_customs/dds2/eos/eori_home.jsp?Lang=en</p>
     */
    public static final Resource OrganizationID_Type_EORI = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-EORI");

    /**
     * <p>A type of identifier in the format of the invariant set of ISO646:1991 used
     * in accordance with the EU Implementing Regulation 2018/574 to identify an
     * economic operator.</p>
     */
    public static final Resource OrganizationID_Type_EO_ID = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-EO_ID");

    /**
     * <p>An identifier used to identify companies for value added tax purposes in the
     * European Union. Link: https://ec.europa.eu/taxation_customs/vies/faqvies.do#item_11</p>
     */
    public static final Resource OrganizationID_Type_EU_VAT_IDENTIFICATION_NUMBER = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-EU_VAT_IDENTIFICATION_NUMBER");

    /**
     * <p>The RCS (Registre du commerce et des sociÃ©tÃ©s), otherwise known as the Greffe,
     * is the registry for the company accounts and by-laws of all companies in France.</p>
     */
    public static final Resource OrganizationID_Type_FR_RCS = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-FR_RCS");

    /**
     * <p>The SIREN number, issued by Insee (the National Institute of Statistics and
     * Economic Studies) is the unique identification number of each company. It
     * is a number that allows each company to be identified by the administrations
     * in France. The SIREN number also constitutes the first 9 digits of the SIRET
     * number.</p>
     */
    public static final Resource OrganizationID_Type_FR_SIREN = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-FR_SIREN");

    /**
     * <p>IMO registers all vessels subject to the SOLAS convention. IMO also records
     * the Owner, Operator, Manager and Group Beneficial Owner. For that purpose
     * they also record the Companies acting in these roles using the IMO Company
     * Number</p>
     */
    public static final Resource OrganizationID_Type_IMO_COMPANY_NUMBER = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-IMO_COMPANY_NUMBER");

    /**
     * <p>The Legal Entity Identifier (LEI) is a 20-character, alpha-numeric code based
     * on the ISO 17442 standard developed by the International Organization for
     * Standardization (ISO). It connects to key reference information that enables
     * clear and unique identification of legal entities participating in financial
     * transactions</p>
     */
    public static final Resource OrganizationID_Type_LEI = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-LEI");

    /**
     * <p>When registering with the Netherlands Chamber of Commerce KVK, a business
     * is listed in the Dutch Commercial Register or Handelsregister (HR) as it is
     * called in the Netherlands. The businesses are then given a 8-digit KVK number.
     * This number serves to prove an organisation is a registered business.</p>
     */
    public static final Resource OrganizationID_Type_NL_KVK_NUMBER = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-NL_KVK_NUMBER");

    /**
     * <p>The Organization Identification Number (OIN) is a unique number assigned to
     * organizations by Logius, the digital government service of the Netherlands
     * Ministry of the Interior and Kingdom Relations, to identify, authenticate
     * and/or authorise themselves in digital messaging within and with the government.</p>
     */
    public static final Resource OrganizationID_Type_NL_OIN_NUMBER = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-NL_OIN_NUMBER");

    /**
     * <p>An identifier used to identify companies for goods and services tax purposes
     * in New Zealand.</p>
     */
    public static final Resource OrganizationID_Type_NZ_GST_NUMBER = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-NZ_GST_NUMBER");

    /**
     * <p>An identifier used to identify companies for tax purposes in New Zealand.</p>
     */
    public static final Resource OrganizationID_Type_NZ_IRD_NUMBER = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-NZ_IRD_NUMBER");

    /**
     * <p>Identification used for internal mapping purposes.</p>
     */
    public static final Resource OrganizationID_Type_ORG_FOR_INTERNAL_USE_1 = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-ORG_FOR_INTERNAL_USE_1");

    /**
     * <p>Identification used for internal mapping purposes.</p>
     */
    public static final Resource OrganizationID_Type_ORG_FOR_INTERNAL_USE_10 = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-ORG_FOR_INTERNAL_USE_10");

    /**
     * <p>Identification used for internal mapping purposes.</p>
     */
    public static final Resource OrganizationID_Type_ORG_FOR_INTERNAL_USE_2 = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-ORG_FOR_INTERNAL_USE_2");

    /**
     * <p>Identification used for internal mapping purposes.</p>
     */
    public static final Resource OrganizationID_Type_ORG_FOR_INTERNAL_USE_3 = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-ORG_FOR_INTERNAL_USE_3");

    /**
     * <p>Identification used for internal mapping purposes.</p>
     */
    public static final Resource OrganizationID_Type_ORG_FOR_INTERNAL_USE_4 = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-ORG_FOR_INTERNAL_USE_4");

    /**
     * <p>Identification used for internal mapping purposes.</p>
     */
    public static final Resource OrganizationID_Type_ORG_FOR_INTERNAL_USE_5 = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-ORG_FOR_INTERNAL_USE_5");

    /**
     * <p>Identification used for internal mapping purposes.</p>
     */
    public static final Resource OrganizationID_Type_ORG_FOR_INTERNAL_USE_6 = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-ORG_FOR_INTERNAL_USE_6");

    /**
     * <p>Identification used for internal mapping purposes.</p>
     */
    public static final Resource OrganizationID_Type_ORG_FOR_INTERNAL_USE_7 = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-ORG_FOR_INTERNAL_USE_7");

    /**
     * <p>Identification used for internal mapping purposes.</p>
     */
    public static final Resource OrganizationID_Type_ORG_FOR_INTERNAL_USE_8 = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-ORG_FOR_INTERNAL_USE_8");

    /**
     * <p>Identification used for internal mapping purposes.</p>
     */
    public static final Resource OrganizationID_Type_ORG_FOR_INTERNAL_USE_9 = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-ORG_FOR_INTERNAL_USE_9");

    /**
     * <p>Within the European Union, the phytosanitary registration number identifies
     * an organisation responsible for introducing, or moving plants, plant products
     * and other objects, for which a phytosanitary certificate or a plant passport
     * is required to comply with EU regulation. A phytosanitary registration number
     * is not the same as a phytosanitary certificate number, which identifies the
     * certificate issued to the organisation exporting items subject to phytosanitary
     * processes.</p>
     */
    public static final Resource OrganizationID_Type_PHYTOSANITARY_REGISTRATION_NUMBER = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-PHYTOSANITARY_REGISTRATION_NUMBER");

    /**
     * <p>The taxpayer identification number (TIN) is an identifying number used for
     * tax purposes in the United States and in other countries under the Common
     * Reporting Standard. The unique identifier is assigned to the Account Holder
     * by the tax administration in the Account Holder's jurisdiction of tax residence.
     * It is a unique combination of letters and/or numbers used to identify an individual
     * or entity for the purposes of administering the tax laws of that jurisdiction.
     * In some countries where the TIN is not used a national identification number,
     * national identity number, or national insurance number is used by the governments
     * of countries as a means of tracking their citizens, permanent residents, and
     * temporary residents for the purposes of work, taxation, government benefits,
     * health care, and other governmentally related functions.</p>
     */
    public static final Resource OrganizationID_Type_TIN = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-TIN");

    /**
     * <p>A company registration number is a unique combination of numbers and, in some
     * cases, letters. The company registration number (also known as the company
     * number, registration number or simply abbreviated to CRN) is used to identify
     * a company and verify that it is an entity registered with Companies House
     * (the executive agency of the British Government reponsible for providing registered
     * company information to the public).</p>
     */
    public static final Resource OrganizationID_Type_UK_CRN = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-UK_CRN");

    /**
     * <p>A Service Provider Identification Number (SPIN) is a unique nine-digit number
     * assigned to service providers by USAC when an FCC Form 498 is filed. This
     * number is also known as the service provider's 498 ID.</p>
     */
    public static final Resource OrganizationID_Type_US_498_ID = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-US_498_ID");

    /**
     * <p>The FCC Form 499 Filer Database is an identification system for all interstate
     * telecommunications carriers, all interconnected VoIP providers, and certain
     * other providers of interstate telecommunications. The Universal Service Fund
     * helps communities across the country afford telecommunications and advanced
     * services.</p>
     */
    public static final Resource OrganizationID_Type_US_499_FILER_ID = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-US_499_FILER_ID");

    /**
     * <p>The BEA foreign direct investment identification number is assigned to a new
     * U.S. affiliate after their initial report has been accepted by the BEA. Filed
     * by mail or facsimile, initial reports are due within 30 days of the end of
     * the quarter in which the U.S. entity became foreign owned.</p>
     */
    public static final Resource OrganizationID_Type_US_BEA_ID = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-US_BEA_ID");

    /**
     * <p>The Defense Logistics Agency (DLA) Commercial and Government Entity. A CAGE
     * code is a five character alpha-numeric identifier assigned to entities located
     * IN the United States and its territories</p>
     */
    public static final Resource OrganizationID_Type_US_CAGE = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-US_CAGE");

    /**
     * <p>A company identification number, or CID, is given to a company when it is
     * formed and the articles of organization or incorporation are approved by the
     * U.S. Secretary of State. The CID is an important step when establishing a
     * new company as it acts as a way to track important company information.</p>
     */
    public static final Resource OrganizationID_Type_US_CID = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-US_CID");

    /**
     * <p>Every stockbroker (registered representative) licensed to sell securities
     * in the U.S. must have a CRD number, which is administered by the Financial
     * Industry Regulatory Authority (FINRA).</p>
     */
    public static final Resource OrganizationID_Type_US_CRD = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-US_CRD");

    /**
     * <p>A DEA number (DEA Registration Number) is an identifier assigned to a health
     * care provider (such as a physician, physician assistant, nurse practitioner,
     * optometrist, podiatrist, dentist, or veterinarian) by the United States Drug
     * Enforcement Administration allowing them to write prescriptions for controlled
     * substances.</p>
     */
    public static final Resource OrganizationID_Type_US_DEA = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-US_DEA");

    /**
     * <p>Is a six position code that uniquely identifies a Department of Defense unit,
     * activity, or organization that has the authority to requisition, contract
     * for, receive, have custody of, issue, or ship DoD assets, or fund/pay bills
     * for materials and/or services.</p>
     */
    public static final Resource OrganizationID_Type_US_DODAAC = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-US_DODAAC");

    /**
     * <p>The U.S. Employer Identification Number, also known as the Federal Employer
     * Identification Number or the Federal Tax Identification Number, is a unique
     * nine-digit number assigned by the Internal Revenue Service to business entities
     * operating in the United States for the purposes of identification.</p>
     */
    public static final Resource OrganizationID_Type_US_EIN = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-US_EIN");

    /**
     * <p>This number, issued either by the U. S. Environmental Protection Agency (U.S.
     * EPA ID Number), or by DTSC (California ID Number), identifies each handler
     * of hazardous waste on hazardous waste manifests and other paperwork.</p>
     */
    public static final Resource OrganizationID_Type_US_EPA_ID = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-US_EPA_ID");

    /**
     * <p>An FRN, or FCC registration number, is a 10-digit number that is assigned
     * to a business or individual registering with the FCC. The FCC will use the
     * FRN to determine if all of a registrant's fees have been paid.</p>
     */
    public static final Resource OrganizationID_Type_US_FCC_FRN = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-US_FCC_FRN");

    /**
     * <p>The FDIC Certificate ID is a unique number assigned to each depository institution
     * by the Federal Deposit Insurance Corporation (FDIC).</p>
     */
    public static final Resource OrganizationID_Type_US_FDIC = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-US_FDIC");

    /**
     * <p>FHFA ID number is the number assigned to a member by FHFA and used by FHFA
     * and the Banks to identify a particular member.</p>
     */
    public static final Resource OrganizationID_Type_US_FHFA_ID = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-US_FHFA_ID");

    /**
     * <p>The Federal Maritime Commission (FMC) is a USA federal agency. The FMC is
     * responsible for regulating USA ocean transportation to and from the USA. To
     * buy or sell sea freight services to or from the USA, a company must be licensed
     * or registered with the FMC.</p>
     */
    public static final Resource OrganizationID_Type_US_FMC_ID = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-US_FMC_ID");

    /**
     * <p>GIIN is an abbreviation of Global Intermediary Identification Number. The
     * FATCA Registration System approves foreign financial institutions (FFI), financial
     * institution (FI) branches, direct reporting non-financial foreign entities
     * (NFFE), sponsoring entities, sponsored entities, and sponsored subsidiary
     * branches.</p>
     */
    public static final Resource OrganizationID_Type_US_GIIN = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-US_GIIN");

    /**
     * <p>Code to identify CPSC-Accepted Testing Laboratories. Section 14(a)(3)(E) of
     * the Consumer Product Safety (CPSC) Act, as amended, requires the Commission
     * to maintain on its website an up-to-date list of entities that have been accredited
     * to assess conformity with children's product safety rules.</p>
     */
    public static final Resource OrganizationID_Type_US_LAB_ID = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-US_LAB_ID");

    /**
     * <p>The assigned LIC identifies the registered company, not an individual product
     * or device; it can be used across multiple product lines.</p>
     */
    public static final Resource OrganizationID_Type_US_LIC = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-US_LIC");

    /**
     * <p>The United States Customs use the Manufacturer's Identification Number (MID)
     * in the electronic data processing and monitoring of manufacturers. MID is
     * an identifying reference number given to manufacturers that import products
     * into the United States.</p>
     */
    public static final Resource OrganizationID_Type_US_MFG_ID = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-US_MFG_ID");

    /**
     * <p>Domestic boat manufacturers are required by U.S. federal law to obtain a unique
     * Manufacturer's Identification Code (MIC). The same applies to domestic importers
     * of foreign built vessels. This code must be incorporated as the first three
     * characters of all hull identification numbers assigned to boats of their production.</p>
     */
    public static final Resource OrganizationID_Type_US_MIC = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-US_MIC");

    /**
     * <p>The National Provider Identifier (NPI) is a Health Insurance Portability and
     * Accountability Act (HIPAA) Administrative Simplification Standard. The NPI
     * is a unique identification number for covered health care providers. The NPI
     * is a 10-position, intelligence-free numeric identifier (10-digit number).</p>
     */
    public static final Resource OrganizationID_Type_US_NPI = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-US_NPI");

    /**
     * <p>RN stands for Registered Identification Number. It is a number issued by the
     * FTC to U.S. businesses that manufacture, import, distribute, or sell products
     * covered by the Textile, Wool, and Fur Acts. Businesses can use this number
     * on product labels instead of the company name.</p>
     */
    public static final Resource OrganizationID_Type_US_RN = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-US_RN");

    /**
     * <p>The RSSD ID is a unique identifier assigned to financial institutions by the
     * U.S. Federal Reserve.</p>
     */
    public static final Resource OrganizationID_Type_US_RSSD_ID = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-US_RSSD_ID");

    /**
     * <p>The Standard Carrier Alpha Code (SCAC) is a unique two-to-four-letter code
     * used to identify transportation companies. SCAC codes can be obtained from
     * the National Motor Freight Traffic Association (NMFTA), located in Alexandria,
     * VA.</p>
     */
    public static final Resource OrganizationID_Type_US_SCAC = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-US_SCAC");

    /**
     * <p>Uniquely identify entities registered in the U.S. government System for Award
     * Management (SAM)</p>
     */
    public static final Resource OrganizationID_Type_US_UEI = m.createResource("https://ref.gs1.org/voc/OrganizationID_Type-US_UEI");

    /**
     * <p>Organization responsible for legally accepting goods or services at a physical
     * location handled by a delivery party. The accepting process is part of a broader
     * receiving process, focussed on preliminary checks of goods or services being
     * delivered and occurs in the presence of the transport carrier. When physical
     * goods are delivered, the accepting party will perform a visual check of the
     * transport units (e.g., pallets) to identify any visual damages or defects,
     * any discrepancies with the associated dispatch notice, and notify the transport
     * carrier of any issues found, which can be challenged by the transport carrier
     * if required. This process is defined by transport regulations, and if no issues
     * are found, the goods are legally accepted, and transfer of ownership is completed
     * (even if subject to further legal checks carried out by the checking party)
     * and goods can proceed to checking and storing processes. An accepting party
     * may be different to the party responsible for buying, ordering or paying for
     * the goods or services. May also be different to the party responsible for
     * physically receiving the goods on arrival or storing into inventory. For example,
     * an accepting party may be a service provider to the buyer of goods, meaning
     * goods may be accepted on behalf of the buyer, or prior to being taken over
     * by the buyer.</p>
     */
    public static final Resource OrganizationRoleType_ACCEPTING_PARTY = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-ACCEPTING_PARTY");

    /**
     * <p>A business function or segment responsible for the preparation of financial
     * statements, maintenance of general ledgers, payment of bills, preparation
     * of customer bills, payroll, and other activities related to the management
     * of finances within an organization. May also be known as a finance department.</p>
     */
    public static final Resource OrganizationRoleType_ACCOUNTS_DEPARTMENT = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-ACCOUNTS_DEPARTMENT");

    /**
     * <p>An agricultural cooperative, also known as a farmers' co-op, is a cooperative
     * in which farmers pool their resources in certain areas of activity.</p>
     */
    public static final Resource OrganizationRoleType_AGRICULTURAL_COOPERATIVE = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-AGRICULTURAL_COOPERATIVE");

    /**
     * <p>An organization or civil authority responsible for the oversight and management
     * of all duties and processes within an airport, for example terminal operations,
     * security, safety, communications, ground transportation and other activities
     * related to the welfare of passengers, airlines, tenants and the general public.</p>
     */
    public static final Resource OrganizationRoleType_AIRPORT_OPERATOR = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-AIRPORT_OPERATOR");

    /**
     * <p>A grouping of entities, usually hospitals and associated healthcare service
     * providers, which are defined as an Area Health Service and based on distinct
     * geographic areas as defined by the region or country. May also be known as
     * a regional health organization.</p>
     */
    public static final Resource OrganizationRoleType_AREA_HEALTH_SERVICE = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-AREA_HEALTH_SERVICE");

    /**
     * <p>Organization responsible for physically receiving goods arriving at a physical
     * location, where goods may be temporarily stored ahead of being legally accepted
     * and formally checked. The arriving goods process, is the first part of a broader
     * receiving process, focussed primarily on handling goods so they are prepared
     * and ready for the subsequent accepting and checking processes. The arriving
     * goods party may be different to an accepting or checking party as processes
     * to legally accept a delivery, or to confirm receipt to inventory are not necessarily
     * included.</p>
     */
    public static final Resource OrganizationRoleType_ARRIVING_GOODS_PARTY = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-ARRIVING_GOODS_PARTY");

    /**
     * <p>Organization that needs to receive the Bill of Lading document (abbreviated
     * as BOL or B/L). A BOL is used by many actors in the transport and supply chain
     * sector to serve three main functions: as a conclusive receipt to acknowledge
     * that goods have been physically loaded to a transport carrier; as evidence
     * of the terms for the contract of carriage; and as a document of title, which
     * may be used to claim ownership of the goods described on the BOL. Some common
     * examples of BOL recipients include the shipper handing over goods to the transport
     * carrier at the point of origin, or the buyer of goods who can use the BOL
     * to claim release of the goods from the transport carrier at the destination.</p>
     */
    public static final Resource OrganizationRoleType_BILL_OF_LADING_RECIPIENT = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-BILL_OF_LADING_RECIPIENT");

    /**
     * <p>Organisation that needs to receive the Bill of Lading document (abbreviated
     * as BOL or B/L). A BOL is used by many actors in the transport and supply chain
     * sector to serve three main functions: as a conclusive receipt to acknowledge
     * that goods have been physically loaded to a transport carrier; as evidence
     * of the terms for the contract of carriage; and as a document of title, which
     * may be used to claim ownership of the goods described on the BOL. Some common
     * examples of BOL recipients include the shipper handing over goods to the transport
     * carrier at the point of origin, or the buyer of goods who can use the BOL
     * to claim release of the goods from the transport carrier at the destination.</p>
     */
    public static final Resource OrganizationRoleType_BILL_TO = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-BILL_TO");

    /**
     * <p>An organization segment, that operates in different locations or jurisdictions
     * than its parent organization. A branch is an extension of an existing company
     * and does not constitute a separate legal entity, unlike a subsidiary or sub-organization.</p>
     */
    public static final Resource OrganizationRoleType_BRANCH = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-BRANCH");

    /**
     * <p>An organization who provides any commodity under a registered brand name or
     * label. A brand owner may sell their commodities directly to consumers, retailers
     * or marketplaces; or they may simply provide the rights to their brand name,
     * for example, for manufacturers to produce goods with their brand name, as
     * contracted with a retailer.</p>
     */
    public static final Resource OrganizationRoleType_BRAND_OWNER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-BRAND_OWNER");

    /**
     * <p>An organization which breeds animals, including aquatic vertebrates such as
     * fish, according to their genealogy, characteristics, and offspring. A breeder
     * is responsible for facilitating reproduction and birthing processes for a
     * specific species. Includes care and rearing activities, but does not include
     * cross-breeding for new species.</p>
     */
    public static final Resource OrganizationRoleType_BREEDER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-BREEDER");

    /**
     * <p>A broker or agent acts as an intermediary between its clients and other actors
     * in cases where the client cannot or will not interact directly with those
     * other actors. The services of brokers and agents vary widely. Examples include
     * buying/selling products or services, representation of their clients towards
     * authorities, agencies or other actors in a specific geography etc.</p>
     */
    public static final Resource OrganizationRoleType_BROKER_AGENT = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-BROKER_AGENT");

    /**
     * <p>The organization purchasing goods or services, from a seller. May be different
     * to the party responsible for ordering, receiving or accepting the goods or
     * services.</p>
     */
    public static final Resource OrganizationRoleType_BUYER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-BUYER");

    /**
     * <p>Third party who arranged the purchase of merchandise on behalf of the actual
     * buyer.</p>
     */
    public static final Resource OrganizationRoleType_BUYERS_AGENT_REPRESENTATIVE = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-BUYERS_AGENT_REPRESENTATIVE");

    /**
     * <p>A business function or segment responsible for acquiring goods and services
     * for a business to operate, including the monitoring of supply chains and negotiating
     * contracts with vendors. May also be known as a procurement or purchasing department.</p>
     */
    public static final Resource OrganizationRoleType_BUYING_DEPARTMENT = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-BUYING_DEPARTMENT");

    /**
     * <p>A company, which physically transports goods from one place to another.</p>
     */
    public static final Resource OrganizationRoleType_CARRIER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-CARRIER");

    /**
     * <p>Master of the conveyance. An organization providing central (or consolidated
     * payment) services.</p>
     */
    public static final Resource OrganizationRoleType_CENTRAL_PAYMENT_SERVICE = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-CENTRAL_PAYMENT_SERVICE");

    /**
     * <p>Organization designated on behalf of a transport carrier, an agent or goods
     * owner who is responsible for the detailed checks of goods being sent or received.
     * For goods being sent (outbound deliveries), the checking process is part of
     * a broader sending process and establishes the actual figures of a shipment
     * or consignment, checking product codes, product condition, quantities, weight,
     * volume and/or cubic measurements of goods or containers which are included
     * in a transport or trade contract and on which charges will be based. For goods
     * being received (inbound deliveries), the checking process is part of a broader
     * receiving process, focussed on detailed verification of what has been delivered
     * and accepted, to confirm the physical contents of the transport units matches
     * the delivery advice. If there are any issues found, sometimes known as 'hidden
     * vices', the checking party is responsible for notifying the relevant parties,
     * within a designated time frame from the receipt date of the shipment. Unlike
     * the preliminary checks carried out by the accepting party, the checking process
     * occurs after the transport carrier has left the premises. A checking party
     * may be different to the party responsible for buying, ordering or paying for
     * the goods or services. May also be different to the party responsible for
     * physically receiving the goods on arrival or storing into inventory. For example,
     * a checking party may be a service provider to the buyer of goods, meaning
     * goods may be checked on behalf of the buyer, or prior to being stored in inventory.</p>
     */
    public static final Resource OrganizationRoleType_CHECKING_PARTY = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-CHECKING_PARTY");

    /**
     * <p>Organization to which the check will be ordered, when different from the beneficiary.</p>
     */
    public static final Resource OrganizationRoleType_CHECK_ORDER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-CHECK_ORDER");

    /**
     * <p>A person, company, institution, group, or organization that oversees or pays
     * for a clinical trial and collects and analyses the data.</p>
     */
    public static final Resource OrganizationRoleType_CLINICAL_TRIAL_SPONSOR = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-CLINICAL_TRIAL_SPONSOR");

    /**
     * <p>An organization, which is generally part of a government, that is responsible
     * for ensuring compliance of products or services with the requirements specified
     * in laws or regulations. These authorities may certify one or more conformance
     * assessment body(ies) to perform the activities required to check compliance.</p>
     */
    public static final Resource OrganizationRoleType_COMPLIANCE_AUTHORITY_OR_AGENCY = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-COMPLIANCE_AUTHORITY_OR_AGENCY");

    /**
     * <p>An organization that performs third-party conformity assessment activities,
     * including testing, certification and inspection.</p>
     */
    public static final Resource OrganizationRoleType_CONFORMITY_ASSESSMENT_BODY = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-CONFORMITY_ASSESSMENT_BODY");

    /**
     * <p>Organization who receives goods from another party. The consignee may take
     * title/ownership of the goods upon delivery or they may have taken ownership
     * earlier in the process based on international commercial terms (known as Incoterms)
     * agreed between the buyer and seller of the goods. The party identified as
     * the consignee is an important element in cross-border transportation procedures,
     * such as customs clearance and payment of taxes, for example.</p>
     */
    public static final Resource OrganizationRoleType_CONSIGNEE = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-CONSIGNEE");

    /**
     * <p>Organization who dispatches goods to another party. The consignor will keep
     * the title/ownership of the goods being transported and is legally liable until
     * the goods are transferred to or paid for by the consignee or the final party.</p>
     */
    public static final Resource OrganizationRoleType_CONSIGNOR = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-CONSIGNOR");

    /**
     * <p>An organization or department that combines transport units into larger consignments
     * for shipping. A consolidator is different to a packer who packs physical goods
     * for transportation and sale. Is also different to a repacker, who combines
     * various goods into a single pack for sale or shipping.</p>
     */
    public static final Resource OrganizationRoleType_CONSOLIDATOR = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-CONSOLIDATOR");

    /**
     * <p>The end user of a product or a service.</p>
     */
    public static final Resource OrganizationRoleType_CONSUMER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-CONSUMER");

    /**
     * <p>An organization that represents the identity of a commercial organization,
     * commonly known as a holding or parent company, and links a number of other
     * organizations or affiliated sub-organizations.</p>
     */
    public static final Resource OrganizationRoleType_CORPORATE_IDENTITY = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-CORPORATE_IDENTITY");

    /**
     * <p>An organization that operates and/or is responsible for processes, activities
     * and operations within a specific country (or a small grouping of adjacent
     * countries), under the structure of a multinational or global organization.
     * A country organization may be a separate legal entity and considered as a
     * sub-organization or subsidiary of a parent organization.</p>
     */
    public static final Resource OrganizationRoleType_COUNTRY_ORGANIZATION = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-COUNTRY_ORGANIZATION");

    /**
     * <p>Identification of customs authority relevant to the transaction or shipment.</p>
     */
    public static final Resource OrganizationRoleType_CUSTOMS = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-CUSTOMS");

    /**
     * <p>An organization, typically a government authority or agency commonly known
     * as 'customs', who is responsible for the administration and enforcement of
     * jurisdictional customs laws and regulations of a country or territory, for
     * example collecting taxes on goods entering the country and preventing illicit
     * goods from entering a country.</p>
     */
    public static final Resource OrganizationRoleType_CUSTOMS_AUTHORITY = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-CUSTOMS_AUTHORITY");

    /**
     * <p>An organization providing services for the preparation of documents and/or
     * electronic submissions, the calculation of taxes, duties and excises on behalf
     * of the client, and facilitating communication between the importer/exporter
     * and governmental authorities.</p>
     */
    public static final Resource OrganizationRoleType_CUSTOMS_BROKER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-CUSTOMS_BROKER");

    /**
     * <p>One engaged in carving meat (In EANCOM as Meat Cutter).</p>
     */
    public static final Resource OrganizationRoleType_CUTTER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-CUTTER");

    /**
     * <p>The organization receiving data from other organizations in any format and
     * through any type of data sharing or transfer mechanism.</p>
     */
    public static final Resource OrganizationRoleType_DATA_CONSUMER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-DATA_CONSUMER");

    /**
     * <p>The organization providing data to other organizations in any format and through
     * any type of data sharing or transfer mechanism.</p>
     */
    public static final Resource OrganizationRoleType_DATA_PROVIDER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-DATA_PROVIDER");

    /**
     * <p>Any natural or legal person who makes a declaration to an official body on
     * behalf of another natural or legal person, where legally permitted (CCC).</p>
     */
    public static final Resource OrganizationRoleType_DECLARANTS_AGENT_REPRESENTATIVE = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-DECLARANTS_AGENT_REPRESENTATIVE");

    /**
     * <p>Organization to which goods are delivered.</p>
     */
    public static final Resource OrganizationRoleType_DELIVERY_PARTY = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-DELIVERY_PARTY");

    /**
     * <p>Organization responsible for the physical location where goods or services
     * are delivered by a transport carrier, and/or taken over by the buyer. The
     * delivery recipient party may be different to the party responsible for buying,
     * ordering, accepting or paying for the goods or services; may also be different
     * to the party responsible for receiving consigned shipments between carriers.
     * For example, a delivery recipient party may be a service provider to the buyer
     * of goods, liaising with freight forwarders to confirm transportation of goods.</p>
     */
    public static final Resource OrganizationRoleType_DELIVERY_RECIPIENT_PARTY = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-DELIVERY_RECIPIENT_PARTY");

    /**
     * <p>An organization who designs.</p>
     */
    public static final Resource OrganizationRoleType_DESIGNER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-DESIGNER");

    /**
     * <p>Organization where goods are collected or taken over by the carrier.</p>
     */
    public static final Resource OrganizationRoleType_DESPATCH_PARTY = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-DESPATCH_PARTY");

    /**
     * <p>Organization responsible for the physical location where goods may be collected
     * or taken over by the transport carrier for dispatch. The dispatch party may
     * be different to the party responsible for selling or receiving payment for
     * the goods or services; and may also be different to the party responsible
     * for consigning shipments between carriers. For example, a dispatch party may
     * be a service provider to the seller of goods, liaising with a freight forwarder
     * to arrange transportation of the goods.</p>
     */
    public static final Resource OrganizationRoleType_DISPATCH_PARTY = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-DISPATCH_PARTY");

    /**
     * <p>Organization providing a Distribution Management Entity (DME) system that
     * is used to manage the distribution and disposition of clinical supplies. In
     * many cases, this is the interactive technology IRT system, portal, a set of
     * tools or different databases used to share information during a clinical trial.</p>
     */
    public static final Resource OrganizationRoleType_DISTRIBUTION_MANAGEMENT_ENTITY_PROVIDER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-DISTRIBUTION_MANAGEMENT_ENTITY_PROVIDER");

    /**
     * <p>An organization in the distribution channel or supply chain that is an intermediary
     * between a producer or manufacturer of goods and a downstream entity such as
     * a retailer or reseller, responsible for facilitating services within distribution
     * processes.</p>
     */
    public static final Resource OrganizationRoleType_DISTRIBUTOR = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-DISTRIBUTOR");

    /**
     * <p>A door or collection of doors where trucks or rail cars are loaded (shipping)
     * or unloaded (receiving). Used to load or unload products for logistics.</p>
     */
    public static final Resource OrganizationRoleType_DOCK_DOOR = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-DOCK_DOOR");

    /**
     * <p>A department within a hospital organization that is responsible for providing
     * emergency care to patients who require urgent medical attention.</p>
     */
    public static final Resource OrganizationRoleType_EMERGENCY_DEPARTMENT = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-EMERGENCY_DEPARTMENT");

    /**
     * <p>Organization from whose premises empty equipment will be or has been dispatched.</p>
     */
    public static final Resource OrganizationRoleType_EMPTY_EQUIPMENT_DISPATCH_PARTY = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-EMPTY_EQUIPMENT_DISPATCH_PARTY");

    /**
     * <p>Organization from whose premises empty equipment will be or has been returned.</p>
     */
    public static final Resource OrganizationRoleType_EMPTY_EQUIPMENT_RETURN_PARTY = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-EMPTY_EQUIPMENT_RETURN_PARTY");

    /**
     * <p>Owner of equipment (e.g.,container, etc.).</p>
     */
    public static final Resource OrganizationRoleType_EQUIPMENT_OWNER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-EQUIPMENT_OWNER");

    /**
     * <p>An organization that sends goods or services to another country for sale.
     * An exporter, or a customs clearing agent or other authorised person acting
     * on behalf of the exporter, is responsible for making an export declaration.
     * This may include a manufacturer, seller or other person. Within a Customs
     * union, consignor may have the same meaning as exporter.</p>
     */
    public static final Resource OrganizationRoleType_EXPORTER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-EXPORTER");

    /**
     * <p>A retailer offering a varied selection of goods or services through an online
     * store (i.e., via electronic transactions on the internet) for purchase by
     * consumers, without the presence of a physical store.</p>
     */
    public static final Resource OrganizationRoleType_E_TAILER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-E_TAILER");

    /**
     * <p>A business function or segment responsible for the regular upkeep and maintenance
     * of equipment, machinery, furnishings as well as building structures and grounds
     * of a physical location. May include, but not limited to, tasks such as cleaning,
     * servicing, repairing, gardening, safety conformance checks and certifications
     * etc.</p>
     */
    public static final Resource OrganizationRoleType_FACILITIES_MAINTENANCE_DEPARTMENT = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-FACILITIES_MAINTENANCE_DEPARTMENT");

    /**
     * <p>An organization that purchases financial receiving instruments e.g. invoices</p>
     */
    public static final Resource OrganizationRoleType_FACTOR = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-FACTOR");

    /**
     * <p>An organization who tends to plants and/or animals for the production of foodstuffs
     * for eventual consumption (e.g., vegetables, meat or dairy), or livestock for
     * labour or leisure purposes (e.g., work horse or pet).</p>
     */
    public static final Resource OrganizationRoleType_FARM_OPERATOR = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-FARM_OPERATOR");

    /**
     * <p>The organization which fattens the animal.</p>
     */
    public static final Resource OrganizationRoleType_FATTENER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-FATTENER");

    /**
     * <p>Organization who collects non-domesticated creatures from bodies of water
     * for eventual consumption.</p>
     */
    public static final Resource OrganizationRoleType_FISHING_OPERATOR = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-FISHING_OPERATOR");

    /**
     * <p>Organization that provides food and non-food products to restaurants, cafeterias,
     * industrial caterers, hospitals, schools/colleges/universities, nursing homes,
     * and anywhere food is served away from the home.</p>
     */
    public static final Resource OrganizationRoleType_FOODSERVICE_DISTRIBUTOR = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-FOODSERVICE_DISTRIBUTOR");

    /**
     * <p>An organization which offers food and beverages to the public, either for
     * purchase or as part of a service relationship with another party, for example
     * for a private function.</p>
     */
    public static final Resource OrganizationRoleType_FOODSERVICE_OPERATOR = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-FOODSERVICE_OPERATOR");

    /**
     * <p>An organization that organizes shipments for individuals or other organizations
     * to transport goods from the collection of goods at a point of origin to a
     * specified destination. Freight forwarders typically contract with transportation
     * carriers to move goods.</p>
     */
    public static final Resource OrganizationRoleType_FREIGHT_FORWARDER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-FREIGHT_FORWARDER");

    /**
     * <p>The organization which owns the goods.</p>
     */
    public static final Resource OrganizationRoleType_GOODS_OWNER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-GOODS_OWNER");

    /**
     * <p>A permanent or semi-permanent organization that may be established by a national
     * or state government within a federal system, that is responsible for the oversight
     * and administration of specific functions. For example the UK's Driver and
     * Vehicle Licensing Agency (DVLA).</p>
     */
    public static final Resource OrganizationRoleType_GOVERNMENT_AGENCY = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-GOVERNMENT_AGENCY");

    /**
     * <p>An organization or department within a government body that manages a specific
     * sector of public administration and may oversee other government agencies
     * and organizations as part of a political portfolio. For example, the UK's
     * Department for Transport (DfT), oversees the UK's Driver and Vehicle Licensing
     * Agency (DVLA). Usually led by a high-ranking government official or politician
     * such as a minister, secretary or commissioner and staffed with members of
     * a non-political civil service to manage operations.</p>
     */
    public static final Resource OrganizationRoleType_GOVERNMENT_DEPARTMENT_OR_MINISTRY = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-GOVERNMENT_DEPARTMENT_OR_MINISTRY");

    /**
     * <p>An organization which is responsible for the growth and/or production of plants
     * and crops such as fruit and vegetable produce, ornamental plants and trees,
     * medicinal or cooking herbs etc. This organization may or may not be a producer
     * or packer.</p>
     */
    public static final Resource OrganizationRoleType_GROWER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-GROWER");

    /**
     * <p>Organization who collects ready for harvest foodstuffs from farms for utilization
     * or consumption by subsequent parties.</p>
     */
    public static final Resource OrganizationRoleType_HARVESTER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-HARVESTER");

    /**
     * <p>An organization providing healthcare services for primary care, nursing care
     * and speciality care and/or treatments. Includes specialized providers such
     * as surgeons, midwives, therapists, dentists for example.</p>
     */
    public static final Resource OrganizationRoleType_HEALTHCARE_PROVIDER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-HEALTHCARE_PROVIDER");

    /**
     * <p>A healthcare organization responsible for a hospital facility providing patient
     * treatment with specialized medical and nursing staff, medical equipment and
     * inpatient care facilities.</p>
     */
    public static final Resource OrganizationRoleType_HOSPITAL_ORGANIZATION = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-HOSPITAL_ORGANIZATION");

    /**
     * <p>An organization and individual legal entity engaged in the activities of ordering
     * and dispensing medications for the treatment of patients within a hospital
     * facility, often at the direction of or by working directly with physicians,
     * nurses or other specialized healthcare providers. Differs to a retail pharmacy
     * operator in a retail pharmacy, as hospital pharmacists require specific clinical
     * training and qualifications to handle specialist activities such as formulating
     * patient specific doses or medications, preparing intravenous (IV) compounds,
     * for example.</p>
     */
    public static final Resource OrganizationRoleType_HOSPITAL_PHARMACY_OPERATOR = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-HOSPITAL_PHARMACY_OPERATOR");

    /**
     * <p>Organization who makes - or on whose behalf a Customs clearing agent or other
     * authorized person makes - an import declaration. This may include a person
     * who has possession of the goods or to whom the goods are consigned.</p>
     */
    public static final Resource OrganizationRoleType_IMPORTER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-IMPORTER");

    /**
     * <p>The organization providing the information contained in the document.</p>
     */
    public static final Resource OrganizationRoleType_INFORMATION_PROVIDER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-INFORMATION_PROVIDER");

    /**
     * <p>A person or company offering insurance policies for premiums.</p>
     */
    public static final Resource OrganizationRoleType_INSURER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-INSURER");

    /**
     * <p>A financial institution between the ordered bank and the beneficiary's bank.</p>
     */
    public static final Resource OrganizationRoleType_INTERMEDIARY_BANK = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-INTERMEDIARY_BANK");

    /**
     * <p>A financial institution between the ordered bank and the beneficiary's bank.</p>
     */
    public static final Resource OrganizationRoleType_INTERMEDIARY_BANK_1 = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-INTERMEDIARY_BANK_1");

    /**
     * <p>A financial institution between the ordered bank and the beneficiary's bank.</p>
     */
    public static final Resource OrganizationRoleType_INTERMEDIARY_BANK_2 = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-INTERMEDIARY_BANK_2");

    /**
     * <p>To specifically identify the organisation in charge of inventory control.</p>
     */
    public static final Resource OrganizationRoleType_INVENTORY_CONTROLLER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-INVENTORY_CONTROLLER");

    /**
     * <p>Organization reporting inventory information.</p>
     */
    public static final Resource OrganizationRoleType_INVENTORY_REPORTING_PARTY = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-INVENTORY_REPORTING_PARTY");

    /**
     * <p>The organization to whom an invoice is issued, which may be different to the
     * organization to whom the invoice is sent to for processing e.g., BILL_TO and
     * INVOICE_MUST_BE_SENT_TO. May also be different to the party ordering, accepting,
     * buying, or initiating payment for the goods or services.</p>
     */
    public static final Resource OrganizationRoleType_INVOICEE = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-INVOICEE");

    /**
     * <p>The organization issuing an invoice. May be different to the party selling,
     * dispatching, or receiving payment for the goods or services.</p>
     */
    public static final Resource OrganizationRoleType_ISSUER_OF_INVOICE = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-ISSUER_OF_INVOICE");

    /**
     * <p>An umbrella term for an organization, which provides a combination of different
     * logistics services for another organization, such as transportation, storage
     * and handling, freight forwarding, packing and repacking etc. Commonly known
     * as a third-party logistics service provider (3PL).</p>
     */
    public static final Resource OrganizationRoleType_LOGISTICS_SERVICE_PROVIDER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-LOGISTICS_SERVICE_PROVIDER");

    /**
     * <p>An organization that has final responsibility for producing the finished goods,
     * components or finished goods from raw materials and/or by assembling other
     * components or finished goods. Finished goods are considered complete and ready
     * for use. Includes third-party manufacturers, known as contract manufacturers,
     * who handle the full production operations on behalf of another organization.</p>
     */
    public static final Resource OrganizationRoleType_MANUFACTURER_OF_FINISHED_GOODS = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-MANUFACTURER_OF_FINISHED_GOODS");

    /**
     * <p>Organization who manufactures the goods.</p>
     */
    public static final Resource OrganizationRoleType_MANUFACTURER_OF_GOODS = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-MANUFACTURER_OF_GOODS");

    /**
     * <p>An organization that produces semi-finished goods, components or semi-finished
     * goods from raw materials and/or by assembling other components or semi-finished
     * goods. Semi-finished goods are not consumer-ready. Includes third-party manufacturers,
     * known as contract manufacturers, who handle the full production operations
     * on behalf of another organization.</p>
     */
    public static final Resource OrganizationRoleType_MANUFACTURER_OF_UNFINISHED_GOODS = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-MANUFACTURER_OF_UNFINISHED_GOODS");

    /**
     * <p>A business function or segment responsible for promoting an organization's
     * brand, products and/or services, through the planning, creating and monitoring
     * of marketing activities such as for brand management, promotional material
     * and campaigns , and website content and search optimisations.</p>
     */
    public static final Resource OrganizationRoleType_MARKETING_DEPARTMENT = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-MARKETING_DEPARTMENT");

    /**
     * <p>Organization which provides an online platform specifically for independent
     * sellers to offer a varied selection of products for purchase by consumers.
     * May also operate as an e-tailer, if the marketplace operator's own brand(s)
     * are also sold online.</p>
     */
    public static final Resource OrganizationRoleType_MARKETPLACE_OPERATOR = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-MARKETPLACE_OPERATOR");

    /**
     * <p>The ultimate destination of a unit load or transport package of goods where
     * the Ship-To is a different location.</p>
     */
    public static final Resource OrganizationRoleType_MARK_FOR = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-MARK_FOR");

    /**
     * <p>An organization providing mental health treatment and support services.</p>
     */
    public static final Resource OrganizationRoleType_MENTAL_HEALTH_SERVICE = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-MENTAL_HEALTH_SERVICE");

    /**
     * <p>Organization where the message comes from.</p>
     */
    public static final Resource OrganizationRoleType_MESSAGE_FROM = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-MESSAGE_FROM");

    /**
     * <p>Organization receiving the message.</p>
     */
    public static final Resource OrganizationRoleType_MESSAGE_RECIPIENT = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-MESSAGE_RECIPIENT");

    /**
     * <p>One engaged in the cutting or chopping of meat into very small pieces</p>
     */
    public static final Resource OrganizationRoleType_MINCER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-MINCER");

    /**
     * <p>An operational department or business segment of an organization, which may
     * have multiple days and times of operation, which differs to other departments
     * or the main organization.</p>
     */
    public static final Resource OrganizationRoleType_OPERATING_DIVISION = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-OPERATING_DIVISION");

    /**
     * <p>An organization who operates a business establishment, or has specific capabilities
     * to operate equipment, machinery or devices.</p>
     */
    public static final Resource OrganizationRoleType_OPERATOR = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-OPERATOR");

    /**
     * <p>Organization responsible for ordering goods or services. The ordering party
     * may be different to the party responsible for buying, accepting, receiving
     * or paying for the goods or services; may also be different to the delivery
     * party responsible receiving goods at a physical location. For example, an
     * ordering party may be a service provider to the buyer of goods, meaning the
     * goods are ordered on behalf of the buyer.</p>
     */
    public static final Resource OrganizationRoleType_ORDERING_PARTY = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-ORDERING_PARTY");

    /**
     * <p>Organization who owns equipment.</p>
     */
    public static final Resource OrganizationRoleType_OWNER_OF_EQUIPMENT = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-OWNER_OF_EQUIPMENT");

    /**
     * <p>An organization who owns the means of transport, which may be leased or loaned
     * for use by a transportation carrier or service provider.</p>
     */
    public static final Resource OrganizationRoleType_OWNER_OF_MEANS_OF_TRANSPORT = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-OWNER_OF_MEANS_OF_TRANSPORT");

    /**
     * <p>An organization or department that packs physical goods for transportation
     * and sale. A packer is different to a consolidator who combines transport units
     * into larger consignments for shipping, and is also different to a repacker,
     * who combines various goods into a single pack for sale or shipping.</p>
     */
    public static final Resource OrganizationRoleType_PACKER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-PACKER");

    /**
     * <p>A code to identify the organization who is responsible for declaring the Value
     * Added Tax (VAT) on the sale of goods or services.</p>
     */
    public static final Resource OrganizationRoleType_PARTY_DECLARING_THE_VALUE_ADDED_TAX = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-PARTY_DECLARING_THE_VALUE_ADDED_TAX");

    /**
     * <p>Party for whom item is ultimately intended.</p>
     */
    public static final Resource OrganizationRoleType_PARTY_FOR_WHOM_ITEM_IS_ULTIMATELY_INTENDED = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-PARTY_FOR_WHOM_ITEM_IS_ULTIMATELY_INTENDED");

    /**
     * <p>The organization who is allowed access to master data information by the data
     * owner when the data is viewed as private.</p>
     */
    public static final Resource OrganizationRoleType_PARTY_RECEIVING_PRIVATE_DATA = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-PARTY_RECEIVING_PRIVATE_DATA");

    /**
     * <p>A code to identify the organization who is eligible to recover the Value Added
     * Tax (VAT) on the sale of goods or services.</p>
     */
    public static final Resource OrganizationRoleType_PARTY_RECOVERING_THE_VALUE_ADDED_TAX = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-PARTY_RECOVERING_THE_VALUE_ADDED_TAX");

    /**
     * <p>An organization which is named to be the recipient of all documents.</p>
     */
    public static final Resource OrganizationRoleType_PARTY_TO_RECEIVE_ALL_DOCUMENTS = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-PARTY_TO_RECEIVE_ALL_DOCUMENTS");

    /**
     * <p>Organization that needs to receive the commercial invoice. A commercial invoice
     * is issued by a seller to the buyer of the goods or services and is often used
     * as part of a customs declaration for foreign trade. It is needed for a wide
     * range of services provided by actors in supply chain, transport and logistics
     * processes, who are not involved in the buying and selling transaction covered
     * by regular invoices.</p>
     */
    public static final Resource OrganizationRoleType_PARTY_TO_RECEIVE_COMMERCIAL_INVOICE = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-PARTY_TO_RECEIVE_COMMERCIAL_INVOICE");

    /**
     * <p>Organization that needs to receive notification for an invoice being issued,
     * which may or may not be the same as the party identified as the invoice recipient,
     * processor, or payer. For example, an external certification body, or a bank
     * providing loans.</p>
     */
    public static final Resource OrganizationRoleType_PARTY_TO_RECEIVE_ELECTRONIC_MEMO_OF_INVOICE = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-PARTY_TO_RECEIVE_ELECTRONIC_MEMO_OF_INVOICE");

    /**
     * <p>Organization to whom the freight bill should be sent.</p>
     */
    public static final Resource OrganizationRoleType_PARTY_TO_RECEIVE_FREIGHT_BILL = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-PARTY_TO_RECEIVE_FREIGHT_BILL");

    /**
     * <p>Organization to whom a refund is given.</p>
     */
    public static final Resource OrganizationRoleType_PARTY_TO_RECEIVE_REFUND = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-PARTY_TO_RECEIVE_REFUND");

    /**
     * <p>The organization receiving payment, and may be different to the party who
     * sends the invoice, goods or services related to the payment.</p>
     */
    public static final Resource OrganizationRoleType_PAYEE = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-PAYEE");

    /**
     * <p>The organization initiating payment, and may be different to the party who
     * receives the invoice, goods or services related to the payment.</p>
     */
    public static final Resource OrganizationRoleType_PAYER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-PAYER");

    /**
     * <p>Organization engaged in the activities of ordering and dispensing medications
     * for members of the public, often at the direction of physicians.</p>
     */
    public static final Resource OrganizationRoleType_PHARMACY_OPERATOR = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-PHARMACY_OPERATOR");

    /**
     * <p>An organization or civil authority responsible for the oversight and management
     * of all duties and processes within a seaport or inland port, for example terminal
     * operations, security, safety, communications, in-port transportation, vessel
     * traffic services and other activities related to the welfare of passengers,
     * shipping lines, tenants and the general public.</p>
     */
    public static final Resource OrganizationRoleType_PORT_OPERATOR = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-PORT_OPERATOR");

    /**
     * <p>An organization to which a price for a product is applicable. Within the context
     * of GDSN Price Synchronization, it is also known as the 'Price Location' which
     * is a GLN.</p>
     */
    public static final Resource OrganizationRoleType_PRICE_LOCATION_PARTY = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-PRICE_LOCATION_PARTY");

    /**
     * <p>A company that is selected by the Brand Owner to maintain their baseline attributes
     * and Administrative Records in the GDSN.</p>
     */
    public static final Resource OrganizationRoleType_PROXY = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-PROXY");

    /**
     * <p>The organization that receives the purchase order for the goods or services.</p>
     */
    public static final Resource OrganizationRoleType_PURCHASE_ORDER_RECEIVER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-PURCHASE_ORDER_RECEIVER");

    /**
     * <p>Organisation/Location/Individual receiving Recall notifications via local
     * Recall Service.</p>
     */
    public static final Resource OrganizationRoleType_RECALL_RECIPIENT = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-RECALL_RECIPIENT");

    /**
     * <p>Organisation sending Recall notifications via local Recall Service.</p>
     */
    public static final Resource OrganizationRoleType_RECALL_SPONSOR = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-RECALL_SPONSOR");

    /**
     * <p>An organization that operates and/or is responsible for processes, activities
     * and operations within a specific geographical region and across a number of
     * different countries, under the structure of a multinational or global organization.
     * A regional organization may be a separate legal entity and considered as a
     * sub-organization or subsidiary of a parent organization.</p>
     */
    public static final Resource OrganizationRoleType_REGIONAL_ORGANIZATION = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-REGIONAL_ORGANIZATION");

    /**
     * <p>The organization having legal responsibility for the product in the target
     * market for example a company to which market authorization has been issued.</p>
     */
    public static final Resource OrganizationRoleType_REGISTERED_AGENT = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-REGISTERED_AGENT");

    /**
     * <p>Organization to whom funds are directed for payment of a commercial invoice.</p>
     */
    public static final Resource OrganizationRoleType_REMIT_TO = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-REMIT_TO");

    /**
     * <p>Organization or department responsible for repacking goods for resale or for
     * transportation purposes, without modifying the repacked products in any way.
     * A repacker is different to packer who packs physical goods for transportation
     * and sale; and is also different to a consolidator who combines transport units
     * into larger consignments for shipping.</p>
     */
    public static final Resource OrganizationRoleType_REPACKER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-REPACKER");

    /**
     * <p>An organization who makes a varied selection of products available for purchase
     * by consumers, either through operating physical or online stores.</p>
     */
    public static final Resource OrganizationRoleType_RETAILER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-RETAILER");

    /**
     * <p>An organization or individual legal entity engaged in the activities of ordering
     * and dispensing medications for members of the public within a retail pharmacy,
     * often at the direction of physicians. A retail pharmacy operator differs from
     * a hospital pharmacy operator as they usually interact with the public to provide
     * advice about their prescription, instead of working directly with healthcare
     * specialists such as nurses and doctors to ensure the right medications are
     * prescribed.</p>
     */
    public static final Resource OrganizationRoleType_RETAIL_PHARMACY_OPERATOR = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-RETAIL_PHARMACY_OPERATOR");

    /**
     * <p>A business function or segment responsible for selling goods and services
     * to meet customer needs. Includes activities to increase profitability, forecasting
     * and meeting sales targets, building and maintaining customer relationships,
     * encouraging repeat purchases and brand loyalty.</p>
     */
    public static final Resource OrganizationRoleType_SALES_DEPARTMENT = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-SALES_DEPARTMENT");

    /**
     * <p>The organization selling goods or services, to a buyer. May be different to
     * the party responsible for dispatching the goods or services.</p>
     */
    public static final Resource OrganizationRoleType_SELLER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-SELLER");

    /**
     * <p>An organization providing services to another organization or directly to
     * consumers. Some examples include (but are not limited to) consulting, advertising,
     * legal, communications, transport, technology or processing services.</p>
     */
    public static final Resource OrganizationRoleType_SERVICE_PROVIDER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-SERVICE_PROVIDER");

    /**
     * <p>The party that initiates a contract for carriage with, and arranges for delivery
     * of the goods to, a carrier or transport intermediary for transportation.</p>
     */
    public static final Resource OrganizationRoleType_SHIPPER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-SHIPPER");

    /**
     * <p>Organization from where goods will be or have been shipped.</p>
     */
    public static final Resource OrganizationRoleType_SHIP_FROM = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-SHIP_FROM");

    /**
     * <p>An organization which sends physical goods and invoices, and is often the
     * same party as the consignor. However in some cases, a consignor may designate
     * a third party to manage the facility where the goods are shipped from, which
     * is different to the dispatch party responsible for the facility where the
     * goods are dispatched from.</p>
     */
    public static final Resource OrganizationRoleType_SHIP_FROM_PARTY = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-SHIP_FROM_PARTY");

    /**
     * <p>Organization which receives goods and invoices.</p>
     */
    public static final Resource OrganizationRoleType_SHIP_TO = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-SHIP_TO");

    /**
     * <p>An organization which receives physical goods and invoices, and is often the
     * same party as the consignee. However in some cases, a consignee may designate
     * a third party to manage the facility where the goods are shipped to, which
     * is different to the delivery recipient party responsible for the facility
     * where goods are received.</p>
     */
    public static final Resource OrganizationRoleType_SHIP_TO_PARTY = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-SHIP_TO_PARTY");

    /**
     * <p>An organization which is responsible for slaughtering livestock and preparing
     * carcasses for further processing, including specialized tasks such as the
     * removal of organs, hides and/or specific premium cuts.</p>
     */
    public static final Resource OrganizationRoleType_SLAUGHTERER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-SLAUGHTERER");

    /**
     * <p>The movement, protection, storage of products throughout manufacturing, warehousing
     * and distribution</p>
     */
    public static final Resource OrganizationRoleType_STORAGE_AND_HANDLING = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-STORAGE_AND_HANDLING");

    /**
     * <p>An organization or department responsible for the storage and handling of
     * goods within a facility; may be included with other services offered by a
     * logistics service provider or a leased warehouse space for example and is
     * often a third party, that is external to the parties directly employed by
     * the facility.</p>
     */
    public static final Resource OrganizationRoleType_STORAGE_AND_HANDLING_PARTY = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-STORAGE_AND_HANDLING_PARTY");

    /**
     * <p>Organization which may be in a position to supply products or services should
     * the main usual supplier be unable to do so.</p>
     */
    public static final Resource OrganizationRoleType_SUBSTITUTE_SUPPLIER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-SUBSTITUTE_SUPPLIER");

    /**
     * <p>An organization that provides goods or services.</p>
     */
    public static final Resource OrganizationRoleType_SUPPLIER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-SUPPLIER");

    /**
     * <p>A business function or segment responsible for the end-to-end process of manufacturing
     * and trading commercial goods, with a broad scope covering procurement processes
     * as well as traditional logistics processes involving warehousing and transportation</p>
     */
    public static final Resource OrganizationRoleType_SUPPLY_CHAIN = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-SUPPLY_CHAIN");

    /**
     * <p>A business function or segment responsible for providing assistance and support
     * for their organization's technical equipment and/or system infrastructure,
     * for example with hardware such as computers, mobile phones and servers or
     * software issues and configurations. Technical support may be provided as a
     * service for internal staff or for external customers.</p>
     */
    public static final Resource OrganizationRoleType_TECHNICAL_SUPPORT_DEPARTMENT = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-TECHNICAL_SUPPORT_DEPARTMENT");

    /**
     * <p>An organisation that engages in the buying and selling of financial assets
     * in any financial market, either for themself or on behalf of another person
     * or institution.</p>
     */
    public static final Resource OrganizationRoleType_TRADER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-TRADER");

    /**
     * <p>An organization that engages in the buying and selling of financial assets
     * in any financial market, either for themselves or on behalf of another person
     * or institution.</p>
     */
    public static final Resource OrganizationRoleType_TRADER_FINANCIAL = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-TRADER_FINANCIAL");

    /**
     * <p>An organization that engages in the buying and selling of tangible goods such
     * as raw materials and fresh produce. Goods may be traded in any market, either
     * for themselves or on behalf of another party.</p>
     */
    public static final Resource OrganizationRoleType_TRADER_GOODS = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-TRADER_GOODS");

    /**
     * <p>An organization that undertakes or arranges the physical transportation of
     * goods from one identified place to another. A transportation carrier is usually
     * contracted by a freight forwarder to move goods within a regular route, for
     * a set rate.</p>
     */
    public static final Resource OrganizationRoleType_TRANSPORTATION_CARRIER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-TRANSPORTATION_CARRIER");

    /**
     * <p>Organization who is responsible for a warehouse location and the goods that
     * are kept on-site within the facility.</p>
     */
    public static final Resource OrganizationRoleType_WAREHOUSE_KEEPER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-WAREHOUSE_KEEPER");

    /**
     * <p>An organization that sells products, often in large quantities, to be retailed
     * by others.</p>
     */
    public static final Resource OrganizationRoleType_WHOLESALER = m.createResource("https://ref.gs1.org/voc/OrganizationRoleType-WHOLESALER");

    /**
     * <p>A general term applied to the support or pedestal of an object.</p>
     */
    public static final Resource PackagingFeatureCode_BASE = m.createResource("https://ref.gs1.org/voc/PackagingFeatureCode-BASE");

    /**
     * <p>Long sturdy piece of squared timber or metal used in house-building etc.</p>
     */
    public static final Resource PackagingFeatureCode_BEAM = m.createResource("https://ref.gs1.org/voc/PackagingFeatureCode-BEAM");

    /**
     * <p>A bung is an apparatus used to seal a container, such as a bottle, barrel
     * or tubes. A bung is partially inserted inside the container to act as a seal.
     * The most common every-day example of a bung is the stopper of a wine bottle.</p>
     */
    public static final Resource PackagingFeatureCode_BUNG_SEAL = m.createResource("https://ref.gs1.org/voc/PackagingFeatureCode-BUNG_SEAL");

    /**
     * <p>A cap that seals a bottle or other form of packaging.</p>
     */
    public static final Resource PackagingFeatureCode_CAP = m.createResource("https://ref.gs1.org/voc/PackagingFeatureCode-CAP");

    /**
     * <p>A device of various types attached to or hung from trolleys to support the
     * load.</p>
     */
    public static final Resource PackagingFeatureCode_CARRIER = m.createResource("https://ref.gs1.org/voc/PackagingFeatureCode-CARRIER");

    /**
     * <p>An item which allows the user to extract and/or consume the content of a container.</p>
     */
    public static final Resource PackagingFeatureCode_CONSUMPTION_UTENSIL = m.createResource("https://ref.gs1.org/voc/PackagingFeatureCode-CONSUMPTION_UTENSIL");

    /**
     * <p>A tubular shape around which flexible material such as plastic film or paper
     * are wound for purposes of transport and handling.</p>
     */
    public static final Resource PackagingFeatureCode_CORE = m.createResource("https://ref.gs1.org/voc/PackagingFeatureCode-CORE");

    /**
     * <p>A creel is a device for holding the required number of roving spools or other
     * supply packages of reinforcement fibers for Fiber Reinforced Plastics manufacturing.
     * This device holds the rovings in the desired position for unwinding in continuous
     * processes like Pultrusion and Filament Winding.</p>
     */
    public static final Resource PackagingFeatureCode_CREEL = m.createResource("https://ref.gs1.org/voc/PackagingFeatureCode-CREEL");

    /**
     * <p>A right-angle piece placed over the outermost perimeter edges of a container
     * to distribute pressure and prevent collapse or cutting from banding, strapping,
     * or handling.</p>
     */
    public static final Resource PackagingFeatureCode_EDGE_PROTECTION = m.createResource("https://ref.gs1.org/voc/PackagingFeatureCode-EDGE_PROTECTION");

    /**
     * <p>A grip attached to an object for using or moving the object, usually with
     * the hands.</p>
     */
    public static final Resource PackagingFeatureCode_HANDLE = m.createResource("https://ref.gs1.org/voc/PackagingFeatureCode-HANDLE");

    /**
     * <p>Inner Container</p>
     */
    public static final Resource PackagingFeatureCode_INNER_CONTAINER = m.createResource("https://ref.gs1.org/voc/PackagingFeatureCode-INNER_CONTAINER");

    /**
     * <p>An internal divider is an object, either flat or custom-shaped, used to separate
     * the content of a container or to prevent the content from mixing.</p>
     */
    public static final Resource PackagingFeatureCode_INTERNAL_DIVIDER = m.createResource("https://ref.gs1.org/voc/PackagingFeatureCode-INTERNAL_DIVIDER");

    /**
     * <p>A label is a piece of paper, polymer, cloth, metal, or other material affixed
     * to a container or article (or printed directly upon it), which usually carries
     * information about the article to.which it has been attached.</p>
     */
    public static final Resource PackagingFeatureCode_LABEL = m.createResource("https://ref.gs1.org/voc/PackagingFeatureCode-LABEL");

    /**
     * <p>In packaging, the top or bottom of a container, usually the part that closes
     * the opening; may also be known as cap, over, or top</p>
     */
    public static final Resource PackagingFeatureCode_LID = m.createResource("https://ref.gs1.org/voc/PackagingFeatureCode-LID");

    /**
     * <p>An internal chamber within a container which separates the content of the
     * container from the walls. Inner liners provide additional isolation and protection
     * to the content of a container. Sometimes coatings of certain materials may
     * be applied as an alternative to inner liners.</p>
     */
    public static final Resource PackagingFeatureCode_LINER = m.createResource("https://ref.gs1.org/voc/PackagingFeatureCode-LINER");

    /**
     * <p>A small indentation or raised portion on the surface of a bottle, provided
     * as an indexing means for operations such as multi-pass decoration or labeling.</p>
     */
    public static final Resource PackagingFeatureCode_LUG = m.createResource("https://ref.gs1.org/voc/PackagingFeatureCode-LUG");

    /**
     * <p>Edges which allow items of the same size to be partially stacked within one
     * another in any direction thus reducing the space required in order to stack
     * them.</p>
     */
    public static final Resource PackagingFeatureCode_NESTING_EDGE = m.createResource("https://ref.gs1.org/voc/PackagingFeatureCode-NESTING_EDGE");

    /**
     * <p>A fastener which allows a product to be hanged.</p>
     */
    public static final Resource PackagingFeatureCode_PEG = m.createResource("https://ref.gs1.org/voc/PackagingFeatureCode-PEG");

    /**
     * <p>A flexible cover which can be easily removed in order to open a container.</p>
     */
    public static final Resource PackagingFeatureCode_PULL_OFF_TAB = m.createResource("https://ref.gs1.org/voc/PackagingFeatureCode-PULL_OFF_TAB");

    /**
     * <p>A hollow circular band of material wound around itself.</p>
     */
    public static final Resource PackagingFeatureCode_RING_HOLDER = m.createResource("https://ref.gs1.org/voc/PackagingFeatureCode-RING_HOLDER");

    /**
     * <p>A permanent fastener which consists of a cylindrical shaft with a head on
     * one end and tail which is deformed to fixate the rivet in place.</p>
     */
    public static final Resource PackagingFeatureCode_RIVET = m.createResource("https://ref.gs1.org/voc/PackagingFeatureCode-RIVET");

    /**
     * <p>A tubular form, open at both ends, that is slipped over an item or package.</p>
     */
    public static final Resource PackagingFeatureCode_SLEEVE = m.createResource("https://ref.gs1.org/voc/PackagingFeatureCode-SLEEVE");

    /**
     * <p>A spout is a protruding edge which allows the lifting and pouring of liquids
     * contained within a container.</p>
     */
    public static final Resource PackagingFeatureCode_SPOUT = m.createResource("https://ref.gs1.org/voc/PackagingFeatureCode-SPOUT");

    /**
     * <p>A hanging card made of any material which is used to identify or provide additional
     * information of a product.</p>
     */
    public static final Resource PackagingFeatureCode_TAG = m.createResource("https://ref.gs1.org/voc/PackagingFeatureCode-TAG");

    /**
     * <p>An outer container made of wicker which is fitted to the bottle usually a
     * little less than half way up from the bottom of the bottle and is used to
     * hold, hang or support the bottle.</p>
     */
    public static final Resource PackagingFeatureCode_WICKER_OUTER_CONTAINER = m.createResource("https://ref.gs1.org/voc/PackagingFeatureCode-WICKER_OUTER_CONTAINER");

    /**
     * <p>A layer of any material which completely enclose a product. A wrap can have
     * many purposes, from providing additional protection to an item to serving
     * as a gift-wrap.</p>
     */
    public static final Resource PackagingFeatureCode_WRAP = m.createResource("https://ref.gs1.org/voc/PackagingFeatureCode-WRAP");

    /**
     * <p>The process by which a sterile (aseptic) product (typically food or pharmaceutical)
     * is packaged in a sterile container in a way which maintains sterility.</p>
     */
    public static final Resource PackagingFunctionCode_ANTISEPTIC = m.createResource("https://ref.gs1.org/voc/PackagingFunctionCode-ANTISEPTIC");

    /**
     * <p>A methodology used to hinder, or deter unauthorized access to a device.</p>
     */
    public static final Resource PackagingFunctionCode_ANTI_TAMPERING = m.createResource("https://ref.gs1.org/voc/PackagingFunctionCode-ANTI_TAMPERING");

    /**
     * <p>Covered with a material (paraffin, wax) that protects the product or packaging.</p>
     */
    public static final Resource PackagingFunctionCode_COATED = m.createResource("https://ref.gs1.org/voc/PackagingFunctionCode-COATED");

    /**
     * <p>Content has been pressed together to the maximum possible way.</p>
     */
    public static final Resource PackagingFunctionCode_COMPRESSED = m.createResource("https://ref.gs1.org/voc/PackagingFunctionCode-COMPRESSED");

    /**
     * <p>A device or mechanism to supply or extract contents.</p>
     */
    public static final Resource PackagingFunctionCode_DISPENSER = m.createResource("https://ref.gs1.org/voc/PackagingFunctionCode-DISPENSER");

    /**
     * <p>Packaging is wrapped in a decorative way for the purposes of the consumer
     * giving it as a gift.</p>
     */
    public static final Resource PackagingFunctionCode_GIFT_WRAPPED = m.createResource("https://ref.gs1.org/voc/PackagingFunctionCode-GIFT_WRAPPED");

    /**
     * <p>Thermal carry container designed for the carriage of temperature controlled
     * goods such as vaccines, pharmaceuticals, and medicines.</p>
     */
    public static final Resource PackagingFunctionCode_ISOTHERMIC = m.createResource("https://ref.gs1.org/voc/PackagingFunctionCode-ISOTHERMIC");

    /**
     * <p>The practice of modifying the composition of the internal atmosphere of a
     * package, (commonly food packages, and drugs) in order to improve the shelf
     * life.</p>
     */
    public static final Resource PackagingFunctionCode_MODIFIED_ATMOSPHERE = m.createResource("https://ref.gs1.org/voc/PackagingFunctionCode-MODIFIED_ATMOSPHERE");

    /**
     * <p>A barrier packaging material for an infusion solution, i.e., oxygen.</p>
     */
    public static final Resource PackagingFunctionCode_OXYGEN_INFUSED = m.createResource("https://ref.gs1.org/voc/PackagingFunctionCode-OXYGEN_INFUSED");

    /**
     * <p>A section of the packaging can be detached with ease in order to have access
     * to the content or product, e.g. peel-off Lids used for packing Milk, Coffee
     * and Cacao Powder.</p>
     */
    public static final Resource PackagingFunctionCode_PEEL_OFF = m.createResource("https://ref.gs1.org/voc/PackagingFunctionCode-PEEL_OFF");

    /**
     * <p>The package is equipped to be hung up on a hook.</p>
     */
    public static final Resource PackagingFunctionCode_PINPACK = m.createResource("https://ref.gs1.org/voc/PackagingFunctionCode-PINPACK");

    /**
     * <p>Functionality to keep from being damaged, attacked, stolen, or injured; guard.</p>
     */
    public static final Resource PackagingFunctionCode_PROTECTED = m.createResource("https://ref.gs1.org/voc/PackagingFunctionCode-PROTECTED");

    /**
     * <p>A component is added to a container for a particular application to lend additional
     * support under severe applications.</p>
     */
    public static final Resource PackagingFunctionCode_REINFORCED = m.createResource("https://ref.gs1.org/voc/PackagingFunctionCode-REINFORCED");

    /**
     * <p>Packaging is designed to prevent leaking of the content specially when it
     * is on powdered or liquid state.</p>
     */
    public static final Resource PackagingFunctionCode_SIFT_PROOF = m.createResource("https://ref.gs1.org/voc/PackagingFunctionCode-SIFT_PROOF");

    /**
     * <p>The packaging is designed to show when there has been some interference with
     * the original sealing or configuration of the packaging.</p>
     */
    public static final Resource PackagingFunctionCode_TAMPER_EVIDENT = m.createResource("https://ref.gs1.org/voc/PackagingFunctionCode-TAMPER_EVIDENT");

    /**
     * <p>Coated with materials that make the packaging impervious to the effects of
     * water.</p>
     */
    public static final Resource PackagingFunctionCode_WATER_RESISTANT = m.createResource("https://ref.gs1.org/voc/PackagingFunctionCode-WATER_RESISTANT");

    /**
     * <p>Definitions made by the asthma and allergist association.</p>
     */
    public static final Resource PackagingMarkedDietAllergenCode_APPROVED_BY_ASTHMA_AND_ALLERGY_ASSOC = m.createResource("https://ref.gs1.org/voc/PackagingMarkedDietAllergenCode-APPROVED_BY_ASTHMA_AND_ALLERGY_ASSOC");

    /**
     * <p>The item is physically marked that it is approved for tube feeding by the
     * appropriate authority of the target market.</p>
     */
    public static final Resource PackagingMarkedDietAllergenCode_APPROVED_FOR_TUBE_FEEDING = m.createResource("https://ref.gs1.org/voc/PackagingMarkedDietAllergenCode-APPROVED_FOR_TUBE_FEEDING");

    /**
     * <p>Indicates the product has been marked as a biological item which indicates
     * a food product that was produced with the use of feed or fertilizer of plant
     * or animal origin, without employment of chemically formulated fertilizers,
     * growth stimulants, antibiotics or pesticides.</p>
     */
    public static final Resource PackagingMarkedDietAllergenCode_BIOLOGICAL = m.createResource("https://ref.gs1.org/voc/PackagingMarkedDietAllergenCode-BIOLOGICAL");

    /**
     * <p>Indicates the product has a marking with the calories per portion contained
     * in the product.</p>
     */
    public static final Resource PackagingMarkedDietAllergenCode_CALORIES_PER_PORTION = m.createResource("https://ref.gs1.org/voc/PackagingMarkedDietAllergenCode-CALORIES_PER_PORTION");

    /**
     * <p>The item is physically marked as containing Latex (rubber).</p>
     */
    public static final Resource PackagingMarkedDietAllergenCode_CONTAINS_LATEX = m.createResource("https://ref.gs1.org/voc/PackagingMarkedDietAllergenCode-CONTAINS_LATEX");

    /**
     * <p>The item is physically marked as containing PVC (Polyvinyl chloride). Phthalate
     * content is unspecified.</p>
     */
    public static final Resource PackagingMarkedDietAllergenCode_CONTAINS_PVC = m.createResource("https://ref.gs1.org/voc/PackagingMarkedDietAllergenCode-CONTAINS_PVC");

    /**
     * <p>The item is physically marked as containing PVC (Polyvinyl chloride) without
     * phthalates.</p>
     */
    public static final Resource PackagingMarkedDietAllergenCode_CONTAINS_PVC_WITHOUT_PHTHALATES = m.createResource("https://ref.gs1.org/voc/PackagingMarkedDietAllergenCode-CONTAINS_PVC_WITHOUT_PHTHALATES");

    /**
     * <p>The item is physically marked as containing PVC (Polyvinyl chloride) with
     * phthalates.</p>
     */
    public static final Resource PackagingMarkedDietAllergenCode_CONTAINS_PVC_WITH_PHTHALATES = m.createResource("https://ref.gs1.org/voc/PackagingMarkedDietAllergenCode-CONTAINS_PVC_WITH_PHTHALATES");

    /**
     * <p>The item is physically marked that it is approved for a 450-800 kilocalorie/day
     * diet by the appropriate authority of the target market.</p>
     */
    public static final Resource PackagingMarkedDietAllergenCode_DIET_PRODUCT_450_800_KCAL_PER_DAY = m.createResource("https://ref.gs1.org/voc/PackagingMarkedDietAllergenCode-DIET_PRODUCT_450_800_KCAL_PER_DAY");

    /**
     * <p>The item is physically marked that it is approved for a 800-1200 kilocalorie/day
     * diet by the appropriate authority of the target market.</p>
     */
    public static final Resource PackagingMarkedDietAllergenCode_DIET_PRODUCT_800_1200_KCAL_PER_DAY = m.createResource("https://ref.gs1.org/voc/PackagingMarkedDietAllergenCode-DIET_PRODUCT_800_1200_KCAL_PER_DAY");

    /**
     * <p>Health symbol used in the Netherlands Target Market which indicates that the
     * item is a cholesterol-reducing product.</p>
     */
    public static final Resource PackagingMarkedDietAllergenCode_GEZONDE_KEUZE_KLAVERTJE = m.createResource("https://ref.gs1.org/voc/PackagingMarkedDietAllergenCode-GEZONDE_KEUZE_KLAVERTJE");

    /**
     * <p>Indicates the product has been marked as Halal which denotes selling or serving
     * food ritually fit according to Islamic dietary laws.</p>
     */
    public static final Resource PackagingMarkedDietAllergenCode_HALAL = m.createResource("https://ref.gs1.org/voc/PackagingMarkedDietAllergenCode-HALAL");

    /**
     * <p>Conscious choice symbol used in the Netherlands Target Market which may be
     * used for products low in saturated fat, trans fatty acids, sugar and salt.</p>
     */
    public static final Resource PackagingMarkedDietAllergenCode_IK_KIES_BEWUST = m.createResource("https://ref.gs1.org/voc/PackagingMarkedDietAllergenCode-IK_KIES_BEWUST");

    /**
     * <p>Indicates the product has been marked as Kosher which denotes selling or serving
     * food ritually fit according to Jewish dietary laws.</p>
     */
    public static final Resource PackagingMarkedDietAllergenCode_KOSHER = m.createResource("https://ref.gs1.org/voc/PackagingMarkedDietAllergenCode-KOSHER");

    /**
     * <p>The item is physically marked that it is approved as lactase enzyme by the
     * appropriate authority of the target market.</p>
     */
    public static final Resource PackagingMarkedDietAllergenCode_LACTASE_ENZYME = m.createResource("https://ref.gs1.org/voc/PackagingMarkedDietAllergenCode-LACTASE_ENZYME");

    /**
     * <p>The item is physically marked as containing a low level of phenylalanine as
     * approved by the appropriate authority of the target market.</p>
     */
    public static final Resource PackagingMarkedDietAllergenCode_LOW_ON_PHENYLALANINE = m.createResource("https://ref.gs1.org/voc/PackagingMarkedDietAllergenCode-LOW_ON_PHENYLALANINE");

    /**
     * <p>The item is physically marked as containing a low level of sugar as approved
     * by the appropriate authority of the target market.</p>
     */
    public static final Resource PackagingMarkedDietAllergenCode_LOW_ON_SUGAR = m.createResource("https://ref.gs1.org/voc/PackagingMarkedDietAllergenCode-LOW_ON_SUGAR");

    /**
     * <p>The item is physically marked that it is approved as substitute mother's milk
     * the appropriate authority of the target market.</p>
     */
    public static final Resource PackagingMarkedDietAllergenCode_MOTHERS_MILK_SUBSTITUTE = m.createResource("https://ref.gs1.org/voc/PackagingMarkedDietAllergenCode-MOTHERS_MILK_SUBSTITUTE");

    /**
     * <p>The item is physically marked that it is approved as nutrition supplement
     * by the appropriate authority of the target market.</p>
     */
    public static final Resource PackagingMarkedDietAllergenCode_NUTRITION_SUPPLEMENT = m.createResource("https://ref.gs1.org/voc/PackagingMarkedDietAllergenCode-NUTRITION_SUPPLEMENT");

    /**
     * <p>Lean product.</p>
     */
    public static final Resource PackagingMarkedDietAllergenCode_NYCKELHAL_MARK = m.createResource("https://ref.gs1.org/voc/PackagingMarkedDietAllergenCode-NYCKELHAL_MARK");

    /**
     * <p>Indicates the product has been marked as vegetarian which denotes a product
     * that contains no meat, fish or other animal products.</p>
     */
    public static final Resource PackagingMarkedDietAllergenCode_VEGETARIAN = m.createResource("https://ref.gs1.org/voc/PackagingMarkedDietAllergenCode-VEGETARIAN");

    /**
     * <p>The item is physically marked as having no artificial colouring.</p>
     */
    public static final Resource PackagingMarkedFreeFromCode_FREE_FROM_ARTIFICIAL_COLOURING = m.createResource("https://ref.gs1.org/voc/PackagingMarkedFreeFromCode-FREE_FROM_ARTIFICIAL_COLOURING");

    /**
     * <p>The item is physically marked as having no artificial flavouring.</p>
     */
    public static final Resource PackagingMarkedFreeFromCode_FREE_FROM_ARTIFICIAL_FLAVOURING = m.createResource("https://ref.gs1.org/voc/PackagingMarkedFreeFromCode-FREE_FROM_ARTIFICIAL_FLAVOURING");

    /**
     * <p>The item is physically marked as having no artificial preservatives.</p>
     */
    public static final Resource PackagingMarkedFreeFromCode_FREE_FROM_ARTIFICIAL_PRESERVATIVES = m.createResource("https://ref.gs1.org/voc/PackagingMarkedFreeFromCode-FREE_FROM_ARTIFICIAL_PRESERVATIVES");

    /**
     * <p>The item is physically marked as having no Cholesterol.</p>
     */
    public static final Resource PackagingMarkedFreeFromCode_FREE_FROM_CHOLESTEROL = m.createResource("https://ref.gs1.org/voc/PackagingMarkedFreeFromCode-FREE_FROM_CHOLESTEROL");

    /**
     * <p>The item is physically marked as being free from cloned food.</p>
     */
    public static final Resource PackagingMarkedFreeFromCode_FREE_FROM_CLONED_FOOD = m.createResource("https://ref.gs1.org/voc/PackagingMarkedFreeFromCode-FREE_FROM_CLONED_FOOD");

    /**
     * <p>The item is physically marked as being free from dairy and dairy products,
     * as approved by the appropriate authority of the target market.</p>
     */
    public static final Resource PackagingMarkedFreeFromCode_FREE_FROM_DAIRY = m.createResource("https://ref.gs1.org/voc/PackagingMarkedFreeFromCode-FREE_FROM_DAIRY");

    /**
     * <p>The item is physically marked as free from egg.</p>
     */
    public static final Resource PackagingMarkedFreeFromCode_FREE_FROM_EGG = m.createResource("https://ref.gs1.org/voc/PackagingMarkedFreeFromCode-FREE_FROM_EGG");

    /**
     * <p>The item is physically marked as being free from fish.</p>
     */
    public static final Resource PackagingMarkedFreeFromCode_FREE_FROM_FISH = m.createResource("https://ref.gs1.org/voc/PackagingMarkedFreeFromCode-FREE_FROM_FISH");

    /**
     * <p>The item is physically marked as free from gluten. This level of containment
     * is frequently determined through regulation.</p>
     */
    public static final Resource PackagingMarkedFreeFromCode_FREE_FROM_GLUTEN = m.createResource("https://ref.gs1.org/voc/PackagingMarkedFreeFromCode-FREE_FROM_GLUTEN");

    /**
     * <p>The item is physically marked as being free of lactose.</p>
     */
    public static final Resource PackagingMarkedFreeFromCode_FREE_FROM_LACTOSE = m.createResource("https://ref.gs1.org/voc/PackagingMarkedFreeFromCode-FREE_FROM_LACTOSE");

    /**
     * <p>The item is physically marked being free from Latex (rubber).</p>
     */
    public static final Resource PackagingMarkedFreeFromCode_FREE_FROM_LATEX = m.createResource("https://ref.gs1.org/voc/PackagingMarkedFreeFromCode-FREE_FROM_LATEX");

    /**
     * <p>The item is physically marked as being free from legume protein.</p>
     */
    public static final Resource PackagingMarkedFreeFromCode_FREE_FROM_LEGUME_PROTEIN = m.createResource("https://ref.gs1.org/voc/PackagingMarkedFreeFromCode-FREE_FROM_LEGUME_PROTEIN");

    /**
     * <p>The item is physically marked as being free from milk and any of its derivatives.</p>
     */
    public static final Resource PackagingMarkedFreeFromCode_FREE_FROM_MILK = m.createResource("https://ref.gs1.org/voc/PackagingMarkedFreeFromCode-FREE_FROM_MILK");

    /**
     * <p>The item is physically marked as being free from milk protein.</p>
     */
    public static final Resource PackagingMarkedFreeFromCode_FREE_FROM_MILK_PROTEIN = m.createResource("https://ref.gs1.org/voc/PackagingMarkedFreeFromCode-FREE_FROM_MILK_PROTEIN");

    /**
     * <p>The item is physically marked as being naturally free from gluten and not
     * extracted as part of the manufacturing process.</p>
     */
    public static final Resource PackagingMarkedFreeFromCode_FREE_FROM_NATURAL_GLUTEN = m.createResource("https://ref.gs1.org/voc/PackagingMarkedFreeFromCode-FREE_FROM_NATURAL_GLUTEN");

    /**
     * <p>The item is physically marked as being free from peanuts.</p>
     */
    public static final Resource PackagingMarkedFreeFromCode_FREE_FROM_PEANUTS = m.createResource("https://ref.gs1.org/voc/PackagingMarkedFreeFromCode-FREE_FROM_PEANUTS");

    /**
     * <p>The item is physically marked as being free from protein.</p>
     */
    public static final Resource PackagingMarkedFreeFromCode_FREE_FROM_PROTEIN = m.createResource("https://ref.gs1.org/voc/PackagingMarkedFreeFromCode-FREE_FROM_PROTEIN");

    /**
     * <p>The item is physically marked as being free from PVC (Polyvinyl chloride).</p>
     */
    public static final Resource PackagingMarkedFreeFromCode_FREE_FROM_PVC = m.createResource("https://ref.gs1.org/voc/PackagingMarkedFreeFromCode-FREE_FROM_PVC");

    /**
     * <p>The item is physically marked as being free from soya.</p>
     */
    public static final Resource PackagingMarkedFreeFromCode_FREE_FROM_SOYA = m.createResource("https://ref.gs1.org/voc/PackagingMarkedFreeFromCode-FREE_FROM_SOYA");

    /**
     * <p>The item is physically marked as being free from sugar.</p>
     */
    public static final Resource PackagingMarkedFreeFromCode_FREE_FROM_SUGAR = m.createResource("https://ref.gs1.org/voc/PackagingMarkedFreeFromCode-FREE_FROM_SUGAR");

    /**
     * <p>The item is physically marked being free from Trans Fatty Acids (Trans Fat)</p>
     */
    public static final Resource PackagingMarkedFreeFromCode_FREE_FROM_TRANSFAT = m.createResource("https://ref.gs1.org/voc/PackagingMarkedFreeFromCode-FREE_FROM_TRANSFAT");

    /**
     * <p>The item is physically marked as having a reduced amount of lactose</p>
     */
    public static final Resource PackagingMarkedFreeFromCode_REDUCED_LACTOSE = m.createResource("https://ref.gs1.org/voc/PackagingMarkedFreeFromCode-REDUCED_LACTOSE");

    /**
     * <p>The item is physically marked as containing a low level of protein.</p>
     */
    public static final Resource PackagingMarkedFreeFromCode_REDUCED_PROTEIN = m.createResource("https://ref.gs1.org/voc/PackagingMarkedFreeFromCode-REDUCED_PROTEIN");

    /**
     * <p>The item is physically marked as having a reduced amount of transfats (unsaturated).</p>
     */
    public static final Resource PackagingMarkedFreeFromCode_REDUCED_TRANSFAT = m.createResource("https://ref.gs1.org/voc/PackagingMarkedFreeFromCode-REDUCED_TRANSFAT");

    /**
     * <p>The item is physically marked as a very low amount of gluten. Very low is
     * frequently determined through regulation for example, per EU Regulation (EC)
     * No 41/2009 [of 20 January 2009], this is defined as containing between 20
     * and 100 mg/kg).</p>
     */
    public static final Resource PackagingMarkedFreeFromCode_VERY_LOW_GLUTEN = m.createResource("https://ref.gs1.org/voc/PackagingMarkedFreeFromCode-VERY_LOW_GLUTEN");

    /**
     * <p>The item is physically marked that no salt has been added when manufacturing
     * the product but it still can contain salt that is naturally part of the ingredients,
     * as approved by the appropriate authority of the target market.</p>
     */
    public static final Resource PackagingMarkedFreeFromCode_WITHOUT_ADDED_SALT = m.createResource("https://ref.gs1.org/voc/PackagingMarkedFreeFromCode-WITHOUT_ADDED_SALT");

    /**
     * <p>The item is physically marked that no sugar has been added when manufacturing
     * the product but it still can contain sugars that are naturally part of the
     * ingredients, as approved by the appropriate authority of the target market.</p>
     */
    public static final Resource PackagingMarkedFreeFromCode_WITHOUT_ADDED_SUGAR = m.createResource("https://ref.gs1.org/voc/PackagingMarkedFreeFromCode-WITHOUT_ADDED_SUGAR");

    /**
     * <p>The item is physically marked that no sweetener has been added when manufacturing
     * the product.</p>
     */
    public static final Resource PackagingMarkedFreeFromCode_WITHOUT_ADDED_SWEETENER = m.createResource("https://ref.gs1.org/voc/PackagingMarkedFreeFromCode-WITHOUT_ADDED_SWEETENER");

    /**
     * <p>Austria Ministry of Agriculture Organic Label, AMA Marketing licenses the
     * AMA organic logo. Red, white and black indicates the majority of ingredients
     * are of Austrian origin.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_AMA_ORGANIC_SEAL = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-AMA_ORGANIC_SEAL");

    /**
     * <p>Used to specify Estonia Meat in their product.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_AUS_KAUP_ESTONIA = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-AUS_KAUP_ESTONIA");

    public static final Resource PackagingMarkedLabelAccreditationCode_BDIH_LOGO = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-BDIH_LOGO");

    /**
     * <p>The one-star Beter Leven (better life) mark indicates that the product comes
     * from a company that cares that animals are kept according to the minimal requirements
     * for sanitation and well-being for the cattle industry.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_BETER_LEVEN_1_STER = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-BETER_LEVEN_1_STER");

    /**
     * <p>The two-star Beter Leven (better life) mark indicates that the product comes
     * from a company that provides for a higher well-being of animals than that
     * established by the minimal requirements for sanitation and well-being for
     * the cattle industry, yet the conditions are inferior to those of Biological-class
     * products.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_BETER_LEVEN_2_STER = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-BETER_LEVEN_2_STER");

    /**
     * <p>The three-star Beter Leven (better life) mark is awarded to products that
     * come from companies that excel in keeping animals according to top guidelines
     * for Biological-class products. In some cases this mark is accompanied by an
     * EKO indication.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_BETER_LEVEN_3_STER = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-BETER_LEVEN_3_STER");

    public static final Resource PackagingMarkedLabelAccreditationCode_BIO_AUSTRIA_LABEL = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-BIO_AUSTRIA_LABEL");

    public static final Resource PackagingMarkedLabelAccreditationCode_BIO_LABEL_GERMAN = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-BIO_LABEL_GERMAN");

    public static final Resource PackagingMarkedLabelAccreditationCode_BIO_SUISSE_BUD_SEAL = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-BIO_SUISSE_BUD_SEAL");

    /**
     * <p>The Blue Angel is awarded to companies as kind of a reward for their commitment
     * to environmental protection. They use it to professionally promote their eco-friendly
     * products in the market. The Blue Angel is an ecological beacon showing the
     * consumer the way to the ecologically superior product and promotes environmentally
     * conscious consumption.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_BLUE_ANGEL = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-BLUE_ANGEL");

    /**
     * <p>The Bord Bia Approved logo is awarded to a company which has been audited
     * by Bord Bia to verify that processes, from farm to fork, comply with the highest
     * Quality Assurance Standards. These standards include animal welfare, traceability,
     * environment, safety, feed, water, testing, inspection, hygiene and good manufacturing
     * practice. Bord Bia Approved is awarded to a company where all the ingredients
     * including meat content satisfy the Bord Bia requirements.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_BORD_BIA_APPROVED = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-BORD_BIA_APPROVED");

    /**
     * <p>Bord Bia Approved - Meat Content Only applies to companies where only the
     * meat content satisfies certain conditions detailed in the Bord Bia requirements
     * document.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_BORD_BIA_APPROVED_MEAT = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-BORD_BIA_APPROVED_MEAT");

    /**
     * <p>Bra Miljoval Bra is the ecolabel of SSNC. It is referred to as Good Environmental
     * Choice in English. SSNC started ecolabelling.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_BRA_MILJOVAL_LABEL_SWEDISH = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-BRA_MILJOVAL_LABEL_SWEDISH");

    /**
     * <p>Crossed grain logo is a trademark owned and administered by Coeliac. It is
     * a worldwide symbol for safe gluten-free foods. Each country has their own
     * Coeliac</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_CROSSED_GRAIN_SYMBOL = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-CROSSED_GRAIN_SYMBOL");

    /**
     * <p>Demeter International trademark for products of certified biodynamic production.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_DEMETER_LABEL = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-DEMETER_LABEL");

    /**
     * <p>ECOCERT is a certification body for sustainable development.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_ECOCERT_CERTIFICATE = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-ECOCERT_CERTIFICATE");

    /**
     * <p>This is a Finnish label used by the Organic union, which represents the entire
     * Finnish organic industry, consumers and producers in a common interest group.
     * They work as a neutral voice in various working groups and consultations,
     * and prepare position papers and presentations. The Federation also organizes
     * training events and professional seminars. The Organic Federation also publishes
     * the magazine Organic.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_ECO_LABEL_LADYBUG = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-ECO_LABEL_LADYBUG");

    /**
     * <p>The package is physically marked with EC National Health Mark. The EC National
     * Health Mark is the health mark for specific hygiene regulations for food of
     * animal origin. The regulation (EC) Nr. 853/2004 of 29. April 2004 of the European
     * Parliament on hygiene rules for food of animal origin demands that companies
     * handling products of animal origin are authorised according to this regulation.
     * The official body responsible for this authorisation assigns a health mark
     * to the food producing company</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_EC_NATIONAL_HEALTH_MARK = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-EC_NATIONAL_HEALTH_MARK");

    /**
     * <p>Estonian Eco Label: Ministry of Agriculture Okomark (Label of Organic Food).</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_EESTI_OKOMARK = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-EESTI_OKOMARK");

    /**
     * <p>Best Food Association of Estonia Food Industry http://www.toiduliit.ee/. An
     * organisation that supports and promote Estonian food industry and economy,
     * and contribute to a balanced and appropriate ethics to members of a favourable
     * business environment for development.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_EESTI_PARIM_TOIDUAINE = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-EESTI_PARIM_TOIDUAINE");

    /**
     * <p>This symbol stands for organic production certified by Skal that meets the
     * requirements of the EU-regulation for organic production. Skal is the inspection
     * body for the organic production in the Netherlands.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_EKO = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-EKO");

    /**
     * <p>The item is physically marked with the European Union Eco label a European
     * environmental initiative supported by the European Commission.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_EU_ECO_LABEL = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-EU_ECO_LABEL");

    /**
     * <p>New EU organic logo the EU introduced a new organic logo to ensure consumer
     * protection and common standards.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_EU_ORGANIC_FARMING = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-EU_ORGANIC_FARMING");

    /**
     * <p>The Fair Trade Mark certifies that products meet the social, economic and
     * environmental International Fair trade Standards. The Fair Trade Mark is usually
     * supported by a local Fair Trade Labelling Organization and certifies products
     * not companies. It does not cover the companies or organizations selling the
     * product</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_FAIR_TRADE_MARK = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-FAIR_TRADE_MARK");

    public static final Resource PackagingMarkedLabelAccreditationCode_FALKEN = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-FALKEN");

    /**
     * <p>The heart symbol to inform the consumer at one glance that the product marked
     * with this symbol is a preferred choice in its product group with regard to
     * fat and sodium. Finnish Heart Association.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_FINNISH_HEART_SYMBOL = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-FINNISH_HEART_SYMBOL");

    /**
     * <p>The item is physically marked with the Forest Stewardship Council label.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_FOREST_STEWARDSHIP_COUNCIL_LABEL = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-FOREST_STEWARDSHIP_COUNCIL_LABEL");

    /**
     * <p>The item is physically marked as of genetically modified origin.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_GMO_MARKED = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-GMO_MARKED");

    public static final Resource PackagingMarkedLabelAccreditationCode_GOODS_FROM_FINLAND_BLUE_SWAN = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-GOODS_FROM_FINLAND_BLUE_SWAN");

    public static final Resource PackagingMarkedLabelAccreditationCode_GREEN_DOT = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-GREEN_DOT");

    /**
     * <p>The item is physically marked with the Green Restaurant Association Endorsed
     * symbol.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_GREEN_RESTAURANT_ASSOCIATION_ENDORSED = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-GREEN_RESTAURANT_ASSOCIATION_ENDORSED");

    /**
     * <p>The item is physically marked with the Green Seal Certified symbol.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_GREEN_SEAL_CERTIFIED = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-GREEN_SEAL_CERTIFIED");

    /**
     * <p>Ireland: The Guaranteed Irish symbol makes shopping for Irish products and
     * services a lot easier. Shoppers know that when they buy a product or service
     * featuring the guaranteed Irish logo they are supporting Irish companies and
     * safeguarding Irish jobs.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_GUARANTEED_IRISH = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-GUARANTEED_IRISH");

    public static final Resource PackagingMarkedLabelAccreditationCode_KRAV_MARK = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-KRAV_MARK");

    /**
     * <p>Allergy and Asthma Federation is a non-profit public health organisation.
     * Our aim is to improve quality of life of the allergy and asthma patients.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_LABEL_OF_THE_ALLERGY_AND_ASTHMA_FEDERATION = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-LABEL_OF_THE_ALLERGY_AND_ASTHMA_FEDERATION");

    /**
     * <p>The Coalition for Consumer Information on Cosmetics (CCIC) Leaping Bunny Program
     * administers a cruelty-free standard and the internationally recognized Leaping
     * Bunny Logo for companies producing cosmetic, personal care, and household
     * products. The Leaping Bunny Program provides the best assurance that no new
     * animal testing is used in any phase of product development by the company,
     * its laboratories, or suppliers.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_LEAPING_BUNNY = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-LEAPING_BUNNY");

    /**
     * <p>Eco-friendly product The sign eco-friendly product is designed to make environmentally
     * friendly products on store shelves more as significant. When it comes to food
     * shall be used for agriculture, natural farming methods. No use of mineral
     * fertilizers, insect control and plant poisons.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_LOODUSSOBRALIK_TOODE_ESTONIA = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-LOODUSSOBRALIK_TOODE_ESTONIA");

    /**
     * <p>Love Irish Food - a promotional label printed on the product packaging to
     * indicate to the consumer that the food is manufactured in Ireland using Irish
     * ingredients.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_LOVE_IRISH_FOOD = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-LOVE_IRISH_FOOD");

    /**
     * <p>Made in Finland Products that are made in Finland Avainlippu (Key Flag) Suomalaisen
     * Tyon</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_MADE_IN_FINLAND_FLAG_WITH_KEY = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-MADE_IN_FINLAND_FLAG_WITH_KEY");

    public static final Resource PackagingMarkedLabelAccreditationCode_MARINE_STEWARDSHIP_COUNCIL_LABEL = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-MARINE_STEWARDSHIP_COUNCIL_LABEL");

    /**
     * <p>Fair trade symbol used in the Netherlands Target Market awarded to manufacturers
     * which contribute to improving the living and working conditions of small farmers
     * and agricultural workers in disadvantaged regions.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_MAX_HAVELAAR = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-MAX_HAVELAAR");

    /**
     * <p>The NATRUE Label guarantees that the products that carry it are made only
     * with natural and organic ingredients, through soft manufacturing processes
     * and environmentally friendly practices. The NATRUE Label is awarded by NATRUE,
     * a non-profit organisation committed to promote and protect high standards
     * of quality and environmental integrity.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_NATRUE_LABEL = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-NATRUE_LABEL");

    /**
     * <p>The green key hole is to be put on the healthy foods in Sweden, Denmark, and
     * Norway within certain product groups in order to make it easier for the customers
     * to make a healthy choice. http://www.norden.org/</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_NYCKELHALET = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-NYCKELHALET");

    /**
     * <p>Confidence in textiles. This has been the motto of the independent test institutes
     * of the International Oeko-Tex Association since 1992, with their tests for
     * harmful substances according to Oeko-Tex Standard 100 for textile products
     * of all types which pose no risk whatsoever to health.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_OEKO_TEX_LABEL = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-OEKO_TEX_LABEL");

    /**
     * <p>Luomo Sun Sign Denotes controlled organic production. The official label of
     * the Finnish inspection authorities; owned by the Ministry of Agriculture and
     * Forestry.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_OFFICIAL_ECO_LABEL_SUN = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-OFFICIAL_ECO_LABEL_SUN");

    /**
     * <p>Programme for Endorsement of Forest Certification (PEFCC_ is an international
     * non-profit, non-governmental organisation dedicated to promoting Sustainable
     * Forest Management (SFM) through independent third-party certification</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_PEFC = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-PEFC");

    /**
     * <p>The Protected designation of origin is the name of an area, a specific place
     * or, in exceptional cases, the name of a country, used as a designation for
     * an agricultural product or a foodstuff, the entire product must be traditionally
     * and ENTIRELY manufactured (prepared, processed AND produced) within the specific
     * region and thus acquire unique properties. Protected Geographical Status (PGS)
     * is a legal framework defined in European Union law to protect the names of
     * regional foods.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_PROTECTED_DESIGNATION_OF_ORIGIN = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-PROTECTED_DESIGNATION_OF_ORIGIN");

    /**
     * <p>The Protected geographical indication is the name of an area, a specific place
     * or, in exceptional cases, the name of a country, used as a description of
     * an agricultural product or a foodstuff, the entire product must be traditionally
     * and at least PARTIALLY manufactured (prepared, processed OR produced) within
     * the specific region and thus acquire unique properties. Protected Geographical
     * Status (PGS) is a legal framework[1] defined in European Union law to protect
     * the names of regional foods.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_PROTECTED_GEOGRAPHICAL_INDICATION = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-PROTECTED_GEOGRAPHICAL_INDICATION");

    /**
     * <p>The item is physically marked with the Protected Harvest Certified symbol.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_PROTECTED_HARVEST_CERTIFIED = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-PROTECTED_HARVEST_CERTIFIED");

    /**
     * <p>Control IMO Organic farming is an alternative, environmentally friendly method
     * of food production. It forbids the use of chemicals and requires production
     * methods that respect animal welfare and do not damage the environment. The
     * term organic can only be used on food labels in Ireland if the food product
     * meets strict Irish and EU organic standards and is licensed by an approved
     * certification body.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_QUALITY_MARK_IRELAND = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-QUALITY_MARK_IRELAND");

    /**
     * <p>The item is physically marked with the Rainforest Alliance Certified symbol.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_RAINFOREST_ALLIANCE = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-RAINFOREST_ALLIANCE");

    /**
     * <p>A symbol used in the Netherlands Target Market intended for meat based products
     * which guarantees that the animals has been growth without the use of antibiotics.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_SCHARRELVLEES = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-SCHARRELVLEES");

    /**
     * <p>The Soil Association Organic Symbol is a symbol used in the UK to show that
     * products meet a strict set of organic standards that protect health, sustainability
     * and the environment.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_SOIL_ASSOCIATION_ORGANIC_SYMBOL = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-SOIL_ASSOCIATION_ORGANIC_SYMBOL");

    /**
     * <p>In response to the urgent and pressing global call for sustainably produced
     * palm oil, the Roundtable on Sustainable Palm Oil (RSPO) was formed in 2004
     * with the objective of promoting the growth and use of sustainable oil palm
     * products through credible global standards and engagement of stakeholders.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_SUSTAINABLE_PALM_OIL_RSPO = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-SUSTAINABLE_PALM_OIL_RSPO");

    /**
     * <p>The Swan is the Nordic environmental label. It was established by the Nordic
     * Council of Ministers in 1989 and Denmark joined in 1997. The Swan is used
     * in all Nordic countries, i.e. Denmark, Norway, Sweden, Finland and Iceland.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_SVANEN = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-SVANEN");

    /**
     * <p>The item is physically marked with the Swedish Seal of Quality label which
     * intends to guarantee the responsibility for the environment of the product.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_SWEDISH_SEAL_OF_QUALITY = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-SWEDISH_SEAL_OF_QUALITY");

    /**
     * <p>The Traditional specialty guaranteed is a trademark for an agricultural product
     * or a foodstuff, which has a certain feature or a set of features, setting
     * it clearly apart from other similar products or foodstuffs belonging to the
     * same category. The product or foodstuff must be manufactured using traditional
     * ingredients or must be characteristic for its traditional composition, production
     * process, or processing reflecting a traditional type of manufacturing or processing.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_TRADITIONAL_SPECIALTY_GUARANTEED = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-TRADITIONAL_SPECIALTY_GUARANTEED");

    /**
     * <p>Approved Estonian Taste - Quality/Tradition/Origin/Traceability for Estonian
     * products. All raw materials must be 100% Estonian. Estonian Chamber of Agriculture
     * and Commerce.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_TUNNUSTATUD_EESTI_MAITSE = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-TUNNUSTATUD_EESTI_MAITSE");

    /**
     * <p>Approved Taste label (designed as a barn swallow) denoting Estonian origin
     * and high quality was introduced. This label has been given to products for
     * Food quality and safety. Estonian Chamber of Agriculture and Commerce (ECAC).</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_TUNNUSTATUD_MAITSE = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-TUNNUSTATUD_MAITSE");

    /**
     * <p>Uniquely Finnish http://www.maakuntienparhaat.fi/en/ The Uniquely Finnish
     * label is a national quality label for small entrepreneurs. ProAgria Association
     * of Rural Advisory Centres grants the label to qualified foodstuff, handicraft
     * and rural tourism companies based on applications.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_UNIQUELY_FINNISH = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-UNIQUELY_FINNISH");

    public static final Resource PackagingMarkedLabelAccreditationCode_USDA = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-USDA");

    /**
     * <p>A certification which is intended to assure the social and environmental quality
     * in coffee production. Coffee based products may be marked with this certification.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_UTZ_CERTIFIED = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-UTZ_CERTIFIED");

    /**
     * <p>Grain based foods (bread, breakfast products, baking articles etc.) which
     * have got a high content of whole grain will be puffed with a nutritional puff
     * from the beginning of 2009: Please choose whole grain first.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_VAELG_FULDKORN_FORST = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-VAELG_FULDKORN_FORST");

    /**
     * <p>Products that support the World Wildlife Federation.</p>
     */
    public static final Resource PackagingMarkedLabelAccreditationCode_WWF_PANDA_LABEL = m.createResource("https://ref.gs1.org/voc/PackagingMarkedLabelAccreditationCode-WWF_PANDA_LABEL");

    /**
     * <p>Any of various woody or arborescent grasses (as of the genera Bambusa, Arundinaria,
     * and Dendrocalamus of the subfamily Bambusoideae) of tropical and temperate
     * regions having hollow stems, thick rhizomes, and shoots. The packaging may
     * be in the form of paper, wood or leaves.</p>
     */
    public static final Resource PackagingMaterialTypeCode_BAMBOO = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-BAMBOO");

    /**
     * <p>A class of materials manufactured by the conversion of natural cellulose to
     * a soluble cellulosic derivative and subsequent regeneration, typically forming
     * a film (e.g., cellophane).</p>
     */
    public static final Resource PackagingMaterialTypeCode_CELLULOSE_HYDRATE = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-CELLULOSE_HYDRATE");

    /**
     * <p>A non-specific material made from clay and hardened by firing at a high temperatures.
     * Examples can include Terra-cotta, Earthenware, Stoneware, Porcelain, and High-Tech
     * Ceramics.</p>
     */
    public static final Resource PackagingMaterialTypeCode_CERAMIC = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-CERAMIC");

    /**
     * <p>A non specific material made by weaving, felting, knitting, or crocheting
     * natural and/or synthetic fibers.</p>
     */
    public static final Resource PackagingMaterialTypeCode_CLOTH_OR_FABRIC = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-CLOTH_OR_FABRIC");

    /**
     * <p>A material that is made from multiple materials.</p>
     */
    public static final Resource PackagingMaterialTypeCode_COMPOSITE = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-COMPOSITE");

    /**
     * <p>Cork is an impermeable buoyant material, the phellem layer of bark tissue
     * that is harvested for commercial use primarily from Quercus suber (the cork
     * oak).</p>
     */
    public static final Resource PackagingMaterialTypeCode_CORK_NATURAL = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-CORK_NATURAL");

    /**
     * <p>A structure formed by two layers of corrugated cardboard (flutes), with a
     * linerboard facing between them.</p>
     */
    public static final Resource PackagingMaterialTypeCode_CORRUGATED_BOARD_DOUBLE_WALL = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-CORRUGATED_BOARD_DOUBLE_WALL");

    /**
     * <p>The value needed is not listed or is not defined within this list's individual
     * code value and definitions of corrugated boards. Please send a work request
     * into GS1 or your solution provider requesting the code you are searching for.</p>
     */
    public static final Resource PackagingMaterialTypeCode_CORRUGATED_BOARD_OTHER = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-CORRUGATED_BOARD_OTHER");

    /**
     * <p>A structure formed by three layers of paper that are glued using starch into
     * one single, sturdy sheet; also termed double faced.</p>
     */
    public static final Resource PackagingMaterialTypeCode_CORRUGATED_BOARD_SINGLE_WALL = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-CORRUGATED_BOARD_SINGLE_WALL");

    /**
     * <p>A structure formed by an inner and outer liner with three fluted sheets in
     * between, each separated by a layer of paper.</p>
     */
    public static final Resource PackagingMaterialTypeCode_CORRUGATED_BOARD_TRIPLE_WALL = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-CORRUGATED_BOARD_TRIPLE_WALL");

    /**
     * <p>The American name for cloth woven from jute plant skins and other vegetable
     * fibres. In other parts of the world it is known as Hessian, Hessian cloth,
     * or gunny from the Indian gain.</p>
     */
    public static final Resource PackagingMaterialTypeCode_FIBRE_BURLAP = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-FIBRE_BURLAP");

    /**
     * <p>A natural cellulosic seed-hair fiber, obtained from the seed pod of the cotton
     * plant. First known in India about 3000 B.C.</p>
     */
    public static final Resource PackagingMaterialTypeCode_FIBRE_COTTON = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-FIBRE_COTTON");

    /**
     * <p>The plant from the stem of which bast fiber is extracted by retting to produce
     * linen. An erroneous term for linen fiber, particularly in blends.</p>
     */
    public static final Resource PackagingMaterialTypeCode_FIBRE_FLAX = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-FIBRE_FLAX");

    /**
     * <p>Hemp is a commonly used term for varieties of the Cannabis plant. Hemp can
     * yield fibre which can be used in ropes, cloths, weaves, as a reinforcement
     * of polymer composites as well as pulps for paper making.</p>
     */
    public static final Resource PackagingMaterialTypeCode_FIBRE_HEMP = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-FIBRE_HEMP");

    /**
     * <p>A bast fiber obtained from the round pod jute or the long pod jute of the
     * family Tiliaceae. Jute ribbon is purely made from the jute plant. Grown extensively
     * in Pakistan and India, mainly in the Bengal district of Pakistan.</p>
     */
    public static final Resource PackagingMaterialTypeCode_FIBRE_JUTE = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-FIBRE_JUTE");

    /**
     * <p>A non specific material made of a unit of matter, either natural or manufactured,
     * that forms the basic element of fabrics and other textile structures.</p>
     */
    public static final Resource PackagingMaterialTypeCode_FIBRE_OTHER = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-FIBRE_OTHER");

    /**
     * <p>A non specific material in a lightweight cellular form resulting from introduction
     * of gas bubbles during manufacture, used to reduce shock and vibration or abrasion.</p>
     */
    public static final Resource PackagingMaterialTypeCode_FOAM = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-FOAM");

    /**
     * <p>A substance mainly consisting of sand, lime and soda, fused at high temperatures
     * and cooled quickly so that it solidifies to a vitreous or noncrystalline condition.
     * This term applies to transparent clear glass or as a generic term if distinction
     * with coloured glass is not desired. Example: sodocalcite.</p>
     */
    public static final Resource PackagingMaterialTypeCode_GLASS = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-GLASS");

    /**
     * <p>Glass composed of silicon, boron, sodium and aluminum oxides (+ other alkaline
     * oxides). It is a technical glass, not recyclable.</p>
     */
    public static final Resource PackagingMaterialTypeCode_GLASS_BOROSILICATE = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-GLASS_BOROSILICATE");

    /**
     * <p>Glass containing external colouring or glass that has been coloured by the
     * addition of colouring agents/particles in its creation</p>
     */
    public static final Resource PackagingMaterialTypeCode_GLASS_COLOURED = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-GLASS_COLOURED");

    /**
     * <p>Glass rich in lead oxide. It is a technical glass, not recyclable, typically
     * used in decorative objects and also in certain cosmetic packaging.</p>
     */
    public static final Resource PackagingMaterialTypeCode_GLASS_CRYSTAL = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-GLASS_CRYSTAL");

    /**
     * <p>A material made up of laminates of paperboard, foil and polyethylene which
     * combined form a sheet suitable for asceptic processing.</p>
     */
    public static final Resource PackagingMaterialTypeCode_LAMINATED_CARTON = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-LAMINATED_CARTON");

    /**
     * <p>A non specific material made from aluminum or aluminum alloy.</p>
     */
    public static final Resource PackagingMaterialTypeCode_METAL_ALUMINUM = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-METAL_ALUMINUM");

    /**
     * <p>Brass is an alloy of copper and zinc.</p>
     */
    public static final Resource PackagingMaterialTypeCode_METAL_BRASS = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-METAL_BRASS");

    /**
     * <p>Refers to an object that is composed of two separate metals joined together.
     * Instead of being a mixture of two or more metals, like alloys, metal composites
     * consist of layers of different metals.</p>
     */
    public static final Resource PackagingMaterialTypeCode_METAL_COMPOSITE = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-METAL_COMPOSITE");

    /**
     * <p>A heavy metallic element (Fe) capable of being fashioned into a variety of
     * forms.</p>
     */
    public static final Resource PackagingMaterialTypeCode_METAL_IRON = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-METAL_IRON");

    /**
     * <p>A bluish-white soft malleable ductile plastic but inelastic heavy metallic
     * element (Pb)</p>
     */
    public static final Resource PackagingMaterialTypeCode_METAL_LEAD = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-METAL_LEAD");

    /**
     * <p>A non specific material made from metal or metal alloy material.</p>
     */
    public static final Resource PackagingMaterialTypeCode_METAL_OTHER = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-METAL_OTHER");

    /**
     * <p>An alloy of steel with chromium and sometimes another element (as nickel or
     * molybdenum) that is practically immune to rusting and ordinary corrosion</p>
     */
    public static final Resource PackagingMaterialTypeCode_METAL_STAINLESS_STEEL = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-METAL_STAINLESS_STEEL");

    /**
     * <p>Commercial iron that contains carbon in any amount up to about 1.7 percent
     * as an essential alloying constituent, is malleable when under suitable conditions,
     * and is distinguished from cast iron by its malleability and lower carbon content.</p>
     */
    public static final Resource PackagingMaterialTypeCode_METAL_STEEL = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-METAL_STEEL");

    /**
     * <p>Tin is a chemical element that is obtained chiefly from the mineral cassiterite,
     * where it occurs as an oxide, SnO2. This silvery, malleable poor metal is not
     * easily oxidized in air, and is used to coat other metals to prevent corrosion.
     * It is used in many alloys, most notably bronze</p>
     */
    public static final Resource PackagingMaterialTypeCode_METAL_TIN = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-METAL_TIN");

    /**
     * <p>Zamac is a family of alloys with a base metal of zinc and alloying elements
     * of aluminium, magnesium, and copper.</p>
     */
    public static final Resource PackagingMaterialTypeCode_METAL_ZAMAC = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-METAL_ZAMAC");

    /**
     * <p>Ground calcium carbonate and precipitated calcium carbonate products serve
     * as functional fillers in plastic and rubber applications. Calcium carbonate
     * is widely used as in polyvinyl chloride (PVC), polyolefin, polypropylene (PP),
     * polyethylene (PE) and unsaturated polyester resins applications.</p>
     */
    public static final Resource PackagingMaterialTypeCode_MINERAL_CALCIUM_CARBONATE = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-MINERAL_CALCIUM_CARBONATE");

    /**
     * <p>Any other mineral-based material not available in this list. Should be used
     * as a temporary measure while a proper code is established</p>
     */
    public static final Resource PackagingMaterialTypeCode_MINERAL_OTHER = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-MINERAL_OTHER");

    /**
     * <p>Talc is used to stiffen thermoplastics, mainly polypropylene but also polyethylene
     * and polyamide (Nylon).</p>
     */
    public static final Resource PackagingMaterialTypeCode_MINERAL_TALC = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-MINERAL_TALC");

    /**
     * <p>A strong elastic material made by drying the sap from various tropical trees,
     * especially the American rubber tree.</p>
     */
    public static final Resource PackagingMaterialTypeCode_NATURAL_RUBBER = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-NATURAL_RUBBER");

    /**
     * <p>The value needed is not listed or is not defined within this list's individual
     * code values and definitions. Please send a work request into GS1 or your solution
     * provider requesting the code you are searching for.</p>
     */
    public static final Resource PackagingMaterialTypeCode_OTHER = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-OTHER");

    /**
     * <p>Heavy paper with ridges and grooves, used in packing fragile articles.</p>
     */
    public static final Resource PackagingMaterialTypeCode_PAPER_CORRUGATED = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-PAPER_CORRUGATED");

    /**
     * <p>Kraft paper is the paper grade with the highest strength. It is used for the
     * production of e.g. paper bags, emery paper or shopping bags.</p>
     */
    public static final Resource PackagingMaterialTypeCode_PAPER_KRAFT = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-PAPER_KRAFT");

    /**
     * <p>The wet-strength kraft paper has a certain tear strength when wet due to special
     * additives. It is used for the production of e.g. paper bags, emery paper or
     * shopping bags.</p>
     */
    public static final Resource PackagingMaterialTypeCode_PAPER_KRAFT_WET_STRENGTH = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-PAPER_KRAFT_WET_STRENGTH");

    /**
     * <p>Used for producing pulp-based or fibrous products by pressing; example products:
     * egg packages, trays and boxes for fruits and vegetables.</p>
     */
    public static final Resource PackagingMaterialTypeCode_PAPER_MOLDED_PULP = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-PAPER_MOLDED_PULP");

    /**
     * <p>Any other paper-based material not available in this list. Should be used
     * as a temporary measure while a proper code is established.</p>
     */
    public static final Resource PackagingMaterialTypeCode_PAPER_OTHER = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-PAPER_OTHER");

    /**
     * <p>A non-specific sheet material produced by the matting of fibres from wood,
     * rags, or other fibrous materials. Generally, paper is of a lesser thickness
     * or weight than paperboard.</p>
     */
    public static final Resource PackagingMaterialTypeCode_PAPER_PAPER = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-PAPER_PAPER");

    /**
     * <p>A non specific material, generally made from cotton or wood, that describe
     * a variety or of board materials used in the production of boxes, folding cartons,
     * and solid fibre and corrugated shipping containers; also termed cardboard</p>
     */
    public static final Resource PackagingMaterialTypeCode_PAPER_PAPERBOARD = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-PAPER_PAPERBOARD");

    /**
     * <p>Generic term for a manmade fiber derived from regenerated cellulose.</p>
     */
    public static final Resource PackagingMaterialTypeCode_PAPER_RAYON = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-PAPER_RAYON");

    /**
     * <p>Plant leaves, such as banana leaves, including wet or dry leaves. In some
     * cases, leaves are pre-softened by steaming.</p>
     */
    public static final Resource PackagingMaterialTypeCode_PLANT_LEAVES = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-PLANT_LEAVES");

    /**
     * <p>Plastic materials made from biomass, but may have exactly the same properties
     * as ordinary plastic. Sometimes these plastics are biodegradable.</p>
     */
    public static final Resource PackagingMaterialTypeCode_PLASTIC_BIOPLASTIC = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-PLASTIC_BIOPLASTIC");

    /**
     * <p>A non-specific material made of any of numerous organic synthetic or processed
     * materials that are mostly thermoplastic or thermosetting polymers of high
     * molecular weight and that can be made into objects, films, or filaments.</p>
     */
    public static final Resource PackagingMaterialTypeCode_PLASTIC_OTHER = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-PLASTIC_OTHER");

    /**
     * <p>A non-specific substance that becomes soft and pliable when heated, without
     * a change in its intrinsic properties. Polystyrene and polyethylene are thermoplastics.</p>
     */
    public static final Resource PackagingMaterialTypeCode_PLASTIC_THERMOPLASTICS = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-PLASTIC_THERMOPLASTICS");

    /**
     * <p>Polyethylene Terephthalate, amorphous (APET) has a very high transparency,
     * is flame retardant and suitable for direct food contact. It is used for packaging
     * of all kinds.</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_APET = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_APET");

    /**
     * <p>Biaxially oriented PP (BOPP) films are characterized by their tear, impact
     * and puncture resistance. The film is mainly used in food packaging, e.g. as
     * candy wrap or wrapping for chocolate bars.</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_BOPP = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_BOPP");

    /**
     * <p>Cellulose acetate is one of the most important esters of cellulose. Depending
     * on the way it has been processed cellulose acetate can be used for a wide
     * variety of applications, e.g. films, membranes or fibers.</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_CELLULOSE_ACETATE = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_CELLULOSE_ACETATE");

    /**
     * <p>Crystallized polyethylene terephthalate (CPET) is a variation of standard
     * PET which has been crystallized for heat resistance, rigidity, and toughness</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_CPET = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_CPET");

    /**
     * <p>EPE is foamed polyethylene, which is a type of environmentally friendly material,
     * that is, pearl cotton like. EPE is made of low-density polyethylene grease
     * through a physical foaming process to produce a non-crosslinked closed cell
     * structure. EPE can be recycled and allows a certain amount of EPE recycled
     * material to be matched in the manufacturing process. Also known as EPE Foam.</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_EPE = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_EPE");

    /**
     * <p>Epoxy resins are thermoset polymers which are frequently used as coatings
     * for metal packaging such as soft-drink cans.</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_EPOXY = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_EPOXY");

    /**
     * <p>Expanded polystyrene is a rigid, tough, closed cell and lightweight thermoplastic
     * foam material. It is manufactured by expanding spherical beads in a mold,
     * using heat and pressure to fuse the beads together. While each individual
     * bead is a closed cell environment, there are significant open spaces between
     * each bead.</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_EPS = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_EPS");

    /**
     * <p>Ethylene vinyl acetate, a copolymer of 60 to 90% ethylene and 40 to 10% vinyl
     * acetate. Packaging applications include soft films, coatings, hot melt adhesives,
     * wine cork substitutes, and closure seals for plastic and metal container caps.</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_EVA = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_EVA");

    /**
     * <p>Ethylene vinyl alcohol, a copolymer of ethylene and vinyl alcohol. A plastic
     * resin commonly used in food applications to provide barrier to oxygen and
     * other gases.</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_EVOH = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_EVOH");

    /**
     * <p>High-Density PolyEthylene (HDPE) is a polyethylene thermoplastic made from
     * petroleum. A strong, relatively opaque form of polyethylene having a dense
     * structure with few side branches off the main carbon backbone. Can be applied
     * to bottles, flasks and caps.</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_HDPE = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_HDPE");

    /**
     * <p>Ionically is a cross-linked polyethylene (ionomer), can be used in combination
     * with PE for its barrier properties.</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_IONOMER = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_IONOMER");

    /**
     * <p>Low-density polyethylene (LDPE) is a polyethylene thermoplastic made from
     * petroleum. A strong form of polyethylene having a less dense structure with
     * more side branches off the main carbon backbone (on about 2% of the carbon
     * atoms) than HDPE; therefore its tensile strength is lower, and its resilience
     * is higherMade in translucent or opaque variations, it is quite flexible, and
     * tough to the degree of being almost unbreakable. It is widely used for manufacturing
     * various containers, dispensing bottles, wash bottles, tubing, plastic bags
     * for computer components, and various moulded laboratory equipment. Its most
     * common use is in plastic bags.</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_LDPE = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_LDPE");

    /**
     * <p>Linear low density polyethylene is a linear polyethylene with a significant
     * number of short branches on the polymer backbone. It is commonly made by copolymerization
     * of ethylene with longer-chain olefins. It is different from LDPE due to the
     * absence of long chain branches which gives it higher tensile strength, impact
     * and puncture resistance than LDPE. Common uses of LLDPE are plastic bags,
     * wraps, stretch wraps, pouches, covers and lids.</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_LLDPE = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_LLDPE");

    /**
     * <p>Medium-density polyethylene is a type of polyethylene defined by a density
     * range of 0.926-0.940 g/cm3. MDPE is typically used in shrink films, sacks,
     * packaging film and carrier bags.</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_MDPE = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_MDPE");

    /**
     * <p>A polymer blend or mixture of least two polymers that are blended to create
     * a new material with different physical properties. These tend to be a proprietary
     * mix of polymers and cannot be separated. The individual materials may not
     * be known by the seller.</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_MIX = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_MIX");

    /**
     * <p>Packaging applications include oven-baking bags (nylon 6 and nylon 66) and
     * barrier layers (MXD6 and nylon 6) for PET and HDPE bottles. Very occasionally,
     * bottles can be made of nylon.</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_NYLON = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_NYLON");

    /**
     * <p>Oriented polypropylene (OPP) is made of a soft polypropylene material which
     * is stretched in a transverse or longitudinal direction (monoaxial) and becomes
     * therefore brittle. Also known as: biaxially oriented polypropylene (BOPP),
     * CAS Registry Number: 9003-07-0</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_OPP = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_OPP");

    /**
     * <p>A non-specific chemical compound or mixture of compounds formed by polymerization
     * and consisting essentially of repeating structural units</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_OTHER = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_OTHER");

    /**
     * <p>A polymer with repeating units linked by amide bonds. Polyamides (PA) occur
     * both naturally and artificially, examples of naturally occurring polyamides
     * are proteins, such as wool and silk. Artificially made polyamides can be nylons,
     * aramids, and sodium poly(aspartate).</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_PA = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_PA");

    /**
     * <p>Polyacrylonitril is a organic polymer which is frequently used in fibres for
     * textiles. As fibres the material is frequently referred to as Acrylic.</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_PAN = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_PAN");

    /**
     * <p>Polycarbonate, a transparent thermoplastic which is used in a wide variety
     * of applications including CDs and DVDs, eyeglasses, cell phone covers, laptops
     * as well as packaging applications such as bottles.</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_PC = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_PC");

    /**
     * <p>Polycaprolactone is a biodegradable polyester which is also used in in the
     * manufacturing of polyurethanes. It is also used in blends with thermoplastic
     * starch to improve properties and can also be used as a plasticizer to PVC.</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_PCL = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_PCL");

    /**
     * <p>A thermoplastic composed of the polymers of ethylene.</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_PE = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_PE");

    /**
     * <p>Polyethylene naphthalate is a polymer with good barrier properties (unlike
     * Polyethylene terephthalate). It is well-suited for production of the amber-colored
     * bottles meant for packing beverages like beer.</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_PEN = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_PEN");

    /**
     * <p>Polyethylene terephthalate is a thermoplastic polymer resin of the polyester
     * family and is used in synthetic fibers. Can be applied to bottles, flasks
     * and caps.</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_PET = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_PET");

    /**
     * <p>Polyethylene Terephthalate Glycol (PETG) is a PET modified with glycol, which
     * is characterized by its aqueous properties (viscosity). Applications are found
     * in injection molding.</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_PETG = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_PETG");

    /**
     * <p>Polyhydroxyalkanoates are linear polyesters produced in nature by bacterial
     * fermentation of sugar or lipids.</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_PHA = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_PHA");

    /**
     * <p>Polylactic acid or Polylactide is a biodegradable, thermoplastic, aliphatic
     * polyester derived from lactic acid.</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_PLA = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_PLA");

    /**
     * <p>Polymethyl Methacrylate (PMMA) is often used as a lightweight and shatterproof
     * alternative to glass, due to its transparency, brilliance and scratch resistance,
     * PMMA is therefore often referred to as acrylic glass.</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_PMMA = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_PMMA");

    /**
     * <p>Polyoxymethylene (POM) is a thermoplastic with good mechanical properties
     * and high dimensional stability. Fields of application are the automotive industry
     * and electrical engineering, in packaging it is used for e.g. spray cans, gas
     * lighter tanks, gas ampoules. Also known as acetal, polyacetal, and polyformaldehyde.</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_POM = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_POM");

    /**
     * <p>A non-specific material made of various thermoplastic plastics or fibers that
     * are polymers of propylene.</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_PP = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_PP");

    /**
     * <p>A polymer prepared by the polymerization of styrene as the sole monomer</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_PS = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_PS");

    /**
     * <p>Polyurethanes are primarily thermoset resins which are used in the manufacture
     * of flexible and rigid foams, microcellular foam seals and gaskets, as well
     * as high performance adhesives, surface coatings and sealants. Polyurethane
     * can also be used to make synthetic fibers.</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_PU = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_PU");

    /**
     * <p>Polyvinyl alcohol (PVA or PVOH) is a biodegradable and highly water soluble
     * polymer with high gas and grease barrier. Common uses for PVA are paper adhesives,
     * paper coatings, as a self-standing water soluble films as well as blends to
     * improve processability of thermoplastic starch.</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_PVA = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_PVA");

    /**
     * <p>A polymer of vinyl chloride used especially for electrical insulation, films,
     * and pipes</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_PVC = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_PVC");

    /**
     * <p>Polyvinylidene chloride is primarily used as a barrier coating to provide
     * barrier against fat, vapour and gases.</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_PVDC = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_PVDC");

    /**
     * <p>Styrene acrylonitrile (SAN) is a copolymer transparent and rigid plastic.
     * Examples of applications are kitchenware and cosmetic packaging.</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_SAN = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_SAN");

    /**
     * <p>Polymer is generally composed of organic chains linked together by the silicon-oxygen
     * bond. Used in particular for valves. Also know as polysiloxane.</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_SILICONE = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_SILICONE");

    /**
     * <p>Thermoplastic starch is obtained through destructurization of natural starch
     * through exposure to shear and heat. TPS is most frequently used in blends
     * with biodegradable synthetic polymers such as PCL and PVA.</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_TPS = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_TPS");

    /**
     * <p>Extruded polystyrene is a rigid, tough, closed cell and lightweight thermoplastic
     * foam material. It is manufactured using a process of extrusion that produces
     * a homogeneous 'closed cell' matrix with each cell fully enclosed by polystyrene
     * walls.</p>
     */
    public static final Resource PackagingMaterialTypeCode_POLYMER_XPS = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-POLYMER_XPS");

    /**
     * <p>A strong elastic synthetic substance made either by improving the qualities
     * of natural rubber or by an industrial process using petroleum and coal products</p>
     */
    public static final Resource PackagingMaterialTypeCode_RUBBER = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-RUBBER");

    /**
     * <p>A non-specific polymer of a vinyl compound or a product (as a resin or a textile
     * fiber) made from such a polymer</p>
     */
    public static final Resource PackagingMaterialTypeCode_VINYL = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-VINYL");

    /**
     * <p>Hardboard (not to be confused with hardwood), also called High-Density Fiberboard
     * (HDF), is a type of fiberboard, which is similar to particle board and medium-density
     * fiberboard, but is denser, much stronger and harder because it is made out
     * of exploded wood fibers which have been highly compressed. Consequently, the
     * density of hardboard is 31 lbs or more per cubic foot (500 kg/m_)[2] and is
     * usually about 50-65 lbs per cubic foot (800-1040 kg/m_). It differs from particle
     * board in that the bonding of the wood fibers requires no additional materials,
     * although resin is often added. Unlike particle board, it will not split or
     * crack.</p>
     */
    public static final Resource PackagingMaterialTypeCode_WOOD_HARDBOARD = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-WOOD_HARDBOARD");

    /**
     * <p>A general term referring to any variety of broad-leaved, deciduous trees,
     * and the wood from those trees. The term has nothing to do with the actual
     * hardness of the wood; some hardwoods are softer than certain softwood (evergreen)
     * species.</p>
     */
    public static final Resource PackagingMaterialTypeCode_WOOD_HARDWOOD = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-WOOD_HARDWOOD");

    /**
     * <p>Medium-Density Fibreboard (MDF) is an engineered wood product made by breaking
     * down hardwood or softwood residuals into wood fibres, combining them with
     * wax and a resin binder, and forming panels by applying high temperature and
     * pressure. MDF is generally denser than plywood. It is made up of separated
     * fibres, but can be used as a building material similar in application to plywood.
     * It is stronger and much more dense than particle board.</p>
     */
    public static final Resource PackagingMaterialTypeCode_WOOD_MEDIUM_DENSITY_FIBREBOARD = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-WOOD_MEDIUM_DENSITY_FIBREBOARD");

    /**
     * <p>Oriented Strand Board (OSB), also known as sterling board, sterling OSB, aspenite,
     * and smartply, is an engineered wood particle board formed by adding adhesives
     * and then compressing layers of wood strands (flakes) in specific orientations.
     * OSB may have a rough and variegated surface with the individual strips of
     * around 2.5 - 15 cm (1 - 6 inch), lying unevenly across each other and comes
     * in a variety of types.</p>
     */
    public static final Resource PackagingMaterialTypeCode_WOOD_ORIENTED_STRANDBOARD = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-WOOD_ORIENTED_STRANDBOARD");

    /**
     * <p>A non specific material made from the hard fibrous lignified substance under
     * the bark of trees.</p>
     */
    public static final Resource PackagingMaterialTypeCode_WOOD_OTHER = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-WOOD_OTHER");

    /**
     * <p>Particle Board, also known as particleboard, chipboard, and Low-Density Fiberboard
     * (LDF), is an engineered wood product manufactured from wood chips, sawmill
     * shavings, or sawdust, and a synthetic resin or other suitable binder, which
     * is pressed and extruded. Particle board is a composite material.</p>
     */
    public static final Resource PackagingMaterialTypeCode_WOOD_PARTICLE_BOARD = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-WOOD_PARTICLE_BOARD");

    /**
     * <p>Plywood, a manufactured wood panel similar to LDF, MDF, and HDF, is made from
     * layering thin sheets of wood. Plywood layers (called veneers or plies) are
     * glued together, with adjacent plies having their wood grain rotated relative
     * to adjacent layers up to 90 degrees. All plywoods bind resin and wood fibre
     * sheets (cellulose cells are long, strong and thin) to form a composite material.</p>
     */
    public static final Resource PackagingMaterialTypeCode_WOOD_PLYWOOD = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-WOOD_PLYWOOD");

    /**
     * <p>General term used to describe lumber produced from needle and/or cone bearing
     * trees (Conifers).</p>
     */
    public static final Resource PackagingMaterialTypeCode_WOOD_SOFTWOOD = m.createResource("https://ref.gs1.org/voc/PackagingMaterialTypeCode-WOOD_SOFTWOOD");

    /**
     * <p>Packaging that can biodegrade generating a relatively homogeneous and stable
     * humus-like substance.</p>
     */
    public static final Resource PackagingRecyclingProcessTypeCode_COMPOSTABLE = m.createResource("https://ref.gs1.org/voc/PackagingRecyclingProcessTypeCode-COMPOSTABLE");

    /**
     * <p>Packaging which allows for a net calorific gain in energy recovery operations.</p>
     */
    public static final Resource PackagingRecyclingProcessTypeCode_ENERGY_RECOVERABLE = m.createResource("https://ref.gs1.org/voc/PackagingRecyclingProcessTypeCode-ENERGY_RECOVERABLE");

    /**
     * <p>Packaging material and format which can be diverted from the waste stream
     * through available processes and programmes and can be collected, processed
     * and returned to use in the form of raw materials or products.</p>
     */
    public static final Resource PackagingRecyclingProcessTypeCode_RECYCLABLE = m.createResource("https://ref.gs1.org/voc/PackagingRecyclingProcessTypeCode-RECYCLABLE");

    /**
     * <p>Packaging that has been conceived and designed to accomplished within its
     * life cycle a certain number of trips, rotations or uses for the same purpose
     * for which it was conceived.</p>
     */
    public static final Resource PackagingRecyclingProcessTypeCode_REUSABLE = m.createResource("https://ref.gs1.org/voc/PackagingRecyclingProcessTypeCode-REUSABLE");

    /**
     * <p>Alko inc. is an independent, entirely State-owned company. Alko is administered
     * and supervised by the Ministry of Social Affairs and Health. They have own
     * recycling system for alcohol products bottles called Alko. This is a recycling
     * system used in Finland</p>
     */
    public static final Resource PackagingRecyclingSchemeCode_ALKO = m.createResource("https://ref.gs1.org/voc/PackagingRecyclingSchemeCode-ALKO");

    /**
     * <p>PALPA stands for Suomen Palautuspakkaus Oy. PALPA administers the recycling
     * of beverage containers and promotes recycling in Finland. A-pullo is one of
     * the recycling systems. PALPA is the administrator. This is a recycling system
     * used in Finland.</p>
     */
    public static final Resource PackagingRecyclingSchemeCode_A_PULLO = m.createResource("https://ref.gs1.org/voc/PackagingRecyclingSchemeCode-A_PULLO");

    /**
     * <p>PALPA Standas for Suomen Palautuspakkaus Oy. PALPA administers the recycling
     * of beverage containers and promotes recycling in Finland. EKO-pullo is one
     * of the recycling systems PALPA is administer. This is a recycling system used
     * in Finland.</p>
     */
    public static final Resource PackagingRecyclingSchemeCode_EKO_PULLO = m.createResource("https://ref.gs1.org/voc/PackagingRecyclingSchemeCode-EKO_PULLO");

    /**
     * <p>PALPA stands for Suomen Palautuspakkaus Oy. PALPA administers the recycling
     * of beverage containers and promotes recycling in Finland. PALPA is on of the
     * recycling systems PALPA is administer. This is a recycling system used in
     * Finland.</p>
     */
    public static final Resource PackagingRecyclingSchemeCode_PALPA = m.createResource("https://ref.gs1.org/voc/PackagingRecyclingSchemeCode-PALPA");

    /**
     * <p>A relatively long, evenly shaped piece of some solid substance</p>
     */
    public static final Resource PackagingShapeCode_BAR = m.createResource("https://ref.gs1.org/voc/PackagingShapeCode-BAR");

    /**
     * <p>A spiral structure made by winding a material into a series of loops. A coil
     * may or may not have a spindle around which the loops are formed.</p>
     */
    public static final Resource PackagingShapeCode_COIL = m.createResource("https://ref.gs1.org/voc/PackagingShapeCode-COIL");

    /**
     * <p>A cone is a three-dimensional geometric shape that tapers smoothly from a
     * flat, round base to a point.</p>
     */
    public static final Resource PackagingShapeCode_CONE = m.createResource("https://ref.gs1.org/voc/PackagingShapeCode-CONE");

    /**
     * <p>A long shape that has a circular base and an equally-sized circular top.</p>
     */
    public static final Resource PackagingShapeCode_CYLINDRICAL = m.createResource("https://ref.gs1.org/voc/PackagingShapeCode-CYLINDRICAL");

    /**
     * <p>A plane figure that is bounded by a closed path or circuit composed of a finite
     * sequence of equally-sized straight line segments. A polygon may have a varying
     * number of segments or faces resulting in different configurations, for example
     * a 5-faced polygon: pentagon, 6-faced: hexagon, 8-faced: octagon, 12-faced:
     * dodecahedron, etc.</p>
     */
    public static final Resource PackagingShapeCode_POLYGON = m.createResource("https://ref.gs1.org/voc/PackagingShapeCode-POLYGON");

    /**
     * <p>A closed planar quadrilateral with four right angles.</p>
     */
    public static final Resource PackagingShapeCode_RECTANGULAR = m.createResource("https://ref.gs1.org/voc/PackagingShapeCode-RECTANGULAR");

    /**
     * <p>A perfectly round geometrical object in three-dimensional space, such as the
     * shape of a round ball. Like a circle in two dimensions, a perfect sphere is
     * completely symmetrical around its centre, with all points on the surface lying
     * the same distance from the centre point.</p>
     */
    public static final Resource PackagingShapeCode_SPHERICAL = m.createResource("https://ref.gs1.org/voc/PackagingShapeCode-SPHERICAL");

    /**
     * <p>The result of different materials being compressed into a solid block usually
     * of small dimensions.</p>
     */
    public static final Resource PackagingShapeCode_TABLET = m.createResource("https://ref.gs1.org/voc/PackagingShapeCode-TABLET");

    /**
     * <p>Shape is not currently specified in the list. To be used as a temporary means
     * until a specific missing value is added to the list.</p>
     */
    public static final Resource PackagingShapeCode_UNSPECIFIED = m.createResource("https://ref.gs1.org/voc/PackagingShapeCode-UNSPECIFIED");

    /**
     * <p>Issue of a banker's draft in payment of the funds.</p>
     */
    public static final Resource PaymentMethod_BANKERS_DRAFT = m.createResource("https://ref.gs1.org/voc/PaymentMethod-BANKERS_DRAFT");

    /**
     * <p>Payment by a pre-printed form, which has been completed by a financial institution,
     * on which instructions are given to an account holder (a bank or building society)
     * to pay a stated sum to a named recipient.</p>
     */
    public static final Resource PaymentMethod_BANK_CHEQUE = m.createResource("https://ref.gs1.org/voc/PaymentMethod-BANK_CHEQUE");

    /**
     * <p>The payment was originally made by bankgiro.</p>
     */
    public static final Resource PaymentMethod_BANK_GIRO = m.createResource("https://ref.gs1.org/voc/PaymentMethod-BANK_GIRO");

    /**
     * <p>House Credit.</p>
     */
    public static final Resource PaymentMethod_BOOKENTRY_CREDIT = m.createResource("https://ref.gs1.org/voc/PaymentMethod-BOOKENTRY_CREDIT");

    /**
     * <p>House Debit.</p>
     */
    public static final Resource PaymentMethod_BOOKENTRY_DEBIT = m.createResource("https://ref.gs1.org/voc/PaymentMethod-BOOKENTRY_DEBIT");

    public static final Resource PaymentMethod_BOP = m.createResource("https://ref.gs1.org/voc/PaymentMethod-BOP");

    /**
     * <p>Payment by currency (including bills and coins) in circulation, including
     * checking account deposits.</p>
     */
    public static final Resource PaymentMethod_CASH = m.createResource("https://ref.gs1.org/voc/PaymentMethod-CASH");

    /**
     * <p>Payment by a pre-printed form stamped with the paying bank's certification
     * on which instructions are given to an account holder (a bank or building society)
     * to pay a stated sum to a named recipient .</p>
     */
    public static final Resource PaymentMethod_CERTIFIED_CHEQUE = m.createResource("https://ref.gs1.org/voc/PaymentMethod-CERTIFIED_CHEQUE");

    /**
     * <p>Payment by a pre-printed form on which instructions are given to an account
     * holder (a bank or building society) to pay a stated sum to a named recipient.</p>
     */
    public static final Resource PaymentMethod_CHEQUE = m.createResource("https://ref.gs1.org/voc/PaymentMethod-CHEQUE");

    /**
     * <p>Payment by means of a card issued by a bank or other financial institution.</p>
     */
    public static final Resource PaymentMethod_CREDIT_CARD = m.createResource("https://ref.gs1.org/voc/PaymentMethod-CREDIT_CARD");

    /**
     * <p>Payment by American Express credit card</p>
     */
    public static final Resource PaymentMethod_CREDIT_CARD_AMEX = m.createResource("https://ref.gs1.org/voc/PaymentMethod-CREDIT_CARD_AMEX");

    /**
     * <p>Payment by Diners Club credit card</p>
     */
    public static final Resource PaymentMethod_CREDIT_CARD_DINERS_CLUB = m.createResource("https://ref.gs1.org/voc/PaymentMethod-CREDIT_CARD_DINERS_CLUB");

    /**
     * <p>Payment by Discover credit card</p>
     */
    public static final Resource PaymentMethod_CREDIT_CARD_DISCOVER = m.createResource("https://ref.gs1.org/voc/PaymentMethod-CREDIT_CARD_DISCOVER");

    /**
     * <p>Payment by Mastercard credit card</p>
     */
    public static final Resource PaymentMethod_CREDIT_CARD_MASTERCARD = m.createResource("https://ref.gs1.org/voc/PaymentMethod-CREDIT_CARD_MASTERCARD");

    /**
     * <p>Payment by Visa credit card</p>
     */
    public static final Resource PaymentMethod_CREDIT_CARD_VISA = m.createResource("https://ref.gs1.org/voc/PaymentMethod-CREDIT_CARD_VISA");

    /**
     * <p>The amount is to be, or has been, directly debited to the customer's bank
     * account through a bank card.</p>
     */
    public static final Resource PaymentMethod_DEBIT_CARD = m.createResource("https://ref.gs1.org/voc/PaymentMethod-DEBIT_CARD");

    /**
     * <p>Payment by Maestro debit card</p>
     */
    public static final Resource PaymentMethod_DEBIT_CARD_MAESTRO = m.createResource("https://ref.gs1.org/voc/PaymentMethod-DEBIT_CARD_MAESTRO");

    /**
     * <p>Payment by Mastercard debit card</p>
     */
    public static final Resource PaymentMethod_DEBIT_CARD_MASTERCARD = m.createResource("https://ref.gs1.org/voc/PaymentMethod-DEBIT_CARD_MASTERCARD");

    /**
     * <p>Payment by Visa debit card</p>
     */
    public static final Resource PaymentMethod_DEBIT_CARD_VISA = m.createResource("https://ref.gs1.org/voc/PaymentMethod-DEBIT_CARD_VISA");

    /**
     * <p>Payment by Visa Electron debit card</p>
     */
    public static final Resource PaymentMethod_DEBIT_CARD_VISA_ELECTRON = m.createResource("https://ref.gs1.org/voc/PaymentMethod-DEBIT_CARD_VISA_ELECTRON");

    /**
     * <p>A credit transaction made through the automated clearing house system</p>
     */
    public static final Resource PaymentMethod_ELECTRONIC_CREDIT_ACH = m.createResource("https://ref.gs1.org/voc/PaymentMethod-ELECTRONIC_CREDIT_ACH");

    /**
     * <p>A debit transaction made through the automated clearing house system.</p>
     */
    public static final Resource PaymentMethod_ELECTRONIC_DEBIT_ACH = m.createResource("https://ref.gs1.org/voc/PaymentMethod-ELECTRONIC_DEBIT_ACH");

    /**
     * <p>Fedwire is a real time gross settlement funds transfer system operated by
     * the Federal Reserve Banks that enables financial institutions to electronically
     * transfer funds between its participants.</p>
     */
    public static final Resource PaymentMethod_FED_WIRE_NON_REPETITIVE = m.createResource("https://ref.gs1.org/voc/PaymentMethod-FED_WIRE_NON_REPETITIVE");

    /**
     * <p>Repetitive Fedwire is a real time gross settlement funds transfer system operated
     * by the Federal Reserve Banks that enables financial institutions to electronically
     * transfer funds between its participants. Repetitive wire transfers are sent
     * by the same party to the same recipient through the same financial institution
     * with the same wiring instructions</p>
     */
    public static final Resource PaymentMethod_FED_WIRE_REPETITIVE = m.createResource("https://ref.gs1.org/voc/PaymentMethod-FED_WIRE_REPETITIVE");

    /**
     * <p>Payment by international wire transfer</p>
     */
    public static final Resource PaymentMethod_INTERNATIONAL_WIRE = m.createResource("https://ref.gs1.org/voc/PaymentMethod-INTERNATIONAL_WIRE");

    /**
     * <p>The financial operation is a letter of credit.</p>
     */
    public static final Resource PaymentMethod_LETTER_OF_CREDIT = m.createResource("https://ref.gs1.org/voc/PaymentMethod-LETTER_OF_CREDIT");

    /**
     * <p>Payment by online payment mechanisms</p>
     */
    public static final Resource PaymentMethod_ONLINE_PAYMENT = m.createResource("https://ref.gs1.org/voc/PaymentMethod-ONLINE_PAYMENT");

    /**
     * <p>Online payment via Apple Pay</p>
     */
    public static final Resource PaymentMethod_ONLINE_PAYMENT_APPLE_PAY = m.createResource("https://ref.gs1.org/voc/PaymentMethod-ONLINE_PAYMENT_APPLE_PAY");

    /**
     * <p>Online payment via Google Wallet</p>
     */
    public static final Resource PaymentMethod_ONLINE_PAYMENT_GOOGLE_WALLET = m.createResource("https://ref.gs1.org/voc/PaymentMethod-ONLINE_PAYMENT_GOOGLE_WALLET");

    /**
     * <p>Online payment via PayPal</p>
     */
    public static final Resource PaymentMethod_ONLINE_PAYMENT_PAYPAL = m.createResource("https://ref.gs1.org/voc/PaymentMethod-ONLINE_PAYMENT_PAYPAL");

    /**
     * <p>The financial operation has been done by postgiro.</p>
     */
    public static final Resource PaymentMethod_POSTGIRO = m.createResource("https://ref.gs1.org/voc/PaymentMethod-POSTGIRO");

    /**
     * <p>Payment by wire transfer credit</p>
     */
    public static final Resource PaymentMethod_WIRE_TRANSFER_CREDIT = m.createResource("https://ref.gs1.org/voc/PaymentMethod-WIRE_TRANSFER_CREDIT");

    /**
     * <p>Payment by wire transfer debit</p>
     */
    public static final Resource PaymentMethod_WIRE_TRANSFER_DEBIT = m.createResource("https://ref.gs1.org/voc/PaymentMethod-WIRE_TRANSFER_DEBIT");

    /**
     * <p>The rate of doing work or rate of production, transfer or consumption of energy;
     * the amount of energy transferred or converted per unit time. SI Units: watt</p>
     */
    public static final Resource Power = m.createResource("https://ref.gs1.org/voc/Power");

    /**
     * <p>The state of the product after it has been separated from any liquid within
     * the package. For example, a can of apricots in syrup would have a different
     * nutritional composition if the apricots are consumed with the syrup rather
     * than if the syrup is drained before consuming the apricots (because of the
     * high sugar and energy content of the syrup).</p>
     */
    public static final Resource PreparationTypeCode_AS_DRAINED = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-AS_DRAINED");

    /**
     * <p>Cooking food in an oven by dry heat applied evenly throughout the oven</p>
     */
    public static final Resource PreparationTypeCode_BAKE = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-BAKE");

    /**
     * <p>Method of cooking meat with the heat and hot gasses of a fire</p>
     */
    public static final Resource PreparationTypeCode_BARBECUE = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-BARBECUE");

    /**
     * <p>Food preparation wherein the food substance is rapidly plunged into boiling
     * water and then removed after a brief, timed interval and then plunged into
     * iced water or placed under cold running water</p>
     */
    public static final Resource PreparationTypeCode_BLANCH = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-BLANCH");

    /**
     * <p>Baking a pie crust or other pastry without the filling</p>
     */
    public static final Resource PreparationTypeCode_BLIND_BAKE = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-BLIND_BAKE");

    /**
     * <p>Cooking food in boiling water, or other water-based liquid such as stock or
     * milk</p>
     */
    public static final Resource PreparationTypeCode_BOIL = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-BOIL");

    /**
     * <p>Cooking with moist heat, typically in a covered pot with a small amount of
     * liquid</p>
     */
    public static final Resource PreparationTypeCode_BRAISE = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-BRAISE");

    /**
     * <p>Cooking food with high heat with the heat applied directly to the food, most
     * commonly from above. Heat transfer to the food is primarily via radiant heat</p>
     */
    public static final Resource PreparationTypeCode_BROIL = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-BROIL");

    /**
     * <p>Cooking method whereby food is submerged in hot oil or fat.</p>
     */
    public static final Resource PreparationTypeCode_DEEP_FRY = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-DEEP_FRY");

    /**
     * <p>Cooking technique to prepare delicate food such as bird nests, shark fins
     * etc. The food is covered with water and put in a covered ceramic jar</p>
     */
    public static final Resource PreparationTypeCode_DOUBLE_STEAM = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-DOUBLE_STEAM");

    /**
     * <p>Convert the product from room temperature to a frozen state.Simple</p>
     */
    public static final Resource PreparationTypeCode_FREEZE = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-FREEZE");

    /**
     * <p>Cooking of food in fat.</p>
     */
    public static final Resource PreparationTypeCode_FRY = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-FRY");

    /**
     * <p>Form of cooking where the food is fried with its own fat.</p>
     */
    public static final Resource PreparationTypeCode_GRIDDLE_FRY = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-GRIDDLE_FRY");

    /**
     * <p>Form of cooking that involves direct heat. The definition varies widely by
     * region and culture</p>
     */
    public static final Resource PreparationTypeCode_GRILL = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-GRILL");

    /**
     * <p>Prepare the item by simply heating or warming to a desired temperature or
     * visual state prior to serving</p>
     */
    public static final Resource PreparationTypeCode_HEAT_AND_SERVE = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-HEAT_AND_SERVE");

    /**
     * <p>Cooking food by employing microwave radiation</p>
     */
    public static final Resource PreparationTypeCode_MICROWAVE = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-MICROWAVE");

    /**
     * <p>Form of frying characterised by the use of less cooking oil than deep frying</p>
     */
    public static final Resource PreparationTypeCode_PAN_FRY = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-PAN_FRY");

    /**
     * <p>Cooking food by gently simmering food in liquid, generally water, stock or
     * wine</p>
     */
    public static final Resource PreparationTypeCode_POACH = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-POACH");

    /**
     * <p>The state of the product after preparation (e.g. after adding milk or water).</p>
     */
    public static final Resource PreparationTypeCode_PREPARED = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-PREPARED");

    /**
     * <p>Method of cooking in a sealed vessel that does not permit air or liquids to
     * escape below a preset pressure</p>
     */
    public static final Resource PreparationTypeCode_PRESSURE_COOK = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-PRESSURE_COOK");

    /**
     * <p>Meat and cooking oil are brought to high temperatures while pressure is held
     * high enough that the water within is prevented from boiling off</p>
     */
    public static final Resource PreparationTypeCode_PRESSURE_FRY = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-PRESSURE_FRY");

    /**
     * <p>No Preparation. The product is ready for use after being taken out of the
     * packaging (if packaging exists) without the need of any further action prior
     * to consumption or use</p>
     */
    public static final Resource PreparationTypeCode_READY_TO_DRINK = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-READY_TO_DRINK");

    /**
     * <p>Besides unpacking no additional preparation required.</p>
     */
    public static final Resource PreparationTypeCode_READY_TO_EAT = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-READY_TO_EAT");

    /**
     * <p>Restore a dry or concentrated food to its original strength or consistency
     * by adding water.</p>
     */
    public static final Resource PreparationTypeCode_RECONSTITUTE = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-RECONSTITUTE");

    /**
     * <p>Convert the product from room temperature to a chilled state.</p>
     */
    public static final Resource PreparationTypeCode_REFRIGERATE = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-REFRIGERATE");

    /**
     * <p>Cooking method that uses dry heat, whether an open flame, oven, or other heat
     * source.</p>
     */
    public static final Resource PreparationTypeCode_ROAST = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-ROAST");

    /**
     * <p>Style of roasting where meat is skewered on a spit and revolves over a flame</p>
     */
    public static final Resource PreparationTypeCode_ROTISSERIE = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-ROTISSERIE");

    /**
     * <p>Cooking food using a small amount of fat in a shallow pan over relatively
     * high heat</p>
     */
    public static final Resource PreparationTypeCode_SAUTE = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-SAUTE");

    /**
     * <p>Technique used in grilling, roasting, braising, sauteing, etc. That cooks
     * the surface of the food (usually meat, poultry or fish) at high temperature
     * so that a caramelised crust forms</p>
     */
    public static final Resource PreparationTypeCode_SEAR = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-SEAR");

    /**
     * <p>Cook food by heating it in water kept just below the boiling point (same as
     * coddling)</p>
     */
    public static final Resource PreparationTypeCode_SIMMER = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-SIMMER");

    /**
     * <p>Process of curing, cooking, or seasoning food by exposing it for long periods
     * of time to the smoke from a wood fire</p>
     */
    public static final Resource PreparationTypeCode_SMOKE = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-SMOKE");

    /**
     * <p>Cooking by first boiling the water so it will evaporate into steam, then the
     * steam will carry heat to the food, thus achieving heating the food</p>
     */
    public static final Resource PreparationTypeCode_STEAM = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-STEAM");

    /**
     * <p>Preparing meat cut into smaller pieces or cubes by simmering it in liquid,
     * usually together with vegetables</p>
     */
    public static final Resource PreparationTypeCode_STEW = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-STEW");

    /**
     * <p>Chinese cooking technique used because of its fast cooking speed</p>
     */
    public static final Resource PreparationTypeCode_STIR_FRY = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-STIR_FRY");

    /**
     * <p>Convert the product from a frozen state to a chilled or room temperature state.</p>
     */
    public static final Resource PreparationTypeCode_THAW = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-THAW");

    /**
     * <p>The initial state of the product.</p>
     */
    public static final Resource PreparationTypeCode_UNPREPARED = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-UNPREPARED");

    /**
     * <p>Unknown, not applicable</p>
     */
    public static final Resource PreparationTypeCode_UNSPECIFIED = m.createResource("https://ref.gs1.org/voc/PreparationTypeCode-UNSPECIFIED");

    /**
     * <p>Dropping pH of food</p>
     */
    public static final Resource PreservationTechniqueCode_ACIDIFICATION = m.createResource("https://ref.gs1.org/voc/PreservationTechniqueCode-ACIDIFICATION");

    /**
     * <p>Treatment of food by adding alcohol in order to preserve the product</p>
     */
    public static final Resource PreservationTechniqueCode_ALCOHOL_CURING = m.createResource("https://ref.gs1.org/voc/PreservationTechniqueCode-ALCOHOL_CURING");

    /**
     * <p>Raw Milk (without heat treatment)</p>
     */
    public static final Resource PreservationTechniqueCode_ATTESTED_MILK = m.createResource("https://ref.gs1.org/voc/PreservationTechniqueCode-ATTESTED_MILK");

    /**
     * <p>Cooking</p>
     */
    public static final Resource PreservationTechniqueCode_BOILING = m.createResource("https://ref.gs1.org/voc/PreservationTechniqueCode-BOILING");

    /**
     * <p>Water saturating or strongly impregnating with salt</p>
     */
    public static final Resource PreservationTechniqueCode_BRINING = m.createResource("https://ref.gs1.org/voc/PreservationTechniqueCode-BRINING");

    /**
     * <p>Preserved in a sealed airtight container, usually made of tin-coated iron</p>
     */
    public static final Resource PreservationTechniqueCode_CANNING = m.createResource("https://ref.gs1.org/voc/PreservationTechniqueCode-CANNING");

    /**
     * <p>To smoke the food at between 70 degrees to 90 degrees F.</p>
     */
    public static final Resource PreservationTechniqueCode_COLD_SMOKE_CURING = m.createResource("https://ref.gs1.org/voc/PreservationTechniqueCode-COLD_SMOKE_CURING");

    /**
     * <p>Keep from harm or damage</p>
     */
    public static final Resource PreservationTechniqueCode_CONSERVE = m.createResource("https://ref.gs1.org/voc/PreservationTechniqueCode-CONSERVE");

    /**
     * <p>To remove water from food</p>
     */
    public static final Resource PreservationTechniqueCode_DEHYDRATION = m.createResource("https://ref.gs1.org/voc/PreservationTechniqueCode-DEHYDRATION");

    /**
     * <p>Making with moisture having evaporated, drained away</p>
     */
    public static final Resource PreservationTechniqueCode_DRYING = m.createResource("https://ref.gs1.org/voc/PreservationTechniqueCode-DRYING");

    /**
     * <p>Any of a group of chemical reactions induced by living or nonliving ferments
     * that split complex organic compounds into relatively simple substance</p>
     */
    public static final Resource PreservationTechniqueCode_FERMENTATION = m.createResource("https://ref.gs1.org/voc/PreservationTechniqueCode-FERMENTATION");

    /**
     * <p>Preserving food by freezing and then drying in a vacuum</p>
     */
    public static final Resource PreservationTechniqueCode_FREEZE_DRYING = m.createResource("https://ref.gs1.org/voc/PreservationTechniqueCode-FREEZE_DRYING");

    /**
     * <p>Turning into ice or another solid by cold</p>
     */
    public static final Resource PreservationTechniqueCode_FREEZING = m.createResource("https://ref.gs1.org/voc/PreservationTechniqueCode-FREEZING");

    /**
     * <p>Legally also pasteurisation, MHD for longer (about 2 to 3 weeks), ESL-milk</p>
     */
    public static final Resource PreservationTechniqueCode_HIGH_TEMPERATURE_TREATED_MILK = m.createResource("https://ref.gs1.org/voc/PreservationTechniqueCode-HIGH_TEMPERATURE_TREATED_MILK");

    /**
     * <p>Hot-smoking partially or totally cooks the food by treating it at temperatures
     * ranging from 100 degrees to 190 degrees F.</p>
     */
    public static final Resource PreservationTechniqueCode_HOT_SMOKE_CURING = m.createResource("https://ref.gs1.org/voc/PreservationTechniqueCode-HOT_SMOKE_CURING");

    /**
     * <p>To convert into an ion or ions</p>
     */
    public static final Resource PreservationTechniqueCode_IONISATION = m.createResource("https://ref.gs1.org/voc/PreservationTechniqueCode-IONISATION");

    /**
     * <p>Food irradiation is the process of exposing food to ionising radiation in
     * order to disinfest, sterilise, or preserve food.</p>
     */
    public static final Resource PreservationTechniqueCode_IRRADIATION = m.createResource("https://ref.gs1.org/voc/PreservationTechniqueCode-IRRADIATION");

    /**
     * <p>Partially sterilisation by heating</p>
     */
    public static final Resource PreservationTechniqueCode_PASTEURISATION = m.createResource("https://ref.gs1.org/voc/PreservationTechniqueCode-PASTEURISATION");

    /**
     * <p>Freezing (food) rapidly so as to preserve its qualities</p>
     */
    public static final Resource PreservationTechniqueCode_QUICK_FREEZING = m.createResource("https://ref.gs1.org/voc/PreservationTechniqueCode-QUICK_FREEZING");

    /**
     * <p>Preserving by using a salt brine</p>
     */
    public static final Resource PreservationTechniqueCode_SALT_CURING = m.createResource("https://ref.gs1.org/voc/PreservationTechniqueCode-SALT_CURING");

    /**
     * <p>Low temperature long time cooking under vacuum</p>
     */
    public static final Resource PreservationTechniqueCode_SOUS_VIDE = m.createResource("https://ref.gs1.org/voc/PreservationTechniqueCode-SOUS_VIDE");

    /**
     * <p>A process that effectively kills or eliminates transmissibleagents (such as
     * fungi, bacteria, viruses, spore forms, etc.).</p>
     */
    public static final Resource PreservationTechniqueCode_STERILISATION = m.createResource("https://ref.gs1.org/voc/PreservationTechniqueCode-STERILISATION");

    /**
     * <p>Treatment of food by adding sugar in order to preserve the product</p>
     */
    public static final Resource PreservationTechniqueCode_SUGAR_CURING = m.createResource("https://ref.gs1.org/voc/PreservationTechniqueCode-SUGAR_CURING");

    /**
     * <p>Ultra heat treated (especially for milk)</p>
     */
    public static final Resource PreservationTechniqueCode_ULTRA_HIGH_TEMPERATURE = m.createResource("https://ref.gs1.org/voc/PreservationTechniqueCode-ULTRA_HIGH_TEMPERATURE");

    /**
     * <p>Packed with a gas with protective proprieties</p>
     */
    public static final Resource PreservationTechniqueCode_UNDER_MODIFIED_ATMOSPHERE = m.createResource("https://ref.gs1.org/voc/PreservationTechniqueCode-UNDER_MODIFIED_ATMOSPHERE");

    /**
     * <p>Sealed after the partial removal of air</p>
     */
    public static final Resource PreservationTechniqueCode_VACUUM_PACKED = m.createResource("https://ref.gs1.org/voc/PreservationTechniqueCode-VACUUM_PACKED");

    /**
     * <p>The perpendicular force per unit area acting on a material and tending to
     * change its dimensions. SI Units: pascal, newton per square metre</p>
     */
    public static final Resource Pressure = m.createResource("https://ref.gs1.org/voc/Pressure");

    /**
     * <p>Weight or volume of food product after it has been prepared.</p>
     */
    public static final Resource ProductYieldTypeCode_AFTER_COOKING = m.createResource("https://ref.gs1.org/voc/ProductYieldTypeCode-AFTER_COOKING");

    /**
     * <p>Volume of food product after a fluid has been added.</p>
     */
    public static final Resource ProductYieldTypeCode_AFTER_DILUTION = m.createResource("https://ref.gs1.org/voc/ProductYieldTypeCode-AFTER_DILUTION");

    /**
     * <p>Weight of food product after the fluid in which the food product was preserved
     * has been removed.</p>
     */
    public static final Resource ProductYieldTypeCode_DRAINED_WEIGHT = m.createResource("https://ref.gs1.org/voc/ProductYieldTypeCode-DRAINED_WEIGHT");

    /**
     * <p>Product yield type is unknown or irrelevant</p>
     */
    public static final Resource ProductYieldTypeCode_UNSPECIFIED = m.createResource("https://ref.gs1.org/voc/ProductYieldTypeCode-UNSPECIFIED");

    /**
     * <p>The total power emitted, received or passing in the form of electromagnetic
     * radiation; a measure of electromagnetic energy per unit time. SI Units: watt</p>
     */
    public static final Resource RadiantFlux = m.createResource("https://ref.gs1.org/voc/RadiantFlux");

    /**
     * <p>The radiant flux per unit solid angle emitted by a point source. SI Units:
     * watt / steradian</p>
     */
    public static final Resource RadiantIntensity = m.createResource("https://ref.gs1.org/voc/RadiantIntensity");

    /**
     * <p>The rate of spontaneous disintegration or decay of certain natural heavy elements,
     * accompanied by alpha-rays, beta-rays or gamma-rays. SI Units: becquerel</p>
     */
    public static final Resource Radioactivity = m.createResource("https://ref.gs1.org/voc/Radioactivity");

    /**
     * <p>Allows x-axis interactive rotation of product via website.</p>
     */
    public static final Resource ReferencedFileTypeCode_360_DEGREE_IMAGE = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-360_DEGREE_IMAGE");

    /**
     * <p>Trade Item image representing the image the manufacturer is supplying to the
     * consumer to invoke a connection to the item by setting a 'mood' or feeling
     * for the item and its use.</p>
     */
    public static final Resource ReferencedFileTypeCode_AMBIENCE_MOOD_IMAGE = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-AMBIENCE_MOOD_IMAGE");

    /**
     * <p>Trade Item image representing the image the manufacturer is supplying to the
     * consumer to depict how the product itself is used.</p>
     */
    public static final Resource ReferencedFileTypeCode_APPLICATION_IMAGE = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-APPLICATION_IMAGE");

    /**
     * <p>Link to a file the explains how to assemble (put together) the trade item.</p>
     */
    public static final Resource ReferencedFileTypeCode_ASSEMBLY_INSTRUCTIONS = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-ASSEMBLY_INSTRUCTIONS");

    /**
     * <p>Link to a file containing an audio clip which is relevant to the product.
     * Examples are commercials, or instructional/ how to use audio files.</p>
     */
    public static final Resource ReferencedFileTypeCode_AUDIO = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-AUDIO");

    /**
     * <p>The award certificate is a written document created by the Award Committee
     * that describes the terms and conditions of the Award. Example: http://www.cronierwines.com/awards-in-2016/</p>
     */
    public static final Resource ReferencedFileTypeCode_AWARD_CERTIFICATE = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-AWARD_CERTIFICATE");

    /**
     * <p>Link to a file containing a visual representation of the barcode which is
     * on the product or its packaging.</p>
     */
    public static final Resource ReferencedFileTypeCode_BARCODE = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-BARCODE");

    /**
     * <p>Document which contains a special certification by a third party (e.g. International
     * Food Standard [IFS], QS-Approval Mark for meat product, sausage, fruit, vegetables
     * and potatoes or bio audits).</p>
     */
    public static final Resource ReferencedFileTypeCode_CERTIFICATION = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-CERTIFICATION");

    /**
     * <p>Link to a file containing the chemical ingredient information sent to the
     * supplier from a third party as a result of the assessment.</p>
     */
    public static final Resource ReferencedFileTypeCode_CHEMICAL_ASSESSMENT_SUMMARY = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-CHEMICAL_ASSESSMENT_SUMMARY");

    /**
     * <p>Link to the file containing a report detailing the risks arising from the
     * manufacture and/or use of a substance and to ensure that they are adequately
     * controlled.</p>
     */
    public static final Resource ReferencedFileTypeCode_CHEMICAL_SAFETY_REPORT = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-CHEMICAL_SAFETY_REPORT");

    /**
     * <p>Link to a file containing the Child Nutrition Label as formatted according
     * to regulations and rules of an appropriate regulatory body for the target
     * market.</p>
     */
    public static final Resource ReferencedFileTypeCode_CHILD_NUTRITION_LABEL = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-CHILD_NUTRITION_LABEL");

    /**
     * <p>The cleaning, disinfection and/or sterilisation instructions that apply to
     * the product. These may be in accordance with EN-ISO 17664.</p>
     */
    public static final Resource ReferencedFileTypeCode_CLEANING_DISINFECTION_STERILISATION_INSTRUCTIONS = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-CLEANING_DISINFECTION_STERILISATION_INSTRUCTIONS");

    /**
     * <p>A clinician focused product information document that is written by the pharmaceutical
     * company responsible for the medicine. This document is intended to assist
     * doctors, pharmacists and other health professionals in prescribing and dispensing
     * medicines. In addition, this information can be used by health professionals
     * in their consultations with patients, so that the patient can be better informed
     * about their medicines.</p>
     */
    public static final Resource ReferencedFileTypeCode_CLINICIAN_MEDICINE_INFORMATION = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-CLINICIAN_MEDICINE_INFORMATION");

    /**
     * <p>Link to a website, file, or image containing the manufacturer's recommendations
     * for how the consumer or end user should store and handle the product.</p>
     */
    public static final Resource ReferencedFileTypeCode_CONSUMER_HANDLING_AND_STORAGE = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-CONSUMER_HANDLING_AND_STORAGE");

    /**
     * <p>Trade Item image representing the image the manufacturer is supplying to the
     * consumer to depict the content or texture of an item. The image should be
     * designed in such a way that the texture can be experienced by the consumer
     * similar to stationary retail, e.g. creme, lipstick.</p>
     */
    public static final Resource ReferencedFileTypeCode_CONTENT_TEXTURE_IMAGE = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-CONTENT_TEXTURE_IMAGE");

    /**
     * <p>A picture of a trade item with a cut away vertical plane removed (e.g. Cross-section
     * of a Tire revealing steel belts and tire tread detail).</p>
     */
    public static final Resource ReferencedFileTypeCode_CROSSSECTION_VIEW = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-CROSSSECTION_VIEW");

    /**
     * <p>A Declaration of Conformity is a document in which the manufacturer states
     * that the product satisfies the essential requirements of the applicable legislation(s),
     * e.g. for toys, medical devices or electrical equipment. By drawing up and
     * signing the EU Declaration of Conformity, the manufacturer assumes responsibility
     * for the compliance of the product. For more information please see https://eur-lex.europa.eu/legal-content/EN/TXT/PDF/?uri=CELEX:32019R1020&amp;from=DE</p>
     */
    public static final Resource ReferencedFileTypeCode_DECLARATION_OF_CONFORMITY = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-DECLARATION_OF_CONFORMITY");

    /**
     * <p>Link to a website or file containing a diet certificate granted to the product</p>
     */
    public static final Resource ReferencedFileTypeCode_DIET_CERTIFICATE = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-DIET_CERTIFICATE");

    /**
     * <p>Link to a website, file or instruction movie how to dispose a product properly
     * or how to clean up a broken product in case the product contains materials
     * like mercury.</p>
     */
    public static final Resource ReferencedFileTypeCode_DISPOSAL_INSTRUCTIONS = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-DISPOSAL_INSTRUCTIONS");

    /**
     * <p>Link to a document or text file containing product information. Examples of
     * this type could be an instruction manual, assembly guide, or warranty document.</p>
     */
    public static final Resource ReferencedFileTypeCode_DOCUMENT = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-DOCUMENT");

    /**
     * <p>Link to a file containing the product's Declaration of Performance Sheet (DOP).
     * This file can be either an image or a document.</p>
     */
    public static final Resource ReferencedFileTypeCode_DOP_SHEET = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-DOP_SHEET");

    /**
     * <p>The file link is to a drug fact panel of the trade item. A drug fact label
     * usually contains such items as active ingredients, uses, warnings, purpose,
     * directions, etc.</p>
     */
    public static final Resource ReferencedFileTypeCode_DRUG_FACT_LABEL = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-DRUG_FACT_LABEL");

    /**
     * <p>Link to a file containing the details of a product with its environmental
     * impact and performance. E.g. Beelong.ch Eco-Score Fact Sheet.</p>
     */
    public static final Resource ReferencedFileTypeCode_ECOLOGICAL_FACT_SHEET = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-ECOLOGICAL_FACT_SHEET");

    /**
     * <p>Link to the energy label for a trade item. On 19 May 2010, the EU adopted
     * the Directive 2010/30/EU on energy labels. Energy labels help consumers choosing
     * products which save energy and thus money. They also provide incentives for
     * the industry to develop and invest in energy efficient product design. They
     * are found on a selection of white goods and other products and are designed
     * to help customers see how energy efficient a model is before they buy.</p>
     */
    public static final Resource ReferencedFileTypeCode_ENERGY_LABEL = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-ENERGY_LABEL");

    /**
     * <p>The certificate of conformity for suitability for food contact is a document
     * issued by the manufacturer or the person placing the product on the European
     * market. It certifies that the product sold complies with the EC Regulation
     * 1935/2004. Thus, it is proven to be safe to get in contact with food.</p>
     */
    public static final Resource ReferencedFileTypeCode_FOOD_CONTACT_CONFORMITY_CERTIFICATE = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-FOOD_CONTACT_CONFORMITY_CERTIFICATE");

    public static final Resource ReferencedFileTypeCode_GROUP_CHARACTERISTIC_SHEET = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-GROUP_CHARACTERISTIC_SHEET");

    /**
     * <p>Link to a file where to locate the 'out of network data' additional data concerning
     * the control of substances can be found.</p>
     */
    public static final Resource ReferencedFileTypeCode_HAZARDOUS_SUBSTANCES_DATA = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-HAZARDOUS_SUBSTANCES_DATA");

    /**
     * <p>Link to a file containing the (electronic) Instructions For Use (IFU or eIFU).</p>
     */
    public static final Resource ReferencedFileTypeCode_IFU = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-IFU");

    /**
     * <p>Indicates that the instructions for cleaning/disinfecting/sterilisation are
     * included in the IFU (Instructions For Use).</p>
     */
    public static final Resource ReferencedFileTypeCode_IFU_INCLUDING_CLEANING_DISINFECTION_STERILISATION_INSTRUCTIONS = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-IFU_INCLUDING_CLEANING_DISINFECTION_STERILISATION_INSTRUCTIONS");

    /**
     * <p>The Ingredients label image is a list of ingredients printed on the packaging.
     * It may be separated by language in multiple areas on the product.</p>
     */
    public static final Resource ReferencedFileTypeCode_INGREDIENTS_LABEL = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-INGREDIENTS_LABEL");

    /**
     * <p>The picture of the inside of a trade item mainly used for non food products
     * (e.g., The inside of a refrigerator or the inside of a suitcase.</p>
     */
    public static final Resource ReferencedFileTypeCode_INTERNAL_VIEW = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-INTERNAL_VIEW");

    /**
     * <p>Link to a file containing a visual representation of the product label containing
     * information related to the light characteristics of the product. The lighting
     * facts label makes it easy to compare bulb characteristics such as brightness,
     * colour, life, and estimated operating cost for the year.</p>
     */
    public static final Resource ReferencedFileTypeCode_LIGHTING_FACT_LABEL = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-LIGHTING_FACT_LABEL");

    /**
     * <p>Link to a file containing the Manufacturer or Brand Logo(s) associated with
     * the product.</p>
     */
    public static final Resource ReferencedFileTypeCode_LOGO = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-LOGO");

    /**
     * <p>Link to a file with product information associated with selling a product
     * or service.</p>
     */
    public static final Resource ReferencedFileTypeCode_MARKETING_INFORMATION = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-MARKETING_INFORMATION");

    /**
     * <p>URL to website, images that the potential material, swatches, finishes the
     * trade item might be available in.</p>
     */
    public static final Resource ReferencedFileTypeCode_MATERIAL_SAMPLES = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-MATERIAL_SAMPLES");

    /**
     * <p>Trade Item image that represents the image the manufacturer supplies to the
     * consumer for mobile device applications. This would be a pack shot or image
     * of the trade item that may be optimised for digital mobile display or added
     * elements to help consumer recoginise the product. This should not be used
     * as the Mobile Ready Hero Image. Some regulations require an actual image of
     * the product and do not allow Mobile Ready Hero Images.</p>
     */
    public static final Resource ReferencedFileTypeCode_MOBILE_DEVICE_IMAGE = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-MOBILE_DEVICE_IMAGE");

    /**
     * <p>A Mobile Ready Hero Image (MRHI) is a representation of a real world product
     * that may differ from a standard pack shot, but that maintains the majority
     * of the physical pack's key elements of design, shape and colour, and is therefore
     * recognisable on a digital shelf. In addition the image should contain elements
     * of The 4 Ws: Who is the brand, What it is, Which variety it is and how much.
     * The Mobile Ready Hero Image (MRHI) is specified in the GS1 Mobile Ready Hero
     * Image Guideline https://www.gs1.org/standards/Mobile-Ready-Hero-Image</p>
     */
    public static final Resource ReferencedFileTypeCode_MOBILE_READY_HERO_IMAGE = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-MOBILE_READY_HERO_IMAGE");

    /**
     * <p>A Montage is the physical over layering of distinct images to create a final
     * digital image. This process allows for a composite to be created with the
     * future possibility of reconstruction without having to return to studio for
     * correction, should an element be added or removed.</p>
     */
    public static final Resource ReferencedFileTypeCode_MONTAGE_IMAGE = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-MONTAGE_IMAGE");

    /**
     * <p>Link to a file containing a visual representation of the product label containing
     * the nutritional information.</p>
     */
    public static final Resource ReferencedFileTypeCode_NUTRITION_FACT_LABEL = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-NUTRITION_FACT_LABEL");

    /**
     * <p>Link to a file containing a visual representation of the product label containing
     * the nutritional information with the inclusion of the ingredient statement.</p>
     */
    public static final Resource ReferencedFileTypeCode_NUTRITION_FACT_LABEL_WITH_INGREDIENTS = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-NUTRITION_FACT_LABEL_WITH_INGREDIENTS");

    /**
     * <p>An Optimised Hero Image type is to support retail, consumers, distributors
     * and foodservice operators in completing their online sites. These images will
     * assist consumers to identify specific information about the products they
     * are purchasing. The image is a representation of a real world product, built
     * specifically for use on larger screens that may differ from a standard pack
     * shot, but that maintains the majority of the physical pack's key elements
     * of design, shape and colour, and is therefore recognisable on a digital shelf.</p>
     */
    public static final Resource ReferencedFileTypeCode_OPTIMISED_HERO_IMAGE = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-OPTIMISED_HERO_IMAGE");

    /**
     * <p>An Optimized Pack Image type is to support retail, consumers, distributors
     * and foodservice operators in completing their online sites. The image is a
     * representation of a real-world product, built specifically for use on larger
     * screens that may differ from a standard pack shot, but that maintains the
     * majority of the physical packâ€™s key elements of design, shape and colour,
     * and is therefore recognisable on a digital shelf.</p>
     */
    public static final Resource ReferencedFileTypeCode_OPTIMIZED_PACK_IMAGE = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-OPTIMIZED_PACK_IMAGE");

    /**
     * <p>Link to a website or file containing an organic certificate granted to the
     * product.</p>
     */
    public static final Resource ReferencedFileTypeCode_ORGANIC_CERTIFICATE = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-ORGANIC_CERTIFICATE");

    /**
     * <p>Link to a file containing product information of an unspecified type.</p>
     */
    public static final Resource ReferencedFileTypeCode_OTHER_EXTERNAL_INFORMATION = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-OTHER_EXTERNAL_INFORMATION");

    /**
     * <p>Link to an image of an item out of its packaging and, if necessary, assembled
     * ready for use by the end user. This type of file is subject the current version
     * of the GDSN Product Image Specification Standard.</p>
     */
    public static final Resource ReferencedFileTypeCode_OUT_OF_PACKAGE_IMAGE = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-OUT_OF_PACKAGE_IMAGE");

    /**
     * <p>Design files for packaging artwork for example Adobe source files.</p>
     */
    public static final Resource ReferencedFileTypeCode_PACKAGING_ARTWORK = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-PACKAGING_ARTWORK");

    /**
     * <p>A leaflet or brochure containing important information to patients/consumers
     * about the product to facilitate discussion and assist with the decision-making
     * process. Example: A leaflet on a medical device like a hip joint. Or a consumer/patient-focused
     * leaflet that contains information on the safe and effective use of a medicines.
     * Often known in some markets as Consumer Medicines Information sheet (CMI),
     * Product Information Leaflet (PiL/ePIL).</p>
     */
    public static final Resource ReferencedFileTypeCode_PATIENT_INFORMATION_LEAFLET = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-PATIENT_INFORMATION_LEAFLET");

    /**
     * <p>Link to a file containing a visual representation of the product label containing
     * the feeding instructions for the petfood product.</p>
     */
    public static final Resource ReferencedFileTypeCode_PETFOOD_FEEDING_INSTRUCTIONS = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-PETFOOD_FEEDING_INSTRUCTIONS");

    /**
     * <p>Link to a file illustrating how and where retail products should be displayed.</p>
     */
    public static final Resource ReferencedFileTypeCode_PLANOGRAM = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-PLANOGRAM");

    /**
     * <p>Link to a file containing a visual representation of the product label containing
     * the preparation instructions.</p>
     */
    public static final Resource ReferencedFileTypeCode_PREPARATION_INSTRUCTIONS = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-PREPARATION_INSTRUCTIONS");

    /**
     * <p>Link to a file containing the Product Formulation Statement, in lieu of a
     * Child Nutrition Label, as formatted according to regulations and rules of
     * an appropriate regulatory body for the target market.</p>
     */
    public static final Resource ReferencedFileTypeCode_PRODUCT_FORMULATION_STATEMENT = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-PRODUCT_FORMULATION_STATEMENT");

    /**
     * <p>Link to a file containing a visual representation of the product.</p>
     */
    public static final Resource ReferencedFileTypeCode_PRODUCT_IMAGE = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-PRODUCT_IMAGE");

    /**
     * <p>An image of a product that has the supporting shape/form (for example a model,
     * mannequin, hanger) removed to give the product a 3-D look.</p>
     */
    public static final Resource ReferencedFileTypeCode_PRODUCT_IMAGE_FORMED = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-PRODUCT_IMAGE_FORMED");

    /**
     * <p>Link to a file containing a visual representation of the product label.</p>
     */
    public static final Resource ReferencedFileTypeCode_PRODUCT_LABEL_IMAGE = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-PRODUCT_LABEL_IMAGE");

    /**
     * <p>Link to a website containing product specific information. Examples of this
     * could be a link to a website dedicated to the product or a link to the area
     * within the manufacturer or brand owner website that contains the product information</p>
     */
    public static final Resource ReferencedFileTypeCode_PRODUCT_WEBSITE = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-PRODUCT_WEBSITE");

    /**
     * <p>Link to a QR code URL/URI.</p>
     */
    public static final Resource ReferencedFileTypeCode_QR_CODE = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-QR_CODE");

    /**
     * <p>Document which detailed information about the quantity of laboratory/analytical
     * tests and the evaluated parameters.</p>
     */
    public static final Resource ReferencedFileTypeCode_QUALITY_CONTROL_PLAN = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-QUALITY_CONTROL_PLAN");

    /**
     * <p>Link to a website containing recipes associated with the product</p>
     */
    public static final Resource ReferencedFileTypeCode_RECIPE_WEBSITE = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-RECIPE_WEBSITE");

    /**
     * <p>Link to a file containing the certificate for recyclability granted to the
     * packaging of the item.</p>
     */
    public static final Resource ReferencedFileTypeCode_RECYCLABILITY_ASSESSMENT_CERTIFICATE = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-RECYCLABILITY_ASSESSMENT_CERTIFICATE");

    /**
     * <p>Inspection report of the inspections. For example foodstuffs, pharmaceuticals
     * and other types of products that are regulated.</p>
     */
    public static final Resource ReferencedFileTypeCode_REGULATORY_INSPECTION_AUDIT = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-REGULATORY_INSPECTION_AUDIT");

    /**
     * <p>Document which describes how the supplier assured the quality control of the
     * end products or during the production process. The process can be a supplier
     * internal control system, a simple kind of risk analysis or systematic preventive
     * approach according Hazard Analysis and Critical Control Points (HACCP).</p>
     */
    public static final Resource ReferencedFileTypeCode_RISK_ANALYSIS_DOCUMENT = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-RISK_ANALYSIS_DOCUMENT");

    /**
     * <p>Link to a file containing the product's Safety Data Sheet (SDS). This file
     * can be either an image or a document</p>
     */
    public static final Resource ReferencedFileTypeCode_SAFETY_DATA_SHEET = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-SAFETY_DATA_SHEET");

    /**
     * <p>A link to a summary sheet document that is available to workers to understand
     * how to deal with chemicals in an emergency situation.</p>
     */
    public static final Resource ReferencedFileTypeCode_SAFETY_SUMMARY_SHEET = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-SAFETY_SUMMARY_SHEET");

    /**
     * <p>Document is a sample shipping order. A sample shipping order isn't needed
     * for every item (GTIN), but a shipping order can differ from GTIN to GTIN.
     * E.g. in case an item is an organic product the sample shipping order needs
     * to contain the organic product origin number according article 31 of the implementing
     * regulations EG Nr. 889/2008. For non-organic items this information isn't
     * needed.</p>
     */
    public static final Resource ReferencedFileTypeCode_SAMPLE_SHIPPING_ORDER = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-SAMPLE_SHIPPING_ORDER");

    /**
     * <p>Retail, consumers, distributors and foodservice operators complete their online
     * transactions using their smart devices. These images may be used to inform
     * a customer of benefits or nutritional claims of a product. This is a supplementary
     * image or graphic, generally used to support the Hero image.</p>
     */
    public static final Resource ReferencedFileTypeCode_SIDEKICK_IMAGE = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-SIDEKICK_IMAGE");

    /**
     * <p>Trade Item image representing the image the manufacturer is supplying to the
     * consumer to depict the social media associated to the item. This image is
     * being shared on the social media outlet.</p>
     */
    public static final Resource ReferencedFileTypeCode_SOCIAL_MEDIA_IMAGE = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-SOCIAL_MEDIA_IMAGE");

    /**
     * <p>Specific document required before any medicinal product or biocidal product
     * is authorized for marketing. Example European Commission</p>
     */
    public static final Resource ReferencedFileTypeCode_SUMMARY_OF_PRODUCT_CHARACTERISTICS = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-SUMMARY_OF_PRODUCT_CHARACTERISTICS");

    /**
     * <p>Link to a file containing a visual representation of the product label containing
     * information related to the supplement or nutrient product. The supplement
     * facts label provides about what active/nutritional ingredients are used in
     * the formula along with dosage recommendations for dietary supplements.</p>
     */
    public static final Resource ReferencedFileTypeCode_SUPPLEMENT_FACT_LABEL = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-SUPPLEMENT_FACT_LABEL");

    /**
     * <p>The product specification sheet, created by the manufacturer, summarises the
     * technical characteristics and other properties of the product, relating to
     * technological and commercial purposes. Example: https://dl.gedal.fr/docsgedal/FP/3255290252425.pdf</p>
     */
    public static final Resource ReferencedFileTypeCode_TECHNICAL_DATA_SHEET = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-TECHNICAL_DATA_SHEET");

    /**
     * <p>A precise and detailed technical drawing of an object, as employed in industries
     * such as engineering, construction, architecture etc. https://en.wikipedia.org/wiki/Engineering_drawing
     * https://en.wikipedia.org/wiki/Technical_drawing</p>
     */
    public static final Resource ReferencedFileTypeCode_TECHNICAL_DRAWING = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-TECHNICAL_DRAWING");

    /**
     * <p>Document which contains microbiological and physico-chemical findings of the
     * product which are observed during product testing.</p>
     */
    public static final Resource ReferencedFileTypeCode_TESTING_METHODOLOGY_RESULTS = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-TESTING_METHODOLOGY_RESULTS");

    /**
     * <p>Identifies the reference to an external description of a Trade Item. The link
     * (e.g. URL) to the external description. will be in the appropriate attribute</p>
     */
    public static final Resource ReferencedFileTypeCode_TRADE_ITEM_DESCRIPTION = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-TRADE_ITEM_DESCRIPTION");

    /**
     * <p>Link to a website, file, or image containing the product's image with its
     * dimensions. This especially important for built-in products as ovens and fridges.
     * Ex : http://www.docstoc.com/docs/125126778/GSS-GEW-Food-Savers-Food-Storage-Containers.</p>
     */
    public static final Resource ReferencedFileTypeCode_TRADE_ITEM_IMAGE_WITH_DIMENSIONS = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-TRADE_ITEM_IMAGE_WITH_DIMENSIONS");

    /**
     * <p>Link to a file containing a video clip which is relevant to the product. Examples
     * are commercials, trailers, or instructional/ how to use video files.</p>
     */
    public static final Resource ReferencedFileTypeCode_VIDEO = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-VIDEO");

    /**
     * <p>Link to a file containing a visual representation of the product for the purpose
     * of visual verification. Usage may be to examine the trade item master data
     * against the product image. Note these images might not necessarily comply
     * with image standards and may be restricted for a visual verification usage.</p>
     */
    public static final Resource ReferencedFileTypeCode_VISUAL_VERIFICATION_IMAGE = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-VISUAL_VERIFICATION_IMAGE");

    /**
     * <p>Link to a file with information associated with any guarantee given by a company
     * stating that a product is reliable and free from known defects and that the
     * seller will, without charge, repair or replace defective parts within a given
     * time limit and under certain conditions.</p>
     */
    public static final Resource ReferencedFileTypeCode_WARRANTY_INFORMATION = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-WARRANTY_INFORMATION");

    /**
     * <p>Link to a website containing product or manufacturer information.</p>
     */
    public static final Resource ReferencedFileTypeCode_WEBSITE = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-WEBSITE");

    /**
     * <p>A picture of a portion of a trade item (e.g., the wheels of a suitcase or
     * the ingredients list of a food trade item).</p>
     */
    public static final Resource ReferencedFileTypeCode_ZOOM_VIEW = m.createResource("https://ref.gs1.org/voc/ReferencedFileTypeCode-ZOOM_VIEW");

    /**
     * <p>The ratio of the partial pressure of water vapour in an an air-water mixture
     * to the saturated vapour pressure of water at a prescribed temperature. Typically
     * expressed as a percentage.</p>
     */
    public static final Resource RelativeHumidity = m.createResource("https://ref.gs1.org/voc/RelativeHumidity");

    /**
     * <p>The ratio of the potential difference across an electrical component to the
     * current passing through it. It is a measure of the opposition to the flow
     * of electric charge. The real part of the impedance, characterised by the dissipation
     * of energy as opposed to its storage. SI Units: ohm</p>
     */
    public static final Resource Resistance = m.createResource("https://ref.gs1.org/voc/Resistance");

    /**
     * <p>A measure of how strongly a material resists the flow of electric current.
     * The electric field required to achieve unit current density flowing through
     * the material. SI Units: ohm metre</p>
     */
    public static final Resource Resistivity = m.createResource("https://ref.gs1.org/voc/Resistivity");

    /**
     * <p>All Year</p>
     */
    public static final Resource SeasonParameterCode_ALL_YEAR = m.createResource("https://ref.gs1.org/voc/SeasonParameterCode-ALL_YEAR");

    /**
     * <p>For products that are seasonal in nature and apply to the Autumn selling season
     * only</p>
     */
    public static final Resource SeasonParameterCode_AUTUMN = m.createResource("https://ref.gs1.org/voc/SeasonParameterCode-AUTUMN");

    /**
     * <p>For products that are seasonal in nature and apply to both the Autumn and
     * Winter selling seasons</p>
     */
    public static final Resource SeasonParameterCode_AUTUMN_WINTER = m.createResource("https://ref.gs1.org/voc/SeasonParameterCode-AUTUMN_WINTER");

    /**
     * <p>For products that are seasonal in nature and apply to the Spring selling season
     * only</p>
     */
    public static final Resource SeasonParameterCode_SPRING = m.createResource("https://ref.gs1.org/voc/SeasonParameterCode-SPRING");

    /**
     * <p>For products that are seasonal in nature and apply to both the Spring and
     * Summer selling seasons</p>
     */
    public static final Resource SeasonParameterCode_SPRING_SUMMER = m.createResource("https://ref.gs1.org/voc/SeasonParameterCode-SPRING_SUMMER");

    /**
     * <p>For products that are seasonal in nature and apply to the Summer selling season
     * only</p>
     */
    public static final Resource SeasonParameterCode_SUMMER = m.createResource("https://ref.gs1.org/voc/SeasonParameterCode-SUMMER");

    /**
     * <p>For products that are seasonal in nature and apply to the Winter selling season
     * only</p>
     */
    public static final Resource SeasonParameterCode_WINTER = m.createResource("https://ref.gs1.org/voc/SeasonParameterCode-WINTER");

    /**
     * <p>A holographic image formed using light diffraction and interference of light
     * waves, capable of representing a three-dimensional object or multiple images,
     * depending on the angle of observation.</p>
     */
    public static final Resource SecurityMarking_HOLOGRAM = m.createResource("https://ref.gs1.org/voc/SecurityMarking-HOLOGRAM");

    /**
     * <p>A hidden pattern that is too small to read easily without means of optical
     * magnification such as a microscope</p>
     */
    public static final Resource SecurityMarking_MICROPRINTING = m.createResource("https://ref.gs1.org/voc/SecurityMarking-MICROPRINTING");

    /**
     * <p>A hidden pattern or marking that is invisible when observed under normal visible
     * light but which fluoresces when observed using ultra-violet light</p>
     */
    public static final Resource SecurityMarking_UVINK = m.createResource("https://ref.gs1.org/voc/SecurityMarking-UVINK");

    /**
     * <p>A conventional watermark in which a pattern within a translucent sheet becomes
     * visible when observed via transmitted light (typically due to reduced opacity
     * of the pattern), whereas the pattern remains hidden when observed via light
     * reflected off the surface</p>
     */
    public static final Resource SecurityMarking_WATERMARK = m.createResource("https://ref.gs1.org/voc/SecurityMarking-WATERMARK");

    public static final Resource SharpnessOfCheeseCode_EXTRA_EXTRA_SHARP = m.createResource("https://ref.gs1.org/voc/SharpnessOfCheeseCode-EXTRA_EXTRA_SHARP");

    public static final Resource SharpnessOfCheeseCode_EXTRA_SHARP = m.createResource("https://ref.gs1.org/voc/SharpnessOfCheeseCode-EXTRA_SHARP");

    public static final Resource SharpnessOfCheeseCode_MILD = m.createResource("https://ref.gs1.org/voc/SharpnessOfCheeseCode-MILD");

    public static final Resource SharpnessOfCheeseCode_REGULAR = m.createResource("https://ref.gs1.org/voc/SharpnessOfCheeseCode-REGULAR");

    public static final Resource SharpnessOfCheeseCode_SHARP = m.createResource("https://ref.gs1.org/voc/SharpnessOfCheeseCode-SHARP");

    public static final Resource SharpnessOfCheeseCode_UNCLASSIFIED = m.createResource("https://ref.gs1.org/voc/SharpnessOfCheeseCode-UNCLASSIFIED");

    public static final Resource SizeGroupCode_BOYS = m.createResource("https://ref.gs1.org/voc/SizeGroupCode-BOYS");

    public static final Resource SizeGroupCode_GIRLS = m.createResource("https://ref.gs1.org/voc/SizeGroupCode-GIRLS");

    public static final Resource SizeGroupCode_INFANTS = m.createResource("https://ref.gs1.org/voc/SizeGroupCode-INFANTS");

    public static final Resource SizeGroupCode_JUNIORS = m.createResource("https://ref.gs1.org/voc/SizeGroupCode-JUNIORS");

    public static final Resource SizeGroupCode_MATERNITY = m.createResource("https://ref.gs1.org/voc/SizeGroupCode-MATERNITY");

    public static final Resource SizeGroupCode_MENS = m.createResource("https://ref.gs1.org/voc/SizeGroupCode-MENS");

    public static final Resource SizeGroupCode_MENS_TALL = m.createResource("https://ref.gs1.org/voc/SizeGroupCode-MENS_TALL");

    public static final Resource SizeGroupCode_MISSES = m.createResource("https://ref.gs1.org/voc/SizeGroupCode-MISSES");

    public static final Resource SizeGroupCode_PETITE = m.createResource("https://ref.gs1.org/voc/SizeGroupCode-PETITE");

    public static final Resource SizeGroupCode_WOMENS = m.createResource("https://ref.gs1.org/voc/SizeGroupCode-WOMENS");

    public static final Resource SizeGroupCode_WOMENS_TALL = m.createResource("https://ref.gs1.org/voc/SizeGroupCode-WOMENS_TALL");

    public static final Resource SizeSystemCode_AUSTRALIA = m.createResource("https://ref.gs1.org/voc/SizeSystemCode-AUSTRALIA");

    public static final Resource SizeSystemCode_CONTINENTAL = m.createResource("https://ref.gs1.org/voc/SizeSystemCode-CONTINENTAL");

    public static final Resource SizeSystemCode_EUROPE = m.createResource("https://ref.gs1.org/voc/SizeSystemCode-EUROPE");

    public static final Resource SizeSystemCode_JAPAN = m.createResource("https://ref.gs1.org/voc/SizeSystemCode-JAPAN");

    public static final Resource SizeSystemCode_MEXICO = m.createResource("https://ref.gs1.org/voc/SizeSystemCode-MEXICO");

    public static final Resource SizeSystemCode_UK = m.createResource("https://ref.gs1.org/voc/SizeSystemCode-UK");

    public static final Resource SizeSystemCode_US = m.createResource("https://ref.gs1.org/voc/SizeSystemCode-US");

    public static final Resource SizeTypeCode_BACK = m.createResource("https://ref.gs1.org/voc/SizeTypeCode-BACK");

    /**
     * <p>The measurement around the widest part of the chest/bust.</p>
     */
    public static final Resource SizeTypeCode_CHEST_BUST = m.createResource("https://ref.gs1.org/voc/SizeTypeCode-CHEST_BUST");

    public static final Resource SizeTypeCode_COLLAR = m.createResource("https://ref.gs1.org/voc/SizeTypeCode-COLLAR");

    public static final Resource SizeTypeCode_CUP = m.createResource("https://ref.gs1.org/voc/SizeTypeCode-CUP");

    /**
     * <p>The measurement around the fullest part of the hips.</p>
     */
    public static final Resource SizeTypeCode_HIPS = m.createResource("https://ref.gs1.org/voc/SizeTypeCode-HIPS");

    public static final Resource SizeTypeCode_INSEAM = m.createResource("https://ref.gs1.org/voc/SizeTypeCode-INSEAM");

    public static final Resource SizeTypeCode_LENGTH = m.createResource("https://ref.gs1.org/voc/SizeTypeCode-LENGTH");

    public static final Resource SizeTypeCode_ONE_DIMENSION = m.createResource("https://ref.gs1.org/voc/SizeTypeCode-ONE_DIMENSION");

    /**
     * <p>The measurement of the outside leg seam. This is the distance from the waist
     * to the bottom of the trousers.</p>
     */
    public static final Resource SizeTypeCode_OUTSIDE_LEG = m.createResource("https://ref.gs1.org/voc/SizeTypeCode-OUTSIDE_LEG");

    public static final Resource SizeTypeCode_SLEEVE = m.createResource("https://ref.gs1.org/voc/SizeTypeCode-SLEEVE");

    public static final Resource SizeTypeCode_WAIST = m.createResource("https://ref.gs1.org/voc/SizeTypeCode-WAIST");

    public static final Resource SizeTypeCode_WIDTH = m.createResource("https://ref.gs1.org/voc/SizeTypeCode-WIDTH");

    /**
     * <p>A three-dimensional equivalent to planar angle, indicating a measure of the
     * field of view subtended by an object when viewed from a specified point, the
     * apex. The solid angle is the surface area subtended at radius r from the apex
     * divided by the square of that radius r. SI Units: steradian etc.</p>
     */
    public static final Resource SolidAngle = m.createResource("https://ref.gs1.org/voc/SolidAngle");

    /**
     * <p>A crocodilian in the genus Alligator of the family Alligatoridae.</p>
     */
    public static final Resource SourceAnimalCode_ALLIGATOR = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-ALLIGATOR");

    /**
     * <p>A domesticated member of the horse family.</p>
     */
    public static final Resource SourceAnimalCode_ASS = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-ASS");

    /**
     * <p>Mammals of the family Ursidae.</p>
     */
    public static final Resource SourceAnimalCode_BEAR = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-BEAR");

    /**
     * <p>Cattle raised principally for meat production, other uses include leather
     * and products used in shampoo and cosmetics.</p>
     */
    public static final Resource SourceAnimalCode_BEEF_COW = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-BEEF_COW");

    /**
     * <p>A wild relative of the domestic pig.</p>
     */
    public static final Resource SourceAnimalCode_BOAR = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-BOAR");

    /**
     * <p>A large bovine animal, frequently used as livestock.</p>
     */
    public static final Resource SourceAnimalCode_BUFFALO = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-BUFFALO");

    /**
     * <p>A general term for a juvenile member of any species of domestic cattle which
     * is intentionally raised to be processed at a young age.</p>
     */
    public static final Resource SourceAnimalCode_CALF = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-CALF");

    /**
     * <p>Even-toed ungulates within the genus Camelus.</p>
     */
    public static final Resource SourceAnimalCode_CAMEL = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-CAMEL");

    /**
     * <p>A domesticated fowl.</p>
     */
    public static final Resource SourceAnimalCode_CHICKEN = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-CHICKEN");

    /**
     * <p>A male chicken.</p>
     */
    public static final Resource SourceAnimalCode_COCKEREL = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-COCKEREL");

    /**
     * <p>A domesticated member of the subfamily Bovinae.</p>
     */
    public static final Resource SourceAnimalCode_COW = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-COW");

    /**
     * <p>Any species belonging to the family Crocodylidae.</p>
     */
    public static final Resource SourceAnimalCode_CROCODILE = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-CROCODILE");

    /**
     * <p>Ruminant mammals forming the family Cervidae.</p>
     */
    public static final Resource SourceAnimalCode_DEER = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-DEER");

    /**
     * <p>A domesticated form of the Wolf, a member of the Canidae family of the order
     * Carnivora.</p>
     */
    public static final Resource SourceAnimalCode_DOG = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-DOG");

    /**
     * <p>Aquatic birds, mostly smaller than the swans and geese, and may be found in
     * both fresh water and sea water.</p>
     */
    public static final Resource SourceAnimalCode_DUCK = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-DUCK");

    /**
     * <p>A young duck.</p>
     */
    public static final Resource SourceAnimalCode_DUCKLING = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-DUCKLING");

    /**
     * <p>Fresh or sea water fish.</p>
     */
    public static final Resource SourceAnimalCode_FISH = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-FISH");

    /**
     * <p>Non-domesticated birds in general but usually refers to birds belonging to
     * one of two biological orders, namely the gamefowl or landfowl and the waterfowl.</p>
     */
    public static final Resource SourceAnimalCode_FOWL = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-FOWL");

    /**
     * <p>Amphibians in the order Anura.</p>
     */
    public static final Resource SourceAnimalCode_FROG = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-FROG");

    /**
     * <p>A member of the Bovidae family and is closely related to the sheep.</p>
     */
    public static final Resource SourceAnimalCode_GOAT = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-GOAT");

    /**
     * <p>A bird belonging to the family Anatidae</p>
     */
    public static final Resource SourceAnimalCode_GOOSE = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-GOOSE");

    /**
     * <p>A group of birds from the order Galliformes.</p>
     */
    public static final Resource SourceAnimalCode_GROUSE = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-GROUSE");

    /**
     * <p>A family of birds in the Galliformes order</p>
     */
    public static final Resource SourceAnimalCode_GUINEAFOWL = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-GUINEAFOWL");

    /**
     * <p>Leporidaes belonging to the genus Lepus.</p>
     */
    public static final Resource SourceAnimalCode_HARE = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-HARE");

    /**
     * <p>a hoofed (ungulate) mammal, a subspecies of one of seven extant species of
     * the family Equidae.</p>
     */
    public static final Resource SourceAnimalCode_HORSE = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-HORSE");

    /**
     * <p>Fresh or sea water invertebrate.</p>
     */
    public static final Resource SourceAnimalCode_INVERTEBRATE = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-INVERTEBRATE");

    /**
     * <p>A young domestic sheep.</p>
     */
    public static final Resource SourceAnimalCode_LAMB = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-LAMB");

    /**
     * <p>A member of the molluscan class Gastropoda that have coiled shells in the
     * adult stage and live on land.</p>
     */
    public static final Resource SourceAnimalCode_LAND_SNAIL = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-LAND_SNAIL");

    /**
     * <p>Also referred to Milk Cattle, this cow is bred to produce large quantities
     * of Milk, from which dairy products are made.</p>
     */
    public static final Resource SourceAnimalCode_MILK_COW = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-MILK_COW");

    /**
     * <p>The largest extant species in the deer family.</p>
     */
    public static final Resource SourceAnimalCode_MOOSE = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-MOOSE");

    /**
     * <p>Large flightless bird native to Africa.</p>
     */
    public static final Resource SourceAnimalCode_OSTRICH = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-OSTRICH");

    /**
     * <p>Other animal not specified on this list.</p>
     */
    public static final Resource SourceAnimalCode_OTHER = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-OTHER");

    /**
     * <p>Medium-sized birds, intermediate between the larger pheasants and the smaller
     * quails.</p>
     */
    public static final Resource SourceAnimalCode_PARTRIDGE = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-PARTRIDGE");

    /**
     * <p>A bird in the subfamily of Phasianidae in the order Galliformes.</p>
     */
    public static final Resource SourceAnimalCode_PHEASANT = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-PHEASANT");

    /**
     * <p>A bird in the family Columbidae.</p>
     */
    public static final Resource SourceAnimalCode_PIGEON = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-PIGEON");

    /**
     * <p>Meat from the domestic pig</p>
     */
    public static final Resource SourceAnimalCode_PORK = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-PORK");

    /**
     * <p>A young chicken, less than 28 days old at slaughter</p>
     */
    public static final Resource SourceAnimalCode_POUSSIN = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-POUSSIN");

    /**
     * <p>Several genus of mid-sized birds in the pheasant family.</p>
     */
    public static final Resource SourceAnimalCode_QUAIL = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-QUAIL");

    /**
     * <p>Small mammals in the family Leporidae of the order Lagomorpha</p>
     */
    public static final Resource SourceAnimalCode_RABBIT = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-RABBIT");

    /**
     * <p>Rats are various medium-sized, long-tailed rodents of the superfamily Muroidea.</p>
     */
    public static final Resource SourceAnimalCode_RAT = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-RAT");

    /**
     * <p>An Arctic and Subarctic-dwelling deer, widespread and numerous across the
     * Arctic and Subarctic.</p>
     */
    public static final Resource SourceAnimalCode_REINDEER = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-REINDEER");

    /**
     * <p>A deer species of Europe, Asia Minor, and Caspian coastal regions.</p>
     */
    public static final Resource SourceAnimalCode_ROE_DEER = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-ROE_DEER");

    /**
     * <p>Small ruminants, usually with a crimped hair called wool and often with horns
     * forming a lateral spiral.</p>
     */
    public static final Resource SourceAnimalCode_SHEEP = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-SHEEP");

    /**
     * <p>A fresh or sea water animal, such as a mollusk or crustacean, that has a shell
     * or shell-like exoskeleton.</p>
     */
    public static final Resource SourceAnimalCode_SHELLFISH = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-SHELLFISH");

    /**
     * <p>Elongate legless carnivorous reptiles of the suborder Serpentes.</p>
     */
    public static final Resource SourceAnimalCode_SNAKE = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-SNAKE");

    /**
     * <p>Any of nearly 20 wading bird species in three genera in the family Scolopacidae.</p>
     */
    public static final Resource SourceAnimalCode_SNIPE = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-SNIPE");

    /**
     * <p>Small passerine birds in the family Passeridae.</p>
     */
    public static final Resource SourceAnimalCode_SPARROW = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-SPARROW");

    /**
     * <p>Plump, soft-plumaged, small to medium-sized passerine birds.</p>
     */
    public static final Resource SourceAnimalCode_THRUSH = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-THRUSH");

    /**
     * <p>A large bird in the genus Meleagris.</p>
     */
    public static final Resource SourceAnimalCode_TURKEY = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-TURKEY");

    /**
     * <p>Reptiles characterised by a special bony or cartilaginous shell developed
     * from their ribs that acts as a shield.</p>
     */
    public static final Resource SourceAnimalCode_TURTLE = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-TURTLE");

    /**
     * <p>The woodcocks are a group of seven or eight very similar living species of
     * wading birds in the genus Scolopax.</p>
     */
    public static final Resource SourceAnimalCode_WOODCOCK = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-WOODCOCK");

    /**
     * <p>A long-haired bovine found throughout the Himalayan region of south Central
     * Asia, the Tibetan Plateau and as far north as Mongolia.</p>
     */
    public static final Resource SourceAnimalCode_YAK = m.createResource("https://ref.gs1.org/voc/SourceAnimalCode-YAK");

    /**
     * <p>The volume of a substance per unit mass. The reciprocal of density. SI Units:
     * cubic metres per kilogram</p>
     */
    public static final Resource SpecificVolume = m.createResource("https://ref.gs1.org/voc/SpecificVolume");

    /**
     * <p>The ratio of the linear distance travelled by a body to the time taken. Speed
     * is a scalar quantity. Velocity is a vector with magnitude and direction. SI
     * Units: metre per second</p>
     */
    public static final Resource Speed = m.createResource("https://ref.gs1.org/voc/Speed");

    public static final Resource SportingActivityTypeCode_AMERICAN_FOOTBALL = m.createResource("https://ref.gs1.org/voc/SportingActivityTypeCode-AMERICAN_FOOTBALL");

    public static final Resource SportingActivityTypeCode_ARCHERY = m.createResource("https://ref.gs1.org/voc/SportingActivityTypeCode-ARCHERY");

    public static final Resource SportingActivityTypeCode_BADMINTON = m.createResource("https://ref.gs1.org/voc/SportingActivityTypeCode-BADMINTON");

    public static final Resource SportingActivityTypeCode_BASEBALL = m.createResource("https://ref.gs1.org/voc/SportingActivityTypeCode-BASEBALL");

    public static final Resource SportingActivityTypeCode_BASKETBALL = m.createResource("https://ref.gs1.org/voc/SportingActivityTypeCode-BASKETBALL");

    public static final Resource SportingActivityTypeCode_BOXING = m.createResource("https://ref.gs1.org/voc/SportingActivityTypeCode-BOXING");

    public static final Resource SportingActivityTypeCode_CLIMBING = m.createResource("https://ref.gs1.org/voc/SportingActivityTypeCode-CLIMBING");

    public static final Resource SportingActivityTypeCode_CRICKET = m.createResource("https://ref.gs1.org/voc/SportingActivityTypeCode-CRICKET");

    public static final Resource SportingActivityTypeCode_CYCLING = m.createResource("https://ref.gs1.org/voc/SportingActivityTypeCode-CYCLING");

    public static final Resource SportingActivityTypeCode_DIVING = m.createResource("https://ref.gs1.org/voc/SportingActivityTypeCode-DIVING");

    public static final Resource SportingActivityTypeCode_EQUESTRIAN = m.createResource("https://ref.gs1.org/voc/SportingActivityTypeCode-EQUESTRIAN");

    public static final Resource SportingActivityTypeCode_FENCING = m.createResource("https://ref.gs1.org/voc/SportingActivityTypeCode-FENCING");

    public static final Resource SportingActivityTypeCode_FISHING = m.createResource("https://ref.gs1.org/voc/SportingActivityTypeCode-FISHING");

    public static final Resource SportingActivityTypeCode_FOOTBALL = m.createResource("https://ref.gs1.org/voc/SportingActivityTypeCode-FOOTBALL");

    public static final Resource SportingActivityTypeCode_GOLF = m.createResource("https://ref.gs1.org/voc/SportingActivityTypeCode-GOLF");

    public static final Resource SportingActivityTypeCode_GYMNASTICS = m.createResource("https://ref.gs1.org/voc/SportingActivityTypeCode-GYMNASTICS");

    public static final Resource SportingActivityTypeCode_HOCKEY = m.createResource("https://ref.gs1.org/voc/SportingActivityTypeCode-HOCKEY");

    public static final Resource SportingActivityTypeCode_ICE_HOCKEY = m.createResource("https://ref.gs1.org/voc/SportingActivityTypeCode-ICE_HOCKEY");

    public static final Resource SportingActivityTypeCode_ICE_SKATING = m.createResource("https://ref.gs1.org/voc/SportingActivityTypeCode-ICE_SKATING");

    public static final Resource SportingActivityTypeCode_MOTOR_CYCLING = m.createResource("https://ref.gs1.org/voc/SportingActivityTypeCode-MOTOR_CYCLING");

    public static final Resource SportingActivityTypeCode_RUGBY = m.createResource("https://ref.gs1.org/voc/SportingActivityTypeCode-RUGBY");

    public static final Resource SportingActivityTypeCode_RUNNING = m.createResource("https://ref.gs1.org/voc/SportingActivityTypeCode-RUNNING");

    public static final Resource SportingActivityTypeCode_SKIING = m.createResource("https://ref.gs1.org/voc/SportingActivityTypeCode-SKIING");

    public static final Resource SportingActivityTypeCode_SQUASH = m.createResource("https://ref.gs1.org/voc/SportingActivityTypeCode-SQUASH");

    public static final Resource SportingActivityTypeCode_SURFING = m.createResource("https://ref.gs1.org/voc/SportingActivityTypeCode-SURFING");

    public static final Resource SportingActivityTypeCode_SWIMMING = m.createResource("https://ref.gs1.org/voc/SportingActivityTypeCode-SWIMMING");

    public static final Resource SportingActivityTypeCode_TENNIS = m.createResource("https://ref.gs1.org/voc/SportingActivityTypeCode-TENNIS");

    public static final Resource SportingActivityTypeCode_UNCLASSIFIED = m.createResource("https://ref.gs1.org/voc/SportingActivityTypeCode-UNCLASSIFIED");

    public static final Resource SportingActivityTypeCode_UNIDENTIFIED = m.createResource("https://ref.gs1.org/voc/SportingActivityTypeCode-UNIDENTIFIED");

    /**
     * <p>Designation stating that an organisation/party or location is operating. Note
     * that this is independent of whether or not the GLN is active.</p>
     */
    public static final Resource StatusType_ACTIVE = m.createResource("https://ref.gs1.org/voc/StatusType-ACTIVE");

    /**
     * <p>Designation stating that an organisation/party or location is not operating.
     * Note that this is independent of whether or not the GLN is inactive.</p>
     */
    public static final Resource StatusType_INACTIVE = m.createResource("https://ref.gs1.org/voc/StatusType-INACTIVE");

    /**
     * <p>The mass per unit area distributed over a surface. SI Units: kilogram per
     * square metre</p>
     */
    public static final Resource SurfaceDensity = m.createResource("https://ref.gs1.org/voc/SurfaceDensity");

    /**
     * <p>The attractive force exerted upon the surface molecules of a liquid by the
     * molecules beneath that tends to draw the surface molecules into the bulk of
     * the liquid and makes the liquid assume the shape having the minimum surface
     * area. SI Units: newton per metre</p>
     */
    public static final Resource SurfaceTension = m.createResource("https://ref.gs1.org/voc/SurfaceTension");

    /**
     * <p>This term is used to describe those products that are labelled Brut (very
     * dry). Please refer to local regulations for allowable sugar content.</p>
     */
    public static final Resource SweetnessLevelOfAlcoholicBeverageCode_BRUT = m.createResource("https://ref.gs1.org/voc/SweetnessLevelOfAlcoholicBeverageCode-BRUT");

    /**
     * <p>This term is used to describe those products that are labelled Brut Nature.
     * Brut nature has no added sugar. Please refer to local regulations for allowable
     * sugar content.</p>
     */
    public static final Resource SweetnessLevelOfAlcoholicBeverageCode_BRUT_NATURE = m.createResource("https://ref.gs1.org/voc/SweetnessLevelOfAlcoholicBeverageCode-BRUT_NATURE");

    /**
     * <p>This term is used to describe those products that are labelled Dry. Also known
     * as Sec Please refer to local regulations for allowable sugar content.</p>
     */
    public static final Resource SweetnessLevelOfAlcoholicBeverageCode_DRY = m.createResource("https://ref.gs1.org/voc/SweetnessLevelOfAlcoholicBeverageCode-DRY");

    /**
     * <p>This term is used to describe those products that are labelled Extra Brut.
     * Please refer to local regulations for allowable sugar content.</p>
     */
    public static final Resource SweetnessLevelOfAlcoholicBeverageCode_EXTRA_BRUT = m.createResource("https://ref.gs1.org/voc/SweetnessLevelOfAlcoholicBeverageCode-EXTRA_BRUT");

    /**
     * <p>This term is used to describe those products that are labelled Extra Dry.
     * Please refer to local regulations for allowable sugar content.</p>
     */
    public static final Resource SweetnessLevelOfAlcoholicBeverageCode_EXTRA_DRY = m.createResource("https://ref.gs1.org/voc/SweetnessLevelOfAlcoholicBeverageCode-EXTRA_DRY");

    /**
     * <p>This term is used to describe those products that are labelled Medium or Medium
     * sweet. Please refer to local regulations for allowable sugar content.</p>
     */
    public static final Resource SweetnessLevelOfAlcoholicBeverageCode_MEDIUM = m.createResource("https://ref.gs1.org/voc/SweetnessLevelOfAlcoholicBeverageCode-MEDIUM");

    /**
     * <p>This term is used to describe those products that are labelled Medium Dry.
     * Also known as Demi-sec. Please refer to local regulations for allowable sugar
     * content.</p>
     */
    public static final Resource SweetnessLevelOfAlcoholicBeverageCode_MEDIUM_DRY = m.createResource("https://ref.gs1.org/voc/SweetnessLevelOfAlcoholicBeverageCode-MEDIUM_DRY");

    /**
     * <p>The sugar range that goes beyond the style officially declared as dry and
     * is below the semi-dry declaration. Please refer to local regulations for allowable
     * sugar content. Example: In Germany the term is used to describe wines that
     * are labelled 'Feinherb' (Off-dry). The term isnâ€™t part of the local regulation
     * but is allowed to be used as official code according to a specific court ruling.</p>
     */
    public static final Resource SweetnessLevelOfAlcoholicBeverageCode_OFF_DRY = m.createResource("https://ref.gs1.org/voc/SweetnessLevelOfAlcoholicBeverageCode-OFF_DRY");

    /**
     * <p>The value needed is not listed or is not defined within this listâ€™s individual
     * code values and definitions. Please send a work request into GS1 or your solution
     * provider requesting the code you are searching for.</p>
     */
    public static final Resource SweetnessLevelOfAlcoholicBeverageCode_OTHER = m.createResource("https://ref.gs1.org/voc/SweetnessLevelOfAlcoholicBeverageCode-OTHER");

    /**
     * <p>This term is used to describe those products that are labelled Sweet. Also
     * known as doux in some markets. Please refer to local regulations for allowable
     * sugar content.</p>
     */
    public static final Resource SweetnessLevelOfAlcoholicBeverageCode_SWEET = m.createResource("https://ref.gs1.org/voc/SweetnessLevelOfAlcoholicBeverageCode-SWEET");

    public static final Resource TargetConsumerGenderCode_FEMALE = m.createResource("https://ref.gs1.org/voc/TargetConsumerGenderCode-FEMALE");

    public static final Resource TargetConsumerGenderCode_MALE = m.createResource("https://ref.gs1.org/voc/TargetConsumerGenderCode-MALE");

    public static final Resource TargetConsumerGenderCode_UNISEX = m.createResource("https://ref.gs1.org/voc/TargetConsumerGenderCode-UNISEX");

    /**
     * <p>A measure of whether two systems are relatively hot or cold with respect to
     * one another; two systems brought into contact will eventually reach thermal
     * equilibrium and reach the same temperature as thermal energy (heat) flows
     * from the system with higher temperature to the system with lower temperature.
     * SI Units: kelvin</p>
     */
    public static final Resource Temperature = m.createResource("https://ref.gs1.org/voc/Temperature");

    /**
     * <p>A dimension that enables distinction between two otherwise identical events
     * that occur at the same point in space. The interval between such events is
     * the basis of time measurement. SI Units: second</p>
     */
    public static final Resource Time = m.createResource("https://ref.gs1.org/voc/Time");

    /**
     * <p>The product of a force and its perpendicular distance from a point about which
     * it causes rotation or torsion. SI Units: newton metre</p>
     */
    public static final Resource Torque = m.createResource("https://ref.gs1.org/voc/Torque");

    /**
     * <p>Offer avalilable only in stores.</p>
     */
    public static final Resource TradeChannelCode_INSTORE_ONLY = m.createResource("https://ref.gs1.org/voc/TradeChannelCode-INSTORE_ONLY");

    /**
     * <p>Offer avalilable both in stores and online.</p>
     */
    public static final Resource TradeChannelCode_OMNICHANNEL = m.createResource("https://ref.gs1.org/voc/TradeChannelCode-OMNICHANNEL");

    /**
     * <p>Offer avalilable online only.</p>
     */
    public static final Resource TradeChannelCode_ONLINE_ONLY = m.createResource("https://ref.gs1.org/voc/TradeChannelCode-ONLINE_ONLY");

    public static final Resource UpperTypeCode_CLOSED_TOE_CLOSED_BACK_OPEN_INSTEP = m.createResource("https://ref.gs1.org/voc/UpperTypeCode-CLOSED_TOE_CLOSED_BACK_OPEN_INSTEP");

    public static final Resource UpperTypeCode_CLOSED_TOE_OPEN_BACK = m.createResource("https://ref.gs1.org/voc/UpperTypeCode-CLOSED_TOE_OPEN_BACK");

    public static final Resource UpperTypeCode_CLOSED_TOE_STRAP_BACK = m.createResource("https://ref.gs1.org/voc/UpperTypeCode-CLOSED_TOE_STRAP_BACK");

    public static final Resource UpperTypeCode_FULLY_CLOSED = m.createResource("https://ref.gs1.org/voc/UpperTypeCode-FULLY_CLOSED");

    public static final Resource UpperTypeCode_OPEN_TOE_FULLY_CLOSED_BACK = m.createResource("https://ref.gs1.org/voc/UpperTypeCode-OPEN_TOE_FULLY_CLOSED_BACK");

    public static final Resource UpperTypeCode_OPEN_TOE_OPEN_BACK = m.createResource("https://ref.gs1.org/voc/UpperTypeCode-OPEN_TOE_OPEN_BACK");

    public static final Resource UpperTypeCode_OPEN_TOE_STRAP_BACK = m.createResource("https://ref.gs1.org/voc/UpperTypeCode-OPEN_TOE_STRAP_BACK");

    public static final Resource UpperTypeCode_UNCLASSIFIED = m.createResource("https://ref.gs1.org/voc/UpperTypeCode-UNCLASSIFIED");

    /**
     * <p>The value of an electromotive force or electrostatic potential difference,
     * expressed in volts. SI Units: volt</p>
     */
    public static final Resource Voltage = m.createResource("https://ref.gs1.org/voc/Voltage");

    /**
     * <p>The amount of three-dimensional space occupied by a body, measured in cubic
     * length units. SI Units: cubic metre</p>
     */
    public static final Resource Volume = m.createResource("https://ref.gs1.org/voc/Volume");

    /**
     * <p>The volume of fluid that passes per unit of time. SI Units: cubic metre per
     * second</p>
     */
    public static final Resource VolumeFlowRate = m.createResource("https://ref.gs1.org/voc/VolumeFlowRate");

    /**
     * <p>The dimensionless ratio of a volume of one substance to the volume of solid,
     * liquid or gas in which it is contained. Typical units: parts per million,
     * parts per billion, etc.</p>
     */
    public static final Resource VolumeFraction = m.createResource("https://ref.gs1.org/voc/VolumeFraction");

    /**
     * <p>The volume of fluid that passes per unit of time per unit area perpendicular
     * to the flow direction. SI Units: cubic metre per second per square metre</p>
     */
    public static final Resource VolumetricFlux = m.createResource("https://ref.gs1.org/voc/VolumetricFlux");

    /**
     * <p>The number of waves per unit length. SI Units: reciprocal metre</p>
     */
    public static final Resource Wavenumber = m.createResource("https://ref.gs1.org/voc/Wavenumber");

    /**
     * <p>A Data Type that corresponds to GS1 Application Identifiers defined in the
     * GS1 General Specifications</p>
     */
    public static final Resource AI = m.createResource("https://ref.gs1.org/voc/AI");

}
