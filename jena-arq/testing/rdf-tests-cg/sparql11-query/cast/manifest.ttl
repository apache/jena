@prefix rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix : <http://www.w3.org/2009/sparql/docs/tests/data-sparql11/cast/manifest#> .
@prefix rdfs:	<http://www.w3.org/2000/01/rdf-schema#> .
@prefix mf:     <http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#> .
@prefix qt:     <http://www.w3.org/2001/sw/DataAccess/tests/test-query#> .
@prefix dawgt:   <http://www.w3.org/2001/sw/DataAccess/tests/test-dawg#> .

<>  rdf:type mf:Manifest ;
    rdfs:label "Casting" ;
    mf:entries
    (   
        :cast-bool
        :cast-int
        :cast-float
        :cast-double
        :cast-decimal
        :cast-string
    ) .

:cast-bool rdf:type mf:QueryEvaluationTest ;
    mf:name    "xsd:boolean cast" ;
    dawgt:approval dawgt:Proposed ;
     mf:action
        [ qt:query  <cast-bool.rq> ;
          qt:data   <data.ttl>  ] ;
     mf:result  <cast-bool.srx> .

:cast-int rdf:type mf:QueryEvaluationTest ;
    mf:name    "xsd:integer cast" ;
    dawgt:approval dawgt:Proposed ;
     mf:action
        [ qt:query  <cast-int.rq> ;
          qt:data   <data.ttl>  ] ;
     mf:result  <cast-int.srx> .

:cast-float rdf:type mf:QueryEvaluationTest ;
    mf:name    "xsd:float cast" ;
    dawgt:approval dawgt:Proposed ;
     mf:action
        [ qt:query  <cast-float.rq> ;
          qt:data   <data.ttl>  ] ;
     mf:result  <cast-float.srx> .

:cast-double rdf:type mf:QueryEvaluationTest ;
    mf:name    "xsd:double cast" ;
    dawgt:approval dawgt:Proposed ;
     mf:action
        [ qt:query  <cast-double.rq> ;
          qt:data   <data.ttl>  ] ;
     mf:result  <cast-double.srx> .

:cast-decimal rdf:type mf:QueryEvaluationTest ;
    mf:name    "xsd:decimal cast" ;
    dawgt:approval dawgt:Proposed ;
     mf:action
        [ qt:query  <cast-decimal.rq> ;
          qt:data   <data.ttl>  ] ;
     mf:result  <cast-decimal.srx> .

:cast-string rdf:type mf:QueryEvaluationTest ;
    mf:name    "xsd:string cast" ;
    dawgt:approval dawgt:Proposed ;
     mf:action
        [ qt:query  <cast-string.rq> ;
          qt:data   <data.ttl>  ] ;
     mf:result  <cast-string.srx> .
